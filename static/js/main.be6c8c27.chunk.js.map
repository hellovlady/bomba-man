{"version":3,"sources":["utils/game.ts","store/redux/reducers/game/constants.tsx","app.ts","utils/math.ts","components/LoadingIndicator/index.tsx","utils/react.ts","store/redux/reducers/game/selectors.tsx","utils/loadable.tsx","api/GameUpdater.ts","api/GameUtils.ts","components/LoadingIndicator/LoadingIndicator.tsx","routes/pages-and-roles.tsx","routes/constants.ts","enums.ts","utils/immer.ts","api/LocalGameUpdater.ts","store/redux/reducers/game/reducer.tsx","store/redux/reducers/index.tsx","store/redux/index.ts","store/firebase/index.tsx","containers/ThemeProvider/ThemeProvider.tsx","components/ErrorBoundary/ErrorBoundary.tsx","routes/RouteWrapper.tsx","routes/Routes.tsx","containers/App/Links.tsx","containers/App/App.tsx","reportWebVitals.ts","index.tsx","theme.ts","config.ts","routes/types.ts","routes/utils.ts"],"names":["ExplosionDirection","topLeftCoordinatesToSquareCoordinates","movementSize","ySquare","top","xSquare","left","squareCoordinatesToTopLeftCoordinates","getTopLeftCoordinatesFromSquareOrSquareCoordinates","coordinates","undefined","_coordinates","getSquareCoordinatesFromSquareOrTopLeftCoordinates","getDefaultPlayerStartSquareCoordinates","mapSize","maxSize","P1","P2","P3","P4","generateRandomGameMap","blockTileChance","forbiddenCoordinates","_forbiddenCoordinates","defaultSquareCoordinates","xyDiff","Object","values","reduce","acc","squareCoordinates","ind","currentDiff","push","i","getForbiddenStartCoordinates","tiles","keys","Tile","Array","fill","sizedArray","randomMap","accOuter","_","indOuter","accInner","__","indInner","getRandomInt","length","forEach","Empty","getDefaultPowerUps","PowerUp","powerUpKey","generatePlayer","playerId","config","keyboardConfig","sizes","map","movement","topLeftCoordinates","id","state","deathCount","powerUps","direction","Direction","DOWN","isWalking","isNPC","generateDefaultGameConfig","chance","defaults","Life","BombCount","BombSize","MovementSpeed","increaseValues","maxDropCount","character","tile","duration","bomb","firing","exploding","players","humanPlayers","npcPlayers","generateDefaultGameState","_config","blockDensity","gameConfig","gameMap","bombs","is3D","isSideView","animationCounter","isSquareOutOfBoundaries","maxTopLeft","canMove","newSquareCoordinates","nextSquare","Breaking","NonBreaking","Explosive","Bomb","isSquareAnObstacle","CUBE_BASE_TRANSFORM","ROTATION_REGEX","Axis","X","REPLACE","FIND","Y","handleRotateMove","characterRef","movementSpeed","style","transition","transform","originalTransform","rotate","side","LEFT","UP","replace","rotateMove","handleMove","onComplete","ref","playerConfig","newTop","newLeft","RIGHT","hasMoved","newCoordinates","setTimeout","getTilesToBreak","tilesToBreak","isSquareOutsideBoundaries","squareCoordinate","getExplosionSquareCoordinatesFromBomb","explosionSize","checkOnlyFire","bombX","bombY","bombSquareCoordinates","explosionCoordinates","HORIZONTAL","VERTICAL","CORE","pushCurrentCoordinates","explosionDirection","directions","currentX","currentY","currentDirection","shouldContinue","j","xDiff","yDiff","currentSquare","FireHorizontal","FireVertical","getExplosionResults","bombCoordinates","coordinatesToSetOnFire","explosionSquares","v","getPoweredUpValue","playerState","type","powerUpConfig","generateBomb","Date","getTime","toString","mapAllPossibleKeyboardKeysForAction","actionKey","getMoveDirectionFromKeyboardCode","keyCode","isKeyPressed","includes","shouldTakeAction","keyMap","currentlyPressedKeys","current","filter","mappedKey","possibleKeysForAction","some","pressedKey","getMoveDirectionFromKeyMap","multi","Boolean","generatePowerUpOrNull","powerUpChance","possiblePowerUpOrNulls","isPowerUp","square","isPlayerSteppingOnFire","playerCoordinates","FIRE_VALUES","isPlayerDead","mapPlayersToGamePlayers","PlayerCondition","Dead","Alive","KEY","DEFAULT_VALUES","SET_GAME_STATE","START_GAME","END_GAME","SET_GAME_MAP","CHANGE_DIRECTION","CHANGE_IS_WALKING","MAKE_MOVE","TRIGGER_MOVE","DROP_BOMB","TRIGGER_EXPLOSION","ON_EXPLOSION_COMPLETE","TRIGGER_GAME_ANIMATION","TOGGLE_GAME_DIMENSION","TOGGLE_GAME_PERSPECTIVE","TOGGLE_GAME_TWO_PLAYER","TOGGLE_GAME_NPC","__IS_DEV__","process","min","max","_max","_min","Math","floor","random","getElementFromElementOrType","elementOrType","Error","isValidElement","createElement","selectGameProps","makeSelectGameConfig","createSelector","makeSelectGameState","loadable","loadFn","fallback","cacheKey","color","noFallback","fallbackOption","cacheKeyOption","props","options","baseLoadable","GameUpdater","GameUtils","updaters","getPlayerState","getPowerUpOrNull","powerUpOrNull","err","console","error","getBombCountForPlayer","getBombSizeForPlayer","getMovementSpeedForPlayer","getBombToTriggerFromExplosion","currentBombId","bombToTrigger","find","t","l","setSquare","newSquare","updateGameMapSquare","populatePowerUps","powerUpCoordinates","addPowerUp","handlePlayerExplosionHit","currentFireCoordinates","playerXSquare","playerYSquare","incrementPlayerDeathCount","triggerChainExplosion","bombId","bombsToSkip","explosionToComplete","Set","currentBomb","bombSize","horizontal","vertical","fireCoordinates","core","FireCore","bId","add","setGameState","gameState","updateGameState","startGame","endGame","setGameMap","animatableGameMap","updateGameMap","updatePlayerDirection","newPlayerState","updatePlayerIsWalking","triggerMove","makeMove","newCoordinateYSquare","newCoordinateXSquare","lastCoordinates","lastCoordinateYSquare","lastCoordinateXSquare","powerUpOrEmptyTile","incrementPlayerPowerUp","updatePlayerCoordinates","dropBomb","addBomb","triggerExplosion","cb","explosionsToComplete","onExplosionComplete","removeBomb","flat","removePowerUp","triggerGameAnimation","incrementAnimationCounter","toggleGameDimension","toggleIs3D","toggleGamePerspective","toggleIsSideView","toggleGameTwoPlayer","removePlayer","Player","addPlayer","toggleGameNpc","Wrapper","styled","div","$fullSize","$fullWidth","Explosion","$color","css","keyframes","LoadingIndicator","fullSize","fullWidth","rest","PAGE_ROLES","DEV","UserRoles","LOGGED_IN","GENERIC_USER","LazyHome","LazyLocal","LazyInstructions","LazyGameEnd","LazyRoomCreator","LazyOnline","LazyJoin","LazyWaitingRoom","LazyProfile","LazyNotFound","LazyUnauthorized","LazyLogin","LazySignUp","PRIVATE_ROUTES","title","description","path","component","mapRoles","ROUTE_LIST","to","BASE_PATH","authorizing","mapBasePathForRoutes","SHARED_DISPLAY_PAGES","label","tooltip","text","mapBasePathForLinks","NAV_LIST","ExplosionState","GameType","GameEndCondition","updateImmerDraft","draft","payload","key","LocalGameUpdater","a","updatePlayers","updatePlayer","updatePlayerId","player","updatePlayerState","powerUp","animate","gameReducer","action","produce","gameUpdater","gameUtils","rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","gameKey","configureStore","initialState","middleware","thunkMiddleware","enhancer","applyMiddleware","createStore","composeWithDevTools","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","reactReduxFirebaseConfig","userProfile","profileFactory","user","profile","email","providerData","roles","ThemeProvider","children","themeConfig","getMuiTheme","useSelector","StylesProvider","injectFirst","theme","CssBaseline","$gameConfig","ErrorBoundary","hasError","message","errorInfo","this","setState","prevState","componentStack","padding","React","Component","RouteWrapper","displayName","userRoles","userName","useHistory","location","search","pathname","useLocation","referrerRoles","isAuthRequiredForTheCurrentPage","isAuthRequiredForTheReferrerPage","requiredRoles","isAuthRequired","render","renderProps","returnUrl","hasAnyFrom","Helmet","name","content","cloneElement","RedirectToNotFound","exact","referrer","Routes","LinkText","h1","palette","info","hover","Links","store","window","__redux_store","App","dispatch","createFirestoreInstance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","background","primary","secondary","warning","success","default","shape","borderRadius","game","size","spacing","s","THEME_CONFIG","themeFn","unstable_createMuiStrictModeTheme","createMuiTheme","responsiveFontSizes","GlobalStyles","createGlobalStyle","entries","colorKey","colorValue","lighten","fade","0","MoveUp","KeyCode","MoveRight","MoveDown","MoveLeft","DropBomb","1","route","link","source","from","e","indexOf"],"mappings":"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","file":"static/js/main.be6c8c27.chunk.js","sourcesContent":["import {\n\tCoordinates,\n\tGameMap,\n\tGamePlayers,\n\tKeyboardConfig,\n\tKeyboardEventCode,\n\tKeyMap,\n\tNextMoveProps,\n\tNonNullablePlayerRef,\n\tPlayerActionKeys,\n\tPlayerConfig,\n\tPlayerId,\n\tPlayerRef,\n\tPlayers,\n\tPlayerState,\n\tPowerUpOrNull,\n\tPowerUps,\n\tSquare,\n\tSquareCoordinates,\n\tTopLeftCoordinates,\n} from 'containers/Game/types';\nimport {\n\tAxis,\n\tDirection,\n\tPowerUp,\n\tTile,\n\tExplosive,\n\tFIRE_VALUES,\n\tPlayer,\n\tPlayerCondition,\n} from 'enums';\nimport {\n\tOnMove,\n\tBomb,\n\tGameConfigRanges,\n\tGameState,\n\tGameConfig,\n} from 'store/redux/reducers/game/types';\nimport gameConfig from 'config';\nimport { getRandomInt } from './math';\n\n/**\n * Converts from pixel to square.\n *\n * @param coordinates Top Left Coordinates.\n * @returns Square version of the coordinates.\n */\nconst topLeftCoordinatesToSquareCoordinates = (\n\t{ top, left }: TopLeftCoordinates,\n\tmovementSize: GameConfigRanges.MovementSize\n) => {\n\treturn {\n\t\tySquare: top / movementSize,\n\t\txSquare: left / movementSize,\n\t};\n};\n\n/**\n * Converts from square to pixel.\n *\n * @param coordinates Square Coordinates.\n * @returns Pixel (top, left) version of the coordinates.\n */\nconst squareCoordinatesToTopLeftCoordinates = (\n\t{ xSquare, ySquare }: SquareCoordinates,\n\tmovementSize: GameConfigRanges.MovementSize\n): TopLeftCoordinates => {\n\treturn {\n\t\ttop: ySquare * movementSize,\n\t\tleft: xSquare * movementSize,\n\t};\n};\n\nconst getTopLeftCoordinatesFromSquareOrSquareCoordinates = (\n\tcoordinates: Coordinates,\n\tmovementSize: GameConfigRanges.MovementSize\n) => {\n\tlet top;\n\tlet left;\n\n\tif ((coordinates as SquareCoordinates).xSquare !== undefined) {\n\t\tconst _coordinates = squareCoordinatesToTopLeftCoordinates(\n\t\t\tcoordinates as SquareCoordinates,\n\t\t\tmovementSize\n\t\t);\n\t\ttop = _coordinates.top;\n\t\tleft = _coordinates.left;\n\t} else {\n\t\ttop = (coordinates as TopLeftCoordinates).top;\n\t\tleft = (coordinates as TopLeftCoordinates).left;\n\t}\n\treturn { top, left };\n};\n\nconst getSquareCoordinatesFromSquareOrTopLeftCoordinates = (\n\tcoordinates: Coordinates,\n\tmovementSize: GameConfigRanges.MovementSize\n) => {\n\tlet xSquare;\n\tlet ySquare;\n\n\tif ((coordinates as SquareCoordinates).xSquare !== undefined) {\n\t\txSquare = (coordinates as SquareCoordinates).xSquare;\n\t\tySquare = (coordinates as SquareCoordinates).ySquare;\n\t} else {\n\t\tconst _coordinates = topLeftCoordinatesToSquareCoordinates(\n\t\t\tcoordinates as TopLeftCoordinates,\n\t\t\tmovementSize\n\t\t);\n\t\txSquare = _coordinates.xSquare;\n\t\tySquare = _coordinates.ySquare;\n\t}\n\treturn { xSquare, ySquare };\n};\n\nconst getDefaultPlayerStartSquareCoordinates = (\n\tmapSize: GameConfigRanges.MapSize\n): Record<PlayerId, SquareCoordinates> => {\n\tconst minSize = 0;\n\tconst maxSize = mapSize - 1;\n\treturn {\n\t\tP1: { ySquare: minSize, xSquare: minSize },\n\t\tP2: { ySquare: minSize, xSquare: maxSize },\n\t\tP3: { ySquare: maxSize, xSquare: maxSize },\n\t\tP4: { ySquare: maxSize, xSquare: minSize },\n\t};\n};\n\nconst getForbiddenStartCoordinates = (\n\tmapSize: GameConfigRanges.MapSize\n): SquareCoordinateArray => {\n\tconst defaultSquareCoordinates = getDefaultPlayerStartSquareCoordinates(\n\t\tmapSize\n\t);\n\n\t// used to calculate the next square\n\t// value to add to currentX and currentY square coordinates\n\tconst xyDiff = [\n\t\t[1, 1], // TopLeft\n\t\t[-1, 1], // TopRight\n\t\t[-1, -1], // BottomRight\n\t\t[1, -1], // BottomLeft\n\t];\n\n\treturn Object.values(\n\t\tdefaultSquareCoordinates\n\t).reduce<SquareCoordinateArray>((acc, squareCoordinates, ind) => {\n\t\tconst { xSquare, ySquare } = squareCoordinates;\n\t\tconst currentDiff = xyDiff[ind];\n\t\t// player's coordinate\n\t\tacc.push(squareCoordinates);\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t// horizontal adjacent square coordinate\n\t\t\tif (i === 0) {\n\t\t\t\tacc.push({\n\t\t\t\t\txSquare: xSquare + currentDiff[i],\n\t\t\t\t\tySquare,\n\t\t\t\t});\n\t\t\t\t// vertical adjacent square coordinate\n\t\t\t} else {\n\t\t\t\tacc.push({\n\t\t\t\t\txSquare,\n\t\t\t\t\tySquare: ySquare + currentDiff[i],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn acc;\n\t}, []);\n};\n\nconst generateRandomGameMap = (\n\tmapSize: GameConfigRanges.MapSize,\n\tblockTileChance: GameConfigRanges.BlockTileChance,\n\tforbiddenCoordinates?: SquareCoordinateArray\n): GameMap => {\n\tconst _forbiddenCoordinates =\n\t\tforbiddenCoordinates || getForbiddenStartCoordinates(mapSize);\n\tconst tiles: Array<KeysOf<typeof Tile>> = [\n\t\t...Object.keys(Tile),\n\t\t// reverse block density, we want that many Emptys\n\t\t...Array(11 - blockTileChance).fill('Empty'),\n\t];\n\tconst sizedArray = Array(mapSize).fill(0);\n\n\tconst randomMap = sizedArray.reduce((accOuter, _, indOuter) => {\n\t\taccOuter[indOuter] = sizedArray.reduce((accInner, __, indInner) => {\n\t\t\taccInner[indInner] = Tile[tiles[getRandomInt(tiles.length)]];\n\t\t\treturn accInner;\n\t\t}, {});\n\t\treturn accOuter;\n\t}, {});\n\t// ensure we don't fill the char beginning squares with blocks\n\t_forbiddenCoordinates.forEach(({ ySquare, xSquare }) => {\n\t\tif (randomMap[ySquare][xSquare] !== Tile.Empty) {\n\t\t\trandomMap[ySquare][xSquare] = Tile.Empty;\n\t\t}\n\t});\n\n\treturn randomMap;\n};\n\nconst getDefaultPowerUps = () => {\n\treturn Object.values(PowerUp).reduce<DynamicObject>((acc, powerUpKey) => {\n\t\tacc[powerUpKey] = 0;\n\t\treturn acc;\n\t}, {}) as PowerUps;\n};\n\nconst generatePlayer = (\n\tplayerId: PlayerId,\n\tconfig: GameConfig,\n\t// optional because NPC doesn't have one\n\tkeyboardConfig: KeyboardConfig = null,\n\tcoordinates?: Coordinates\n): PlayerConfig => {\n\tconst {\n\t\tsizes: { map: mapSize, movement: movementSize },\n\t} = config;\n\n\t// eslint-disable-next-line max-len\n\tconst topLeftCoordinates = getTopLeftCoordinatesFromSquareOrSquareCoordinates(\n\t\tcoordinates ||\n\t\t\tgetDefaultPlayerStartSquareCoordinates(mapSize)[playerId],\n\t\tmovementSize\n\t);\n\n\treturn {\n\t\tid: playerId,\n\t\tcoordinates: topLeftCoordinates,\n\t\tstate: {\n\t\t\tdeathCount: 0,\n\t\t\tpowerUps: getDefaultPowerUps(),\n\t\t},\n\t\tkeyboardConfig,\n\t\tdirection: Direction.DOWN,\n\t\tisWalking: false,\n\t\tisNPC: !keyboardConfig,\n\t};\n};\n\nconst generatePlayers = (\n\tconfig: GameConfig\n): Record<PlayerId, PlayerConfig> => {\n\tconst defaultCoordinates = getDefaultPlayerStartSquareCoordinates(\n\t\tconfig.sizes.map\n\t);\n\n\tconst {\n\t\t'0': p1KeyboardConfig,\n\t\t'1': p2KeyboardConfig,\n\t} = gameConfig.keyboardConfig;\n\n\treturn {\n\t\tP1: generatePlayer(\n\t\t\tPlayer.P1,\n\t\t\tconfig,\n\t\t\t{ '0': p1KeyboardConfig },\n\t\t\tdefaultCoordinates.P1\n\t\t),\n\t\tP2: generatePlayer(\n\t\t\tPlayer.P2,\n\t\t\tconfig,\n\t\t\t{ '1': p2KeyboardConfig },\n\t\t\tdefaultCoordinates.P2\n\t\t),\n\t\tP3: generatePlayer(Player.P3, config, null, defaultCoordinates.P3),\n\t\tP4: generatePlayer(Player.P4, config, null, defaultCoordinates.P4),\n\t};\n};\n\nconst generateDefaultGameConfig = (): GameConfig => {\n\treturn {\n\t\tpowerUps: {\n\t\t\tchance: 5,\n\t\t\tdefaults: {\n\t\t\t\t[PowerUp.Life]: 1,\n\t\t\t\t[PowerUp.BombCount]: 1,\n\t\t\t\t[PowerUp.BombSize]: 1,\n\t\t\t\t[PowerUp.MovementSpeed]: 200,\n\t\t\t},\n\t\t\tincreaseValues: {\n\t\t\t\t[PowerUp.Life]: 1,\n\t\t\t\t[PowerUp.BombCount]: 1,\n\t\t\t\t[PowerUp.BombSize]: 1,\n\t\t\t\t[PowerUp.MovementSpeed]: -15,\n\t\t\t},\n\t\t\tmaxDropCount: {\n\t\t\t\t[PowerUp.Life]: 2,\n\t\t\t\t[PowerUp.BombCount]: 6,\n\t\t\t\t[PowerUp.BombSize]: 6,\n\t\t\t\t[PowerUp.MovementSpeed]: 4,\n\t\t\t},\n\t\t},\n\t\ttiles: {\n\t\t\tblockTileChance: 9,\n\t\t},\n\t\tsizes: {\n\t\t\tmap: 15,\n\t\t\tcharacter: 32,\n\t\t\ttile: 32,\n\t\t\tmovement: 32,\n\t\t},\n\t\tduration: {\n\t\t\tbomb: {\n\t\t\t\tfiring: 2,\n\t\t\t\texploding: 1,\n\t\t\t},\n\t\t},\n\t\tplayers: {\n\t\t\thumanPlayers: 1,\n\t\t\tnpcPlayers: 3,\n\t\t},\n\t\t// keyboardConfig: {\n\t\t// \tP1: {\n\t\t// \t\tMoveUp: KeyCode.CODE_W,\n\t\t// \t\tMoveRight: KeyCode.CODE_D,\n\t\t// \t\tMoveDown: KeyCode.CODE_S,\n\t\t// \t\tMoveLeft: KeyCode.CODE_A,\n\t\t// \t\tDropBomb: KeyCode.CODE_SPACE,\n\t\t// \t},\n\t\t// \tP2: {\n\t\t// \t\tMoveUp: KeyCode.CODE_UP,\n\t\t// \t\tMoveRight: KeyCode.CODE_RIGHT,\n\t\t// \t\tMoveDown: KeyCode.CODE_DOWN,\n\t\t// \t\tMoveLeft: KeyCode.CODE_LEFT,\n\t\t// \t\tDropBomb: KeyCode.CODE_SEMICOLON,\n\t\t// \t},\n\t\t// },\n\t};\n};\n\nconst generateDefaultGameState = (config?: GameConfig): GameState => {\n\tconst _config = config || generateDefaultGameConfig();\n\tconst {\n\t\tsizes: { map: mapSize },\n\t\ttiles: { blockTileChance: blockDensity },\n\t} = _config;\n\n\tconst players: Players = {};\n\n\tfor (let i = 0; i < _config.players.npcPlayers; i++) {\n\t\tconst playerId = `P${4 - i}` as PlayerId;\n\t\tplayers[playerId] = generatePlayer(playerId, _config);\n\t}\n\n\t// online mode will auto assign players so this is only for local\n\tfor (let i = 0; i < (_config.players.humanPlayers || 0); i++) {\n\t\tconst playerId = `P${i + 1}` as PlayerId;\n\t\tplayers[playerId] = generatePlayer(playerId, _config, {\n\t\t\t[i]: gameConfig.keyboardConfig[i],\n\t\t});\n\t}\n\n\treturn {\n\t\tplayers,\n\t\tgameMap: generateRandomGameMap(mapSize, blockDensity),\n\t\tbombs: {},\n\t\tpowerUps: {},\n\t\tconfig: _config,\n\t\tis3D: false,\n\t\tisSideView: false,\n\t\tanimationCounter: 0,\n\t};\n};\n\nconst isSquareAnObstacle = (\n\tgameMap: GameMap,\n\t{ xSquare, ySquare }: SquareCoordinates\n) => {\n\tconst nextSquare = gameMap[ySquare]?.[xSquare];\n\n\treturn (\n\t\tnextSquare === Tile.Breaking ||\n\t\tnextSquare === Tile.NonBreaking ||\n\t\tnextSquare === Explosive.Bomb\n\t);\n};\n\nconst isSquareOutOfBoundaries = (\n\t{ xSquare, ySquare }: SquareCoordinates,\n\tmapSize: GameConfigRanges.MapSize\n) => {\n\tconst minTopLeft = 0;\n\tconst maxTopLeft = mapSize - 1;\n\n\tconst beyondHorizontalEnd = xSquare < minTopLeft || xSquare > maxTopLeft;\n\tconst beyondVerticalEnd = ySquare < minTopLeft || ySquare > maxTopLeft;\n\n\treturn beyondHorizontalEnd || beyondVerticalEnd;\n};\n\nconst canMove = (\n\tcoordinates: Coordinates,\n\tgameMap: GameMap,\n\t{ map: mapSize, movement: movementSize }: GameConfig['sizes']\n) => {\n\t// eslint-disable-next-line max-len\n\tconst newSquareCoordinates = getSquareCoordinatesFromSquareOrTopLeftCoordinates(\n\t\tcoordinates,\n\t\tmovementSize\n\t);\n\treturn (\n\t\t!isSquareAnObstacle(gameMap, newSquareCoordinates) &&\n\t\t!isSquareOutOfBoundaries(newSquareCoordinates, mapSize)\n\t);\n};\n\nconst CUBE_BASE_TRANSFORM = `translateZ(calc(var(--tile-size) / 2 * 1px)) rotateX(0deg) rotateY(0deg) scale(1, 1)`;\n/**\n * Since we are moving a flat plane and not a cube, the logical sense of\n * rotating a cube doesn't work. Different type of rotations do no always\n * help. One solution is resetting the rotation to 0 so the rotation\n * movement is smooth on each rotation without worrying about boundaries.\n *\n * NOTE: We need to be aware of the animation cancelling\n *\n * @param characterRef ref object\n */\nconst resetRotation = (characterRef: NonNullable<PlayerRef>) => {\n\t// disable animation\n\tcharacterRef.style.transition = '0ms';\n\t// reset\n\tcharacterRef.style.transform = CUBE_BASE_TRANSFORM;\n};\n\nconst ROTATION_REGEX = {\n\t[Axis.X]: {\n\t\tREPLACE: /rotateX\\(-?\\d+deg\\)/g,\n\t\tFIND: /rotateX\\((?<degree>-?\\d+)deg\\)/,\n\t},\n\t[Axis.Y]: {\n\t\tREPLACE: /rotateY\\(-?\\d+deg\\)/g,\n\t\tFIND: /rotateY\\((?<degree>-?\\d+)deg\\)/,\n\t},\n};\n\nconst rotateMove = (originalTransform: string, direction: Direction) => {\n\tlet rotate = 90;\n\tlet side = Axis.Y;\n\tif (direction === Direction.DOWN || direction === Direction.LEFT) {\n\t\trotate *= -1;\n\t}\n\tif (direction === Direction.UP || direction === Direction.DOWN) {\n\t\tside = Axis.X;\n\t}\n\n\treturn originalTransform.replace(\n\t\tROTATION_REGEX[side].REPLACE,\n\t\t`rotate${side}(${rotate}deg)`\n\t);\n};\n\nconst handleRotateMove = (\n\tcharacterRef: NonNullablePlayerRef,\n\tdirection: Direction,\n\tmovementSpeed: number\n) => {\n\t/* eslint-disable no-param-reassign */\n\t// enable animation\n\tcharacterRef.style.transition = `${movementSpeed}ms`;\n\t// move\n\tcharacterRef.style.transform = rotateMove(\n\t\tcharacterRef.style.transform,\n\t\tdirection\n\t);\n\t/* eslint-enable no-param-reassign */\n};\n\nconst handleMove = (\n\t{\n\t\tplayerConfig: {\n\t\t\tid: playerId,\n\t\t\tcoordinates: { top, left },\n\t\t},\n\t\tdirection,\n\t\tis3D,\n\t\tgameMap,\n\t}: NextMoveProps,\n\tmovementSpeed: number,\n\tonComplete: OnMove,\n\tref: NonNullablePlayerRef,\n\tsizes: GameConfig['sizes']\n) => {\n\tif (!direction) return;\n\n\tconst { movement } = sizes;\n\n\tlet newTop = top;\n\tlet newLeft = left;\n\tswitch (direction) {\n\t\tcase Direction.UP:\n\t\t\tnewTop = top - movement;\n\t\t\tbreak;\n\t\tcase Direction.RIGHT:\n\t\t\tnewLeft = left + movement;\n\t\t\tbreak;\n\t\tcase Direction.DOWN:\n\t\t\tnewTop = top + movement;\n\t\t\tbreak;\n\t\tcase Direction.LEFT:\n\t\t\tnewLeft = left - movement;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// do nothing\n\t\t\tbreak;\n\t}\n\tlet hasMoved = true;\n\tconst newCoordinates = {\n\t\ttop: newTop,\n\t\tleft: newLeft,\n\t};\n\tif (!canMove(newCoordinates, gameMap, sizes)) {\n\t\tnewCoordinates.top = top;\n\t\tnewCoordinates.left = left;\n\t\thasMoved = false;\n\t}\n\n\tif (is3D) resetRotation(ref);\n\t// TODO: Do a write-up on this\n\t// this complexity is required for a smooth 3d rotate move\n\t// since we are resetting rotation css, we need an async\n\t// event so that the animation can display smoothly\n\tsetTimeout(() => {\n\t\tif (is3D) handleRotateMove(ref, direction, movementSpeed);\n\t\tonComplete({\n\t\t\tplayerId,\n\t\t\tnewCoordinates,\n\t\t\tdirection,\n\t\t\thasMoved,\n\t\t});\n\t}, 0);\n};\n\n/**\n * Gets the scale size for an explosion size.\n * - `explosionSize + 1`: explosion size is exclusive of the current square\n * - `* 2`: explosion goes both ways\n * - `- 1`: don't count the root square twice\n * - `* 2`: revert the padding\n *\n * @param explosionSize Size of the explosion.\n * @returns Scale size.\n */\nconst getExplosionScaleSize = (explosionSize: number) => {\n\treturn ((explosionSize + 1) * 2 - 1) * 2;\n};\n\ntype SquareCoordinateArray = Array<SquareCoordinates>;\ntype TilesToBreak = SquareCoordinateArray;\nenum ExplosionDirection {\n\tHORIZONTAL = 'horizontal',\n\tVERTICAL = 'vertical',\n\tCORE = 'core',\n}\ntype CoordinatesToSetOnFire = {\n\t[ExplosionDirection.HORIZONTAL]: SquareCoordinateArray;\n\t[ExplosionDirection.VERTICAL]: SquareCoordinateArray;\n\t[ExplosionDirection.CORE]: SquareCoordinateArray;\n};\n\nconst getTilesToBreak = (\n\tgameMap: GameMap,\n\tySquare: number,\n\txSquare: number\n) => {\n\tconst tilesToBreak: TilesToBreak = [];\n\tif (gameMap[ySquare][xSquare] === Tile.Breaking) {\n\t\ttilesToBreak.push({ ySquare, xSquare });\n\t}\n\n\treturn tilesToBreak;\n};\n\nconst isSquareOutsideBoundaries = (\n\tsquareCoordinate: number,\n\tmapSize: GameConfigRanges.MapSize\n) => {\n\treturn squareCoordinate < 0 || squareCoordinate >= mapSize;\n};\n\nconst getExplosionSquareCoordinatesFromBomb = (\n\tgameMap: GameMap,\n\tcoordinates: Coordinates,\n\texplosionSize: number,\n\t{ map: mapSize, movement: movementSize }: GameConfig['sizes'],\n\t/** only returns fire locations */\n\tcheckOnlyFire = false\n) => {\n\t/* \n\t\t===========================\n\t\t# LOGIC\n\t\t===========================\n\t\t> Legend\n\t\t\t- Empty = 'T1',\n\t\t\t- Breaking = 'T2',\n\t\t\t- NonBreaking = 'T3',\n\t\t\t- Bomb = 'B',\n\t\t> Config\n\t\t\t- bombSize = 3\n\t\t> Current Test Row\n\t\t \t- [T1, T1, T3, B, T1, T2, T2]\n\t\t \t\t\t\t       ^  ^ these ones\n\t\t> Check neighbors (<>: check, x: stop on side):\n\t\t \t- [T1, T1, T3, <B>, T1, T2, T2]\n\n\t\t \t- [T1, T1, T3, <B, T1>, T2, T2]\n\t\t\t\t\t\tx\n\t\t\t- [T1, T1, T3, <B, T1, T2>, T2]\n\n\t\t\t- [T1, T1, T3, <B, T1, T2>, T2]\n\t\t\t\t\t\t\t\t\t\tx\n\n\t\t> Stop checking when you hit a T2 or T3\n\t\t\t- If T2, include it in the list\n\t\t\n\t*/\n\n\tconst {\n\t\txSquare: bombX,\n\t\tySquare: bombY,\n\t} = getSquareCoordinatesFromSquareOrTopLeftCoordinates(\n\t\tcoordinates,\n\t\tmovementSize\n\t);\n\tconst bombSquareCoordinates = { xSquare: bombX, ySquare: bombY };\n\tconst explosionCoordinates: CoordinatesToSetOnFire = {\n\t\t[ExplosionDirection.HORIZONTAL]: [],\n\t\t[ExplosionDirection.VERTICAL]: [],\n\t\t[ExplosionDirection.CORE]: [bombSquareCoordinates],\n\t};\n\n\tconst pushCurrentCoordinates = (\n\t\txSquare: number,\n\t\tySquare: number,\n\t\texplosionDirection: ExplosionDirection\n\t) => {\n\t\texplosionCoordinates[explosionDirection].push({\n\t\t\txSquare,\n\t\t\tySquare,\n\t\t});\n\t};\n\n\t// used to calculate the next square\n\t// value to add to currentX and currentY square coordinates\n\tconst xyDiff = [\n\t\t[0, -1], // Up\n\t\t[1, 0], // Right\n\t\t[0, 1], // Down\n\t\t[-1, 0], // Left\n\t];\n\n\t// required for proper animation\n\t// (expanding in scale X or Y)\n\tconst directions = [\n\t\tExplosionDirection.VERTICAL,\n\t\tExplosionDirection.HORIZONTAL,\n\t\tExplosionDirection.VERTICAL,\n\t\tExplosionDirection.HORIZONTAL,\n\t];\n\n\t// check all sides\n\tfor (let i = 0; i < 4; i++) {\n\t\tlet currentX = bombX;\n\t\tlet currentY = bombY;\n\t\tconst currentDirection = directions[i];\n\t\tlet shouldContinue = true;\n\n\t\t// loop until the end of the explosion\n\t\tfor (let j = 0; j < explosionSize; j++) {\n\t\t\tif (!shouldContinue) continue;\n\n\t\t\tconst [xDiff, yDiff] = xyDiff[i];\n\t\t\tcurrentX += xDiff;\n\t\t\tcurrentY += yDiff;\n\n\t\t\t// don't go out of boundaries\n\t\t\tif (\n\t\t\t\tisSquareOutsideBoundaries(currentX, mapSize) ||\n\t\t\t\tisSquareOutsideBoundaries(currentY, mapSize)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst currentSquare = gameMap[currentY][currentX];\n\t\t\tif (checkOnlyFire) {\n\t\t\t\t// if it's not a fire, then we reached the end\n\t\t\t\tif (\n\t\t\t\t\tcurrentSquare !== Explosive.FireHorizontal &&\n\t\t\t\t\tcurrentSquare !== Explosive.FireVertical\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tpushCurrentCoordinates(currentX, currentY, currentDirection);\n\t\t\t}\n\t\t\tswitch (currentSquare) {\n\t\t\t\tcase Tile.Breaking:\n\t\t\t\t\tpushCurrentCoordinates(\n\t\t\t\t\t\tcurrentX,\n\t\t\t\t\t\tcurrentY,\n\t\t\t\t\t\tcurrentDirection\n\t\t\t\t\t);\n\t\t\t\t\tshouldContinue = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase Tile.NonBreaking:\n\t\t\t\t\tshouldContinue = false;\n\t\t\t\t\tbreak;\n\t\t\t\t// Tile.Empty, Explosive.Bomb, Player.[any], PowerUps.[any]\n\t\t\t\tdefault:\n\t\t\t\t\tpushCurrentCoordinates(\n\t\t\t\t\t\tcurrentX,\n\t\t\t\t\t\tcurrentY,\n\t\t\t\t\t\tcurrentDirection\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn explosionCoordinates;\n};\n\n/**\n * Breaking tiles are \"exploded\" and removed from the map.\n *\n * @param gameMap Current state of the game map.\n * @param bombCoordinates TopLeft coordinates of where the bomb is placed.\n * @param explosionSize Size of the explosion.\n * @returns New state for the game map with breaking tiles emptied.\n */\nconst getExplosionResults = (\n\tgameMap: GameMap,\n\tbombCoordinates: TopLeftCoordinates,\n\texplosionSize: number,\n\tsizes: GameConfig['sizes'],\n\t/** only returns fire locations */\n\tcheckOnlyFire = false\n) => {\n\tconst tilesToBreak: TilesToBreak = [];\n\tconst coordinatesToSetOnFire: CoordinatesToSetOnFire = {\n\t\t[ExplosionDirection.HORIZONTAL]: [],\n\t\t[ExplosionDirection.VERTICAL]: [],\n\t\t[ExplosionDirection.CORE]: [],\n\t};\n\n\tconst explosionSquares = getExplosionSquareCoordinatesFromBomb(\n\t\tgameMap,\n\t\tbombCoordinates,\n\t\texplosionSize,\n\t\tsizes,\n\t\tcheckOnlyFire\n\t);\n\t// { horizontal, vertical }\n\t(Object.keys(explosionSquares) as Array<ExplosionDirection>).forEach(\n\t\texplosionDirection => {\n\t\t\texplosionSquares[explosionDirection].forEach(\n\t\t\t\t({ ySquare, xSquare }) => {\n\t\t\t\t\tcoordinatesToSetOnFire[explosionDirection].push({\n\t\t\t\t\t\txSquare,\n\t\t\t\t\t\tySquare,\n\t\t\t\t\t});\n\t\t\t\t\tgetTilesToBreak(gameMap, ySquare, xSquare).forEach(v => {\n\t\t\t\t\t\ttilesToBreak.push(v);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t);\n\n\treturn { coordinatesToSetOnFire, tilesToBreak };\n};\n\nconst getPoweredUpValue = (\n\tplayerState: PlayerState,\n\ttype: PowerUp,\n\tpowerUpConfig: GameConfig['powerUps']\n) => {\n\treturn (\n\t\tpowerUpConfig.defaults[type] +\n\t\tplayerState.powerUps[type] * powerUpConfig.increaseValues[type]\n\t);\n};\n\nconst generateBomb = (\n\t{\n\t\tid: playerId,\n\t\tcoordinates: { top, left },\n\t\tstate: playerState,\n\t}: PlayerConfig,\n\tpowerUpConfig: GameConfig['powerUps']\n) => {\n\tconst explosionSize = getPoweredUpValue(\n\t\tplayerState,\n\t\tPowerUp.BombSize,\n\t\tpowerUpConfig\n\t);\n\tconst bomb: Bomb = {\n\t\tid: new Date().getTime().toString(),\n\t\texplosionSize,\n\t\ttop,\n\t\tleft,\n\t\tplayerId,\n\t};\n\treturn bomb;\n};\n\nconst mapAllPossibleKeyboardKeysForAction = (\n\tkeyboardConfig: KeyboardConfig,\n\tactionKey: PlayerActionKeys\n) => {\n\tif (!keyboardConfig) return [];\n\treturn Object.values(keyboardConfig).map(\n\t\t({ [actionKey]: keyCode }) => keyCode\n\t);\n};\n\nconst getMoveDirectionFromKeyboardCode = (\n\tkeyCode: string,\n\tkeyboardConfig: KeyboardConfig\n) => {\n\tconst isKeyPressed = (actionKey: PlayerActionKeys) => {\n\t\treturn mapAllPossibleKeyboardKeysForAction(\n\t\t\tkeyboardConfig,\n\t\t\tactionKey\n\t\t).includes(keyCode as KeyboardEventCode);\n\t};\n\n\tswitch (true) {\n\t\tcase isKeyPressed('MoveUp'):\n\t\t\treturn Direction.UP;\n\t\tcase isKeyPressed('MoveRight'):\n\t\t\treturn Direction.RIGHT;\n\t\tcase isKeyPressed('MoveDown'):\n\t\t\treturn Direction.DOWN;\n\t\tcase isKeyPressed('MoveLeft'):\n\t\t\treturn Direction.LEFT;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nconst shouldTakeAction = (\n\tkeyMap: React.MutableRefObject<KeyMap>,\n\tkeyboardConfig: KeyboardConfig,\n\tactionKey: PlayerActionKeys\n) => {\n\t// Get the keys that are being pressed right now\n\tconst currentlyPressedKeys = Object.keys(keyMap.current).filter(\n\t\tmappedKey => {\n\t\t\treturn keyMap.current[mappedKey as KeyboardEventCode];\n\t\t}\n\t);\n\tconst possibleKeysForAction = mapAllPossibleKeyboardKeysForAction(\n\t\tkeyboardConfig,\n\t\tactionKey\n\t);\n\treturn currentlyPressedKeys.some(pressedKey => {\n\t\treturn possibleKeysForAction.includes(pressedKey as KeyboardEventCode);\n\t});\n};\n\nconst getMoveDirectionFromKeyMap = (\n\tkeyMap: React.MutableRefObject<KeyMap>,\n\tkeyboardConfig: KeyboardConfig,\n\tmulti = false\n) => {\n\tconst isKeyPressed = (actionKey: PlayerActionKeys) => {\n\t\treturn shouldTakeAction(keyMap, keyboardConfig, actionKey);\n\t};\n\n\treturn (multi\n\t\t? // record and play all keys that being held\n\t\t  [\n\t\t\t\tisKeyPressed('MoveUp') && Direction.UP,\n\t\t\t\tisKeyPressed('MoveRight') && Direction.RIGHT,\n\t\t\t\tisKeyPressed('MoveDown') && Direction.DOWN,\n\t\t\t\tisKeyPressed('MoveLeft') && Direction.LEFT,\n\t\t  ]\n\t\t: // handle single key down\n\t\t  [\n\t\t\t\t(isKeyPressed('MoveUp') && Direction.UP) ||\n\t\t\t\t\t(isKeyPressed('MoveRight') && Direction.RIGHT) ||\n\t\t\t\t\t(isKeyPressed('MoveDown') && Direction.DOWN) ||\n\t\t\t\t\t(isKeyPressed('MoveLeft') && Direction.LEFT),\n\t\t  ]\n\t).filter(Boolean) as Array<Direction>;\n};\n\nconst generatePowerUpOrNull = (\n\tpowerUpChance: GameConfigRanges.PowerUpChance\n) => {\n\tconst possiblePowerUpOrNulls: Array<KeysOf<KeysOf<PowerUpOrNull>>> = [\n\t\t...Object.values(PowerUp),\n\t\t// reverse block density, we want that many nulls\n\t\t...Array(6 - powerUpChance).fill(null),\n\t];\n\n\treturn possiblePowerUpOrNulls[getRandomInt(possiblePowerUpOrNulls.length)];\n};\n\nconst isPowerUp = (square: Square) => {\n\treturn Object.values(PowerUp).includes(square as PowerUp);\n};\n\nconst isPlayerSteppingOnFire = (\n\tgameMap: GameMap,\n\tplayerCoordinates: TopLeftCoordinates,\n\tmovementSize: GameConfigRanges.MovementSize\n) => {\n\tconst { xSquare, ySquare } = topLeftCoordinatesToSquareCoordinates(\n\t\tplayerCoordinates,\n\t\tmovementSize\n\t);\n\tconst currentSquare = gameMap[ySquare][xSquare];\n\n\treturn FIRE_VALUES.includes(currentSquare as Explosive);\n};\n\nconst isPlayerDead = (\n\tplayerState: PlayerState,\n\tpowerUpConfig: GameConfig['powerUps']\n) => {\n\treturn (\n\t\tplayerState.deathCount >=\n\t\tgetPoweredUpValue(playerState, PowerUp.Life, powerUpConfig)\n\t);\n};\n\nconst mapPlayersToGamePlayers = (\n\tplayers: Players,\n\tpowerUpConfig: GameConfig['powerUps']\n) => {\n\treturn Object.keys(players).reduce((acc, playerId) => {\n\t\tacc[playerId as PlayerId] = !isPlayerDead(\n\t\t\tplayers[playerId as PlayerId]!.state,\n\t\t\tpowerUpConfig\n\t\t)\n\t\t\t? PlayerCondition.Alive\n\t\t\t: PlayerCondition.Dead;\n\t\treturn acc;\n\t}, {} as GamePlayers);\n};\n\nexport {\n\tgenerateRandomGameMap,\n\tgeneratePlayer,\n\tgeneratePlayers,\n\tgenerateDefaultGameConfig,\n\tgenerateDefaultGameState,\n\tisSquareAnObstacle,\n\tisSquareOutOfBoundaries,\n\tcanMove,\n\trotateMove,\n\thandleRotateMove,\n\thandleMove,\n\tresetRotation,\n\tCUBE_BASE_TRANSFORM,\n\tgetExplosionScaleSize,\n\tgetExplosionResults,\n\tgenerateBomb,\n\tmapAllPossibleKeyboardKeysForAction,\n\tshouldTakeAction,\n\tgetMoveDirectionFromKeyboardCode,\n\tgetMoveDirectionFromKeyMap,\n\ttopLeftCoordinatesToSquareCoordinates,\n\tsquareCoordinatesToTopLeftCoordinates,\n\tgetTopLeftCoordinatesFromSquareOrSquareCoordinates,\n\tgetSquareCoordinatesFromSquareOrTopLeftCoordinates,\n\tgeneratePowerUpOrNull,\n\tisPowerUp,\n\tgetPoweredUpValue,\n\tisPlayerSteppingOnFire,\n\tisPlayerDead,\n\tmapPlayersToGamePlayers,\n};\n","import { generateDefaultGameState } from 'utils/game';\nimport { GameState } from './types';\n\n// Defaults\nconst KEY = 'Game';\nconst DEFAULT_VALUES: GameState = generateDefaultGameState();\n\n// Types\nconst SET_GAME_STATE = `${KEY}/SET_GAME_STATE`;\nconst START_GAME = `${KEY}/START_GAME`;\nconst END_GAME = `${KEY}/END_GAME`;\nconst SET_GAME_MAP = `${KEY}/SET_GAME_MAP`;\n// GAME ACTIONS\nconst CHANGE_DIRECTION = `${KEY}/CHANGE_DIRECTION`;\nconst CHANGE_IS_WALKING = `${KEY}/CHANGE_IS_WALKING`;\nconst MAKE_MOVE = `${KEY}/MAKE_MOVE`;\nconst TRIGGER_MOVE = `${KEY}/TRIGGER_MOVE`;\nconst DROP_BOMB = `${KEY}/DROP_BOMB`;\nconst TRIGGER_EXPLOSION = `${KEY}/TRIGGER_EXPLOSION`;\nconst ON_EXPLOSION_COMPLETE = `${KEY}/ON_EXPLOSION_COMPLETE`;\n// GAME SETTINGS\nconst TRIGGER_GAME_ANIMATION = `${KEY}/TRIGGER_ANIMATION`;\nconst TOGGLE_GAME_DIMENSION = `${KEY}/TOGGLE_GAME_DIMENSION`;\nconst TOGGLE_GAME_PERSPECTIVE = `${KEY}/TOGGLE_GAME_PERSPECTIVE`;\nconst TOGGLE_GAME_TWO_PLAYER = `${KEY}/TOGGLE_GAME_TWO_PLAYER`;\nconst TOGGLE_GAME_NPC = `${KEY}/TOGGLE_GAME_NPC`;\n\nexport {\n\tKEY,\n\tDEFAULT_VALUES,\n\tSET_GAME_STATE,\n\tSTART_GAME,\n\tEND_GAME,\n\tSET_GAME_MAP,\n\tTRIGGER_EXPLOSION,\n\tON_EXPLOSION_COMPLETE,\n\t// GAME ACTIONS\n\tCHANGE_DIRECTION,\n\tCHANGE_IS_WALKING,\n\tMAKE_MOVE,\n\tTRIGGER_MOVE,\n\tDROP_BOMB,\n\t// GAME SETTINGS\n\tTRIGGER_GAME_ANIMATION,\n\tTOGGLE_GAME_DIMENSION,\n\tTOGGLE_GAME_PERSPECTIVE,\n\tTOGGLE_GAME_TWO_PLAYER,\n\tTOGGLE_GAME_NPC,\n};\n","const __IS_DEV__ = process.env.NODE_ENV !== 'production';\n\nexport { __IS_DEV__ };\n","function getRandomInt(max: number): number;\nfunction getRandomInt(min: number, max: number): number;\nfunction getRandomInt(min: number, max?: number | undefined) {\n\tconst _max = max || min;\n\tconst _min = (max !== undefined && min) || 0;\n\treturn Math.floor(Math.random() * (_max - _min)) + _min;\n}\n\nexport { getRandomInt };\n","export { default } from './LoadingIndicator';\nexport * from './types';\n","import { isValidElement, createElement } from 'react';\n\nexport const getElementFromElementOrType = <T>(\n\telementOrType: React.ReactElement | React.ElementType\n) => {\n\tif (!elementOrType) {\n\t\tthrow new Error('Element cannot be null or undefined.');\n\t}\n\n\treturn (\n\t\t(isValidElement(elementOrType) && elementOrType) ||\n\t\tcreateElement<T>(elementOrType as React.ElementType)\n\t);\n};\n","import { createSelector, Selector } from 'reselect';\nimport { Store } from 'store/redux/types';\nimport { DEFAULT_VALUES, KEY } from './constants';\nimport { GameState } from './types';\n\n// Direct selector to the visible state\nconst selectGameProps: Selector<Store, GameState> = state => {\n\treturn state[KEY] || DEFAULT_VALUES;\n};\n\n// Other specific selectors\n// #region GAME ACTION STATES\nconst makeSelectGamePlayers = () => {\n\treturn createSelector(selectGameProps, ({ players }) => players);\n};\n\nconst makeSelectGameBombs = () => {\n\treturn createSelector(selectGameProps, ({ bombs }) => bombs);\n};\n// //#endregion\n\n// #region GAME SETTINGS\nconst makeSelectGameConfig = () => {\n\treturn createSelector(selectGameProps, ({ config }) => config);\n};\n\nconst makeSelectGameIs3D = () => {\n\treturn createSelector(selectGameProps, ({ is3D }) => is3D);\n};\n\nconst makeSelectGameIsSideView = () => {\n\treturn createSelector(selectGameProps, ({ isSideView }) => isSideView);\n};\n\nconst makeSelectGameMap = () => {\n\treturn createSelector(selectGameProps, ({ gameMap }) => gameMap);\n};\n\nconst makeSelectGameAnimationCounter = () => {\n\treturn createSelector(\n\t\tselectGameProps,\n\t\t({ animationCounter }) => animationCounter\n\t);\n};\n// #endregion\n\n// Default selector\nconst makeSelectGameState = () => {\n\treturn createSelector(selectGameProps, state => state);\n};\n\nexport {\n\tselectGameProps,\n\t// GAME ACTION STATES\n\tmakeSelectGamePlayers,\n\tmakeSelectGameBombs,\n\t// GAME SETTINGS\n\tmakeSelectGameConfig,\n\tmakeSelectGameIs3D,\n\tmakeSelectGameIsSideView,\n\tmakeSelectGameMap,\n\tmakeSelectGameAnimationCounter,\n};\nexport default makeSelectGameState;\n","import baseLoadable, {\n\tDefaultComponent,\n\tOptionsWithoutResolver,\n} from '@loadable/component';\nimport LoadingIndicator, { HexColor } from 'components/LoadingIndicator';\n\n/**\n * Creates lazily loadable component with default fallback using the\n * <LoadingIndicator />\n *\n * @example\n * ```tsx\n * // Default - creates medium sized <LoadingIndicator /> as a fallback\n * const LazySomeComponent = loadable(() => import('components/SomeComponent'));\n * const Container = () => <LazySomeComponent />;\n *\n * // Custom Size - creates large sized <LoadingIndicator /> as a fallback\n * const LazySomeComponent = loadable(() => import('components/SomeComponent'), 'large');\n * const Container = () => <LazySomeComponent />;\n *\n * // Custom Fallback - uses custom component passed in as the fallback\n * const LazySomeComponent = loadable(() => import('components/SomeComponent'), { fallback: <MyCustomLoadingIndicator /> });\n * const Container = () => <LazySomeComponent />;\n *\n * // No fallback - does not create a loading indicator as a fallback\n * const LazySomeComponent = loadable(() => import('components/SomeComponent'), { noFallback: true });\n * const Container = () => <LazySomeComponent />;\n *\n * // Shared Component - prevents caching when different instantiations are needed based on the given key and passed in prop\n * const LazySharedComponent = loadable(() => import('components/SharedComponent'), 'entity');\n * const ContainerA = () => <LazySharedComponent entity=\"A\" />;\n * const ContainerB = () => <LazySharedComponent entity=\"B\" />;\n *\n * // Multiple options - You have to pass in an object so that it can be differentiated\n * const LazySharedComponent = loadable(() => import('components/SharedComponent'), { color: '#2196f3', entity: 'entity'});\n * const ContainerA = () => <LazySharedComponent entity=\"A\" />;\n * const ContainerB = () => <LazySharedComponent entity=\"B\" />;\n *\n * ```\n *\n * @param loadFn Import function, eg:\n * - () => import('components/SomeComponent')\n * @param fallback Loadable options as object or string\n * - Leaving this empty will result in the following options object to be passed in\n * - {\n *\t\tfallback: <LoadingIndicator size={options.size || 'medium'} />,\n *\t}\n * - Otherwise, you can provide OptionsWithoutResolver & FallbackSizeOptions with the following keys:\n * \t- fallback, cacheKey, size, noFallback\n * - Or pass in one of the following:\n * \t- 'small' | 'medium' | 'large' | cacheKey\n */\nconst loadable = <Props extends DynamicObject = {}>(\n\tloadFn: LoadableFunction<Props>,\n\t{ fallback, cacheKey, color, noFallback }: LoadableCustomOptions = {}\n) => {\n\tconst fallbackOption: LoadableOptions = {\n\t\t...((noFallback && {}) || {\n\t\t\tfallback: fallback || (\n\t\t\t\t<LoadingIndicator color={color || '#f44336'} />\n\t\t\t),\n\t\t}),\n\t};\n\tconst cacheKeyOption: LoadableOptions = {\n\t\t...(cacheKey && { cacheKey: props => props[cacheKey as string] }),\n\t};\n\tconst options = {\n\t\t...cacheKeyOption,\n\t\t...fallbackOption,\n\t};\n\n\treturn baseLoadable<Props>(loadFn, options);\n};\n\ntype LoadableFunction<T> = (props: T) => Promise<DefaultComponent<T>>;\ntype LoadableOptions = OptionsWithoutResolver<Record<string, any>>;\ntype LoadableCustomOptions = {\n\tcolor?: HexColor;\n\tfallback?: JSX.Element;\n\tcacheKey?: string;\n\tnoFallback?: boolean;\n};\n\nexport default loadable;\n","import {\n\tPlayerId,\n\tPlayers,\n\tPlayerConfig,\n\tTopLeftCoordinates,\n\tPlayerState,\n\t// KeyboardConfig,\n\tSquareCoordinates,\n\tSquare,\n} from 'containers/Game/types';\nimport { Direction, PowerUp } from 'enums';\nimport {\n\tGameState,\n\tAnimatableGameMap,\n\tBombId,\n\tBomb,\n} from 'store/redux/reducers/game/types';\n\nabstract class GameUpdater {\n\t// #region GameState\n\n\t// #region \tGameState\n\tabstract updateGameState(gameState: Partial<GameState>): void;\n\t// #endregion\n\n\t// #region \tGameState.players\n\n\t// #region \t\tGameState.players\n\tabstract updatePlayers(players: Partial<Players>): void;\n\t// #endregion\n\n\t// #region \t\tGameState.players.[*]\n\tabstract addPlayer(\n\t\tplayerConfig: Partial<PlayerConfig>,\n\t\tplayerId: PlayerId\n\t): void;\n\n\tabstract updatePlayer(\n\t\tplayerConfig: Partial<PlayerConfig>,\n\t\tplayerId: PlayerId\n\t): void;\n\n\tabstract removePlayer(playerId: PlayerId): void;\n\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig]\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].id\n\tabstract updatePlayerId(id: PlayerId, playerId: PlayerId): void;\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].direction\n\tabstract updatePlayerDirection(\n\t\tplayerProps: Pick<PlayerConfig, 'direction' | 'id'>\n\t): void;\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].isWalking\n\tabstract updatePlayerIsWalking(\n\t\tplayerProps: Pick<PlayerConfig, 'isWalking' | 'id'>\n\t): void;\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].coordinates\n\tabstract updatePlayerCoordinates(\n\t\tcoordinates: TopLeftCoordinates,\n\t\tplayerId: PlayerId,\n\t\tdirection: Direction\n\t): void;\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].state\n\tabstract updatePlayerState(\n\t\tplayerState: Partial<PlayerState>,\n\t\tplayerId: PlayerId\n\t): void;\n\n\tabstract incrementPlayerPowerUp(powerUp: PowerUp, playerId: PlayerId): void;\n\n\tabstract incrementPlayerDeathCount(playerId: PlayerId): void;\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].keyboardConfig\n\t// ??!!: Remove this option for now\n\t// abstract updatePlayerPlayerKeyboardConfig(\n\t// \tkeyboardConfig: Partial<KeyboardConfig>,\n\t// \tplayerId: PlayerId\n\t// ): void;\n\t// #endregion\n\n\t// #endregion\n\n\t// #endregion\n\n\t// #region \tGameState.gameMap\n\tabstract updateGameMap(animatableGameMap: AnimatableGameMap): void;\n\n\tabstract updateGameMapSquare(\n\t\tsquareCoordinates: SquareCoordinates,\n\t\tsquare: Square\n\t): void;\n\t// #endregion\n\n\t// #region \tGameState.bombs\n\tabstract addBomb(bomb: Bomb): void;\n\n\tabstract removeBomb(bombId: BombId): void;\n\t// #endregion\n\n\t// #region \tGameState.powerUps\n\tabstract addPowerUp(\n\t\tpowerUp: PowerUp,\n\t\tsquareCoordinates: SquareCoordinates\n\t): void;\n\n\tabstract removePowerUp({ ySquare, xSquare }: SquareCoordinates): void;\n\t// #endregion\n\n\t// #region \tGameState.gameConfig\n\t// TODO: editable-game-config\n\t// #endregion\n\n\t// #region \tGameState.[*primitives]\n\n\tabstract toggleIs3D(): void;\n\n\tabstract toggleIsSideView(): void;\n\n\tabstract incrementAnimationCounter(): void;\n\n\t// #endregion\n\n\t// #endregion\n}\n\nexport default GameUpdater;\n","import gameConfig from 'config';\nimport {\n\tCoordinates,\n\tSquare,\n\tPlayerId,\n\tSquareCoordinates,\n\tPlayerConfig,\n} from 'containers/Game/types';\nimport { Tile, PowerUp, Explosive, FIRE_VALUES, Player } from 'enums';\nimport {\n\tAnimatableGameMap,\n\tBombId,\n\tGameState,\n\tOnMoveProps,\n\tOnPrepareMoveProps,\n} from 'store/redux/reducers/game/types';\nimport {\n\tgetSquareCoordinatesFromSquareOrTopLeftCoordinates,\n\tgeneratePowerUpOrNull,\n\tgetPoweredUpValue,\n\ttopLeftCoordinatesToSquareCoordinates,\n\tsquareCoordinatesToTopLeftCoordinates,\n\tgetExplosionResults,\n\thandleMove,\n\tisPowerUp,\n\tgenerateBomb,\n\tgeneratePlayer,\n} from 'utils/game';\nimport LocalGameUpdater from './LocalGameUpdater';\nimport OnlineGameUpdater from './OnlineGameUpdater';\n\nclass GameUtils {\n\tconstructor(\n\t\tpublic state: GameState,\n\t\tpublic updaters: OnlineGameUpdater | LocalGameUpdater\n\t) {}\n\n\t// #region STATE UTILITIES\n\tgetPlayerState = (playerId: PlayerId) => {\n\t\treturn this.state.players[playerId]!.state;\n\t};\n\n\tisPlayerDead = (playerId: PlayerId) => {\n\t\tconst playerState = this.getPlayerState(playerId);\n\t\tconst { deathCount } = playerState;\n\t\t// < 1 to prevent instant double explosion\n\t\treturn (\n\t\t\tdeathCount >=\n\t\t\tgetPoweredUpValue(\n\t\t\t\tplayerState,\n\t\t\t\tPowerUp.Life,\n\t\t\t\tthis.state.config.powerUps\n\t\t\t)\n\t\t);\n\t};\n\n\tgetPowerUpOrNull = (coordinates: Coordinates) => {\n\t\tconst {\n\t\t\txSquare,\n\t\t\tySquare,\n\t\t} = getSquareCoordinatesFromSquareOrTopLeftCoordinates(\n\t\t\tcoordinates,\n\t\t\tthis.state.config.sizes.movement\n\t\t);\n\n\t\ttry {\n\t\t\tconst currentSquare = this.state.gameMap[ySquare][xSquare];\n\t\t\tif (currentSquare !== Tile.Breaking) return null;\n\t\t\tconst powerUpOrNull = generatePowerUpOrNull(\n\t\t\t\tthis.state.config.powerUps.chance\n\t\t\t);\n\t\t\tif (!powerUpOrNull) return null;\n\t\t\treturn currentSquare === Tile.Breaking\n\t\t\t\t? {\n\t\t\t\t\t\tsquare: powerUpOrNull,\n\t\t\t\t\t\tcoordinates: { ySquare, xSquare },\n\t\t\t\t  }\n\t\t\t\t: null;\n\t\t} catch (err) {\n\t\t\tconsole.error('Square being set is out of boundaries', {\n\t\t\t\tgameMap: this.state.gameMap,\n\t\t\t\txSquare,\n\t\t\t\tySquare,\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tgetBombCountForPlayer = (playerId: PlayerId) => {\n\t\treturn getPoweredUpValue(\n\t\t\tthis.getPlayerState(playerId),\n\t\t\tPowerUp.BombCount,\n\t\t\tthis.state.config.powerUps\n\t\t);\n\t};\n\n\tgetBombSizeForPlayer = (playerId: PlayerId) => {\n\t\treturn getPoweredUpValue(\n\t\t\tthis.getPlayerState(playerId),\n\t\t\tPowerUp.BombSize,\n\t\t\tthis.state.config.powerUps\n\t\t);\n\t};\n\n\tgetMovementSpeedForPlayer = (playerId: PlayerId) => {\n\t\treturn getPoweredUpValue(\n\t\t\tthis.getPlayerState(playerId),\n\t\t\tPowerUp.MovementSpeed,\n\t\t\tthis.state.config.powerUps\n\t\t);\n\t};\n\n\tgetBombToTriggerFromExplosion = (\n\t\tcoordinates: SquareCoordinates,\n\t\tcurrentBombId: BombId\n\t) => {\n\t\tconst { ySquare, xSquare } = coordinates;\n\t\t// if there is a bomb by where the explosion hits,\n\t\t// trigger that bomb as well\n\t\tif (this.state.gameMap[ySquare][xSquare] !== Explosive.Bomb)\n\t\t\treturn null;\n\t\tconst { top, left } = squareCoordinatesToTopLeftCoordinates(\n\t\t\tcoordinates,\n\t\t\tthis.state.config.sizes.movement\n\t\t);\n\t\tconst bombToTrigger = Object.values(this.state.bombs).find(\n\t\t\t({ top: t, left: l }) => top === t && left === l\n\t\t);\n\t\t// there is no bomb there\n\t\tif (!bombToTrigger) return null;\n\t\t// don't recurse on the same bomb that's triggering\n\t\t// the explosion\n\t\tif (bombToTrigger.id === currentBombId) return null;\n\n\t\treturn bombToTrigger;\n\t};\n\t// #endregion\n\n\t// #region DRAFT UTILITIES\n\tsetSquare = (coordinates: Coordinates, newSquare: Square) => {\n\t\t// eslint-disable-next-line max-len\n\t\tconst squareCoordinates = getSquareCoordinatesFromSquareOrTopLeftCoordinates(\n\t\t\tcoordinates,\n\t\t\tthis.state.config.sizes.movement\n\t\t);\n\n\t\ttry {\n\t\t\tthis.updaters.updateGameMapSquare(squareCoordinates, newSquare);\n\t\t} catch (err) {\n\t\t\tconsole.error('Square being set is out of boundaries', {\n\t\t\t\tgameMap: this.state.gameMap,\n\t\t\t\tsquareCoordinates,\n\t\t\t});\n\t\t}\n\t};\n\n\tpopulatePowerUps = (coordinates: Coordinates) => {\n\t\tconst powerUpOrNull = this.getPowerUpOrNull(coordinates);\n\t\tif (!powerUpOrNull) return;\n\n\t\tconst { square, coordinates: powerUpCoordinates } = powerUpOrNull;\n\t\tthis.updaters.addPowerUp(square as PowerUp, powerUpCoordinates);\n\t};\n\n\thandlePlayerExplosionHit = (currentFireCoordinates: SquareCoordinates) => {\n\t\tconst { xSquare, ySquare } = currentFireCoordinates;\n\t\tObject.values<PlayerConfig>(this.state.players).forEach(\n\t\t\t({ id: playerId, coordinates }) => {\n\t\t\t\tconst {\n\t\t\t\t\txSquare: playerXSquare,\n\t\t\t\t\tySquare: playerYSquare,\n\t\t\t\t} = topLeftCoordinatesToSquareCoordinates(\n\t\t\t\t\tcoordinates,\n\t\t\t\t\tthis.state.config.sizes.movement\n\t\t\t\t);\n\t\t\t\tif (playerXSquare === xSquare && playerYSquare === ySquare) {\n\t\t\t\t\tthis.updaters.incrementPlayerDeathCount(playerId);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\ttriggerChainExplosion = (bombId: BombId, bombsToSkip: Array<BombId>) => {\n\t\tconst explosionToComplete: Set<BombId> = new Set();\n\t\t// allows us to not re-trigger explosion due to\n\t\t// two adjacent explosions\n\t\tif (bombsToSkip.includes(bombId)) return explosionToComplete;\n\t\tconst currentBomb = this.state.bombs[bombId];\n\n\t\t// If we recursively triggered it\n\t\tif (!currentBomb) return explosionToComplete;\n\n\t\tconst bombCoordinates = {\n\t\t\ttop: currentBomb.top,\n\t\t\tleft: currentBomb.left,\n\t\t};\n\n\t\tconst bombSize = this.getBombSizeForPlayer(currentBomb.playerId);\n\n\t\t// find surrounding objects to modify\n\t\tconst { coordinatesToSetOnFire } = getExplosionResults(\n\t\t\tthis.state.gameMap,\n\t\t\tbombCoordinates,\n\t\t\tbombSize,\n\t\t\tthis.state.config.sizes\n\t\t);\n\n\t\tconst { horizontal, vertical, core } = coordinatesToSetOnFire;\n\n\t\t// set fire on all the coordinates\n\t\t// this automatically \"breaks\" the breakable tiles\n\t\t// URGENT: This will also contain two entity if Tile, Tile & Fire\n\t\t[\n\t\t\t{\n\t\t\t\tfireCoordinates: core,\n\t\t\t\tdirection: Explosive.FireCore,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfireCoordinates: horizontal,\n\t\t\t\tdirection: Explosive.FireHorizontal,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfireCoordinates: vertical,\n\t\t\t\tdirection: Explosive.FireVertical,\n\t\t\t},\n\t\t].forEach(({ fireCoordinates, direction }) => {\n\t\t\tfireCoordinates.forEach(coordinates => {\n\t\t\t\t// check if there is a tile and get a random power up or null\n\t\t\t\tthis.populatePowerUps(coordinates);\n\t\t\t\tthis.setSquare(coordinates, direction);\n\n\t\t\t\t// subtract a life from the players if they are hit\n\t\t\t\t// URGENT: We want this to happen only once\n\t\t\t\tthis.handlePlayerExplosionHit(coordinates);\n\n\t\t\t\tconst currentBombId = currentBomb.id;\n\t\t\t\t// if there are bombs caught in fire, explode them\n\t\t\t\tconst bombToTrigger = this.getBombToTriggerFromExplosion(\n\t\t\t\t\tcoordinates,\n\t\t\t\t\tcurrentBombId\n\t\t\t\t);\n\t\t\t\tif (bombToTrigger) {\n\t\t\t\t\tconst _explosionToComplete = this.triggerChainExplosion(\n\t\t\t\t\t\tbombToTrigger.id,\n\t\t\t\t\t\t[...bombsToSkip, currentBombId]\n\t\t\t\t\t);\n\t\t\t\t\t_explosionToComplete.forEach(bId =>\n\t\t\t\t\t\texplosionToComplete.add(bId)\n\t\t\t\t\t);\n\t\t\t\t\texplosionToComplete.add(bombToTrigger.id);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn explosionToComplete;\n\t};\n\n\t// #endregion\n\n\t// #region API\n\tsetGameState = (gameState: GameState) => {\n\t\tthis.updaters.updateGameState(gameState);\n\t};\n\n\tstartGame = () => {\n\t\t// this.updaters.\n\t};\n\n\tendGame = () => {\n\t\t// this.updaters.\n\t};\n\n\tsetGameMap = (animatableGameMap: AnimatableGameMap) => {\n\t\tthis.updaters.updateGameMap(animatableGameMap);\n\t};\n\n\tupdatePlayerDirection = (\n\t\tnewPlayerState: Pick<PlayerConfig, 'direction' | 'id'>\n\t) => {\n\t\tthis.updaters.updatePlayerDirection(newPlayerState);\n\t};\n\n\tupdatePlayerIsWalking = (\n\t\tnewPlayerState: Pick<PlayerConfig, 'isWalking' | 'id'>\n\t) => {\n\t\tthis.updaters.updatePlayerIsWalking(newPlayerState);\n\t};\n\n\ttriggerMove = ({\n\t\tplayerId,\n\t\tdirection,\n\t\tonComplete,\n\t\tref,\n\t}: OnPrepareMoveProps) => {\n\t\tif (this.isPlayerDead(playerId)) return;\n\n\t\tconst { is3D, players, gameMap } = this.state;\n\t\tconst playerConfig = players[playerId] as PlayerConfig;\n\n\t\thandleMove(\n\t\t\t{\n\t\t\t\tplayerConfig,\n\t\t\t\tdirection,\n\t\t\t\tis3D,\n\t\t\t\tgameMap,\n\t\t\t},\n\t\t\tthis.getMovementSpeedForPlayer(playerId),\n\t\t\tonComplete,\n\t\t\tref,\n\t\t\tthis.state.config.sizes\n\t\t);\n\t};\n\n\tmakeMove = ({\n\t\tplayerId,\n\t\tnewCoordinates,\n\t\tdirection,\n\t\thasMoved,\n\t}: OnMoveProps) => {\n\t\tif (this.isPlayerDead(playerId)) return;\n\t\t// if there is a powerUp, assign it to the playerState\n\t\tconst {\n\t\t\tySquare: newCoordinateYSquare,\n\t\t\txSquare: newCoordinateXSquare,\n\t\t} = topLeftCoordinatesToSquareCoordinates(\n\t\t\tnewCoordinates,\n\t\t\tthis.state.config.sizes.movement\n\t\t);\n\n\t\tconst newSquare = this.state.gameMap[newCoordinateYSquare][\n\t\t\tnewCoordinateXSquare\n\t\t];\n\n\t\t// if a player steps on explosion fire, subtract a life\n\t\t// ??!!: This doesn't account for moving on the same bomb\n\t\t// explosion. If the player continues to move under the\n\t\t// same explosion fire, he will continuously lose a life\n\t\tif (FIRE_VALUES.includes(newSquare as Explosive)) {\n\t\t\tthis.updaters.incrementPlayerDeathCount(playerId);\n\n\t\t\t// if he is dead, stop here\n\t\t\tif (this.isPlayerDead(playerId)) return;\n\t\t\t// URGENT: Pick Bomb over Player on map, this will also be\n\t\t\t// required by the NPC, but again, gotta handle multiple\n\t\t\t// Square types in one square inside gameMap\n\t\t} else {\n\t\t\t// set new player square\n\t\t\tthis.setSquare(\n\t\t\t\t{\n\t\t\t\t\tySquare: newCoordinateYSquare,\n\t\t\t\t\txSquare: newCoordinateXSquare,\n\t\t\t\t},\n\t\t\t\tplayerId as Player\n\t\t\t);\n\t\t}\n\n\t\tconst lastCoordinates = this.state.players[playerId]!.coordinates;\n\n\t\tconst {\n\t\t\tySquare: lastCoordinateYSquare,\n\t\t\txSquare: lastCoordinateXSquare,\n\t\t} = topLeftCoordinatesToSquareCoordinates(\n\t\t\tlastCoordinates,\n\t\t\tthis.state.config.sizes.movement\n\t\t);\n\t\t// this can also be a bomb, we don't want to just clear it\n\t\tconst lastSquare = this.state.gameMap[lastCoordinateYSquare][\n\t\t\tlastCoordinateXSquare\n\t\t];\n\t\t// clear lastSquare only if it was the player\n\t\t// and the player has moved\n\t\t// (on a Tile.Empty)\n\t\t// otherwise we can leave whatever was there\n\t\tif (lastSquare === playerId && hasMoved) {\n\t\t\tthis.setSquare(\n\t\t\t\t{\n\t\t\t\t\tySquare: lastCoordinateYSquare,\n\t\t\t\t\txSquare: lastCoordinateXSquare,\n\t\t\t\t},\n\t\t\t\tTile.Empty\n\t\t\t);\n\t\t}\n\t\tconst powerUpOrEmptyTile = this.state.gameMap[newCoordinateYSquare][\n\t\t\tnewCoordinateXSquare\n\t\t] as PowerUp;\n\t\tif (isPowerUp(powerUpOrEmptyTile)) {\n\t\t\tthis.updaters.incrementPlayerPowerUp(powerUpOrEmptyTile, playerId);\n\t\t}\n\n\t\t// update player's topLeft coordinates\n\t\tthis.updaters.updatePlayerCoordinates(\n\t\t\tnewCoordinates,\n\t\t\tplayerId,\n\t\t\tdirection\n\t\t);\n\t};\n\n\tdropBomb = (playerId: PlayerId) => {\n\t\tif (this.isPlayerDead(playerId)) return;\n\n\t\tconst playerConfig = this.state.players[playerId]!;\n\t\tconst { coordinates } = playerConfig;\n\t\tconst {\n\t\t\txSquare,\n\t\t\tySquare,\n\t\t} = getSquareCoordinatesFromSquareOrTopLeftCoordinates(\n\t\t\tcoordinates,\n\t\t\tthis.state.config.sizes.movement\n\t\t);\n\t\t// prevent double bomb in one spot\n\t\tif (this.state.gameMap[ySquare][xSquare] === Explosive.Bomb) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst playerBombCountOnMap = Object.values(this.state.bombs).filter(\n\t\t\t({ playerId: pId }) => pId === playerId\n\t\t).length;\n\t\t// ??!!: is >= possible? will > suffice?\n\t\t// don't put more bombs than what you have\n\t\tif (playerBombCountOnMap >= this.getBombCountForPlayer(playerId)) {\n\t\t\treturn;\n\t\t}\n\t\tconst bomb = generateBomb(playerConfig, this.state.config.powerUps);\n\t\tthis.updaters.addBomb(bomb);\n\n\t\t// URGENT: This block will contain both the player and the bomb\n\t\t// TODO: Figure out a proper way to handle this for NPC\n\t\tthis.setSquare(playerConfig.coordinates, Explosive.Bomb);\n\t};\n\n\ttriggerExplosion = (bombId: BombId, cb?: CallableFunction) => {\n\t\t// if current bomb already exploded, don't trigger it again\n\t\t// prevents: state update on an unmounted component\n\t\tif (!this.state.bombs[bombId]) {\n\t\t\treturn;\n\t\t}\n\t\tconst explosionsToComplete = this.triggerChainExplosion(bombId, []);\n\t\tcb?.(explosionsToComplete);\n\t};\n\n\tonExplosionComplete = (bombId: BombId) => {\n\t\tconst currentBomb = this.state.bombs[bombId];\n\n\t\t// If we recursively triggered it\n\t\tif (!currentBomb) return;\n\n\t\tconst bombCoordinates = {\n\t\t\ttop: currentBomb.top,\n\t\t\tleft: currentBomb.left,\n\t\t};\n\n\t\tconst bombSize = this.getBombSizeForPlayer(currentBomb.playerId);\n\n\t\t// remove bomb\n\t\tthis.updaters.removeBomb(bombId);\n\t\tconst { coordinatesToSetOnFire } = getExplosionResults(\n\t\t\tthis.state.gameMap,\n\t\t\tbombCoordinates,\n\t\t\tbombSize,\n\t\t\tthis.state.config.sizes,\n\t\t\ttrue\n\t\t);\n\n\t\t// clear fire\n\t\tObject.values(coordinatesToSetOnFire)\n\t\t\t.flat()\n\t\t\t.forEach(coordinates => {\n\t\t\t\tconst {\n\t\t\t\t\txSquare,\n\t\t\t\t\tySquare,\n\t\t\t\t} = getSquareCoordinatesFromSquareOrTopLeftCoordinates(\n\t\t\t\t\tcoordinates,\n\t\t\t\t\tthis.state.config.sizes.movement\n\t\t\t\t);\n\t\t\t\t// if there is a powerUp, put it on the map\n\t\t\t\tconst powerUpOrNull = this.state.powerUps[ySquare]?.[xSquare];\n\t\t\t\tif (powerUpOrNull) {\n\t\t\t\t\tthis.setSquare(coordinates, powerUpOrNull);\n\t\t\t\t\t// empty the powerUp from the state\n\t\t\t\t\tthis.updaters.removePowerUp({ xSquare, ySquare });\n\t\t\t\t} else {\n\t\t\t\t\tthis.setSquare(coordinates, Tile.Empty);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\ttriggerGameAnimation = () => {\n\t\tthis.updaters.incrementAnimationCounter();\n\t};\n\n\ttoggleGameDimension = () => {\n\t\tthis.updaters.toggleIs3D();\n\t};\n\n\ttoggleGamePerspective = () => {\n\t\tthis.updaters.toggleIsSideView();\n\t};\n\n\ttoggleGameTwoPlayer = () => {\n\t\tif (this.state.players.P2) {\n\t\t\tthis.updaters.removePlayer(Player.P2);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updaters.addPlayer(\n\t\t\tgeneratePlayer(Player.P2, this.state.config, {\n\t\t\t\t'0': gameConfig.keyboardConfig['1'],\n\t\t\t}),\n\t\t\tPlayer.P2\n\t\t);\n\t};\n\n\t// temporary\n\ttoggleGameNpc = () => {\n\t\t(['P3', 'P4'] as Array<PlayerId>).forEach(playerId => {\n\t\t\tif (this.state.players[playerId]) {\n\t\t\t\tthis.updaters.removePlayer(playerId);\n\t\t\t} else {\n\t\t\t\tthis.updaters.addPlayer(\n\t\t\t\t\tgeneratePlayer(playerId, this.state.config),\n\t\t\t\t\tplayerId\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t};\n\t// #endregion\n}\n\nexport default GameUtils;\n","import styled, { css, keyframes } from 'styled-components';\nimport { HexColor } from './types';\n\ninterface Props {\n\tcolor?: HexColor;\n\tfullSize?: boolean;\n\tfullWidth?: boolean;\n}\n\nconst Wrapper = styled.div<StyledProps<Props, 'fullSize' | 'fullWidth'>>`\n\tjustify-content: center;\n\talign-items: center;\n\tdisplay: flex;\n\tvertical-align: middle;\n\t${({ $fullSize, $fullWidth }) => `\n\t\t${\n\t\t\t($fullSize &&\n\t\t\t\t`\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tbackground: #000 !important;\n\t\t\t\t\topacity: 0.8;\n\t\t\t\t\tz-index: 99999;\n\t\t`) ||\n\t\t\t($fullWidth &&\n\t\t\t\t`\n\t\t\t\t\twidth: 100%;\n\t\t`) ||\n\t\t\t''\n\t\t}\n\t`}\n`;\n\n/** @see https://loading.io/css/ */\nconst rippleKeyframes = () => keyframes`\n\t0% {\n\t\ttop: 144px;\n\t\tleft: 144px;\n\t\twidth: 0;\n\t\theight: 0;\n\t\topacity: 1;\n\t}\n\t100% {\n\t\ttop: 0px;\n\t\tleft: 0px;\n\t\twidth: 288px;\n\t\theight: 288px;\n\t\topacity: 0;\n\t}\n`;\n\nconst Explosion = styled.div<{ $color: string }>`\n\tdisplay: inline-block;\n\tposition: relative;\n\twidth: 200px;\n\theight: 200px;\n\n\tdiv {\n\t\tposition: absolute;\n\t\topacity: 1;\n\t\tborder-radius: 50%;\n\t\t${({ $color }) => css`\n\t\t\tborder: 4px solid ${$color};\n\t\t\tanimation: ${rippleKeyframes()} 1s cubic-bezier(0, 0.2, 0.8, 1)\n\t\t\t\tinfinite;\n\t\t`}\n\t}\n\n\tdiv:nth-child(2) {\n\t\tanimation-delay: -0.5s;\n\t}\n\n\tdiv:nth-child(3) {\n\t\tanimation-delay: -1s;\n\t}\n`;\n\nconst LoadingIndicator = ({\n\tcolor = '#f44336',\n\tfullSize = false,\n\tfullWidth = false,\n\t...rest\n}: Props) => {\n\treturn (\n\t\t<Wrapper $fullSize={fullSize} $fullWidth={fullWidth} {...rest}>\n\t\t\t<Explosion $color={color}>\n\t\t\t\t<div />\n\t\t\t\t<div />\n\t\t\t\t<div />\n\t\t\t\t<div />\n\t\t\t\t<div />\n\t\t\t</Explosion>\n\t\t</Wrapper>\n\t);\n};\n\nexport default LoadingIndicator;\n","import { GameType } from 'enums';\nimport { Redirect } from 'react-router-dom';\nimport loadable from 'utils/loadable';\nimport { BASE_PATH } from './constants';\nimport {\n\tUserRoles,\n\tRoute,\n\tLink,\n\tRouteComponentPropsWithLocationState,\n} from './types';\nimport {\n\tmapRoles,\n\tmapBasePathForRoutes,\n\tmapBasePathForLinks,\n\t// mapRouteToLink,\n} from './utils';\n\nconst PAGE_ROLES = {\n\t// PUBLIC: '*',\n\tDEV: [UserRoles.DEV],\n\tLOGGED_IN: [UserRoles.DEV, UserRoles.GENERIC_USER],\n};\n\n/* eslint-disable prettier/prettier */\n// Public routes\nconst LazyHome = loadable(() => import(`routes/pages/Home`));\nconst LazyLocal = loadable(() => import(`routes/pages/Local`));\nconst LazyInstructions = loadable(() => import(`routes/pages/Instructions`));\nconst LazyGameEnd = loadable(() => import(`routes/pages/GameEnd`));\nconst LazyRoomCreator = loadable<RouteComponentPropsWithLocationState<{ type: GameType }>>(() => import(`routes/pages/RoomCreator`));\nconst LazyOnline = loadable<RouteComponentPropsWithLocationState<{id: string}>>(() => import(`routes/pages/Online`));\nconst LazyJoin = loadable(() => import(`routes/pages/Join`));\nconst LazyWaitingRoom = loadable<RouteComponentPropsWithLocationState<{id: string}>>(() => import(`routes/pages/WaitingRoom`));\n\n// Private routes\nconst LazyProfile = loadable(() => import(`routes/pages/Profile`));\n\n// Handler Pages\nconst LazyNotFound = loadable(() => import(`./pages/NotFound`));\nconst LazyUnauthorized = loadable(() => import(`./pages/Unauthorized`));\nconst LazyLogin = loadable(() => import(`./pages/Login`));\nconst LazySignUp = loadable(() => import(`./pages/SignUp`));\n/* eslint-enable prettier/prettier */\n\nconst PRIVATE_ROUTES = [\n\t{\n\t\ttitle: 'Profile',\n\t\tdescription: `Adjust your app profile.`,\n\t\tpath: '/profile',\n\t\tcomponent: LazyProfile,\n\t},\n].map(mapRoles(PAGE_ROLES.LOGGED_IN)) as Array<Route>;\n\nconst ROUTE_LIST = [\n\t{\n\t\ttitle: 'Home | Bomba-man',\n\t\tdescription: `Welcome to the bomberman, here you can find settings and create a room to play online with friends`,\n\t\tpath: '',\n\t\tcomponent: LazyHome,\n\t},\n\t{\n\t\tpath: '/',\n\t\tcomponent: <Redirect to={BASE_PATH} />,\n\t} as Route,\n\t...PRIVATE_ROUTES,\n\t// TODO make online version private\n\t{\n\t\ttitle: 'Room Creator',\n\t\tdescription: `Build a room to play with friends online.`,\n\t\tpath: '/room-creator/:type',\n\t\tcomponent: LazyRoomCreator,\n\t},\n\t{\n\t\ttitle: 'Local Game',\n\t\tdescription: `Local game, multiplayer and/or with NPCs.`,\n\t\tpath: '/local',\n\t\tcomponent: LazyLocal,\n\t},\n\t{\n\t\ttitle: 'Online Multiplayer',\n\t\tdescription: `Invite friends to play alongside you in this room.`,\n\t\tpath: '/online/:id',\n\t\tcomponent: LazyOnline,\n\t},\n\t{\n\t\ttitle: 'Waiting Room',\n\t\tdescription: `Waiting for your friends to join before the game starts.`,\n\t\tpath: '/waiting-room/:id',\n\t\tcomponent: LazyWaitingRoom,\n\t},\n\t{\n\t\ttitle: 'Join a Game',\n\t\tdescription: `Join a game room to play with your friend.`,\n\t\tpath: '/join',\n\t\tcomponent: LazyJoin,\n\t},\n\t{\n\t\ttitle: 'Instructions',\n\t\tdescription: `How to play.`,\n\t\tpath: '/instructions',\n\t\tcomponent: LazyInstructions,\n\t},\n\t{\n\t\ttitle: 'End Game',\n\t\tdescription: `Game has ended.`,\n\t\tpath: '/game-end',\n\t\tcomponent: LazyGameEnd,\n\t},\n\t{\n\t\ttitle: 'Login',\n\t\tdescription: `Login to the app.`,\n\t\tpath: '/login',\n\t\tcomponent: <LazyLogin authorizing={false} />,\n\t},\n\t{\n\t\ttitle: 'SignUp',\n\t\tdescription: `Sign up for an account.`,\n\t\tpath: '/signup',\n\t\tcomponent: LazySignUp,\n\t},\n\t{\n\t\ttitle: 'Unauthorized',\n\t\tdescription: `User does not have access to the following page.`,\n\t\tpath: '/unauthorized',\n\t\tcomponent: LazyUnauthorized,\n\t},\n\t{\n\t\ttitle: 'Not Found',\n\t\tdescription: `The page you are looking for might have been removed had its name changed or is temporarily unavailable.`,\n\t\tpath: '/not-found',\n\t\tcomponent: LazyNotFound,\n\t},\n].map(mapBasePathForRoutes);\n\n// const MENU_PAGES = [];\n\nconst SHARED_DISPLAY_PAGES = ([\n\t// Public Paths\n\t...[\n\t\t{\n\t\t\tlabel: 'Home',\n\t\t\ttooltip: `Landing Page`,\n\t\t\ttext: 'Home', // remove this once the logo is added\n\t\t\tto: '/',\n\t\t\t// icon: HomeIcon\n\t\t} as Link,\n\t\t{\n\t\t\tlabel: 'Local Game',\n\t\t\ttooltip: 'Local Game',\n\t\t\ttext: 'Local Game',\n\t\t\tto: '/room-creator/local',\n\t\t},\n\t\t{\n\t\t\tlabel: 'Create Online Game',\n\t\t\ttooltip: 'Create Online Game',\n\t\t\ttext: 'Create Online Game',\n\t\t\tto: '/room-creator/online',\n\t\t},\n\t\t{\n\t\t\tlabel: 'Join Online Game',\n\t\t\ttooltip: 'Join Online Game',\n\t\t\ttext: 'Join Online Game',\n\t\t\tto: '/join',\n\t\t},\n\t\t{\n\t\t\tlabel: 'Instructions',\n\t\t\ttooltip: 'Instructions',\n\t\t\ttext: 'Instructions',\n\t\t\tto: '/instructions',\n\t\t},\n\t],\n\t// Private Paths\n\t// ...PRIVATE_ROUTES.filter(({ path }) => path !== '/profile')\n\t// \t.map(mapRouteToLink)\n\t// \t.map(mapRoles(PAGE_ROLES.LOGGED_IN)),\n] as Array<Link>).map(mapBasePathForLinks);\n\nconst NAV_LIST = [...SHARED_DISPLAY_PAGES];\n\nconst NAV_LIST_MOBILE = [...SHARED_DISPLAY_PAGES].map(mapBasePathForLinks);\n\nexport { UserRoles, ROUTE_LIST, NAV_LIST, NAV_LIST_MOBILE };\n","// This is kinda required for gh-pages and SPA to work well together\nconst BASE_PATH = '/bomba-man';\n\nexport { BASE_PATH };\n","enum Direction {\n\tUP = 'Up',\n\tRIGHT = 'Right',\n\tDOWN = 'Down',\n\tLEFT = 'Left',\n}\n\nenum Axis {\n\tX = 'X',\n\tY = 'Y',\n}\n\nenum ExplosionState {\n\tFiring = 'Firing',\n\tExploding = 'Exploding',\n\tExploded = 'Exploded',\n}\n\nenum Player {\n\tP1 = 'P1',\n\tP2 = 'P2',\n\tP3 = 'P3',\n\tP4 = 'P4',\n\t// Npc1 = 'P3',\n\t// Npc2 = 'P4',\n\t// Npc3 = 'P5',\n}\n\nenum Tile {\n\tEmpty = 'T1',\n\tBreaking = 'T2',\n\tNonBreaking = 'T3',\n}\n\nenum PowerUp {\n\tLife = 'PU1',\n\tBombCount = 'PU2',\n\tBombSize = 'PU3',\n\tMovementSpeed = 'PU4',\n}\n\nenum Explosive {\n\tBomb = 'B',\n\tFireCore = 'FC',\n\tFireHorizontal = 'FH',\n\tFireVertical = 'FV',\n}\n\nenum GameType {\n\tLocal = 'local',\n\tOnline = 'online',\n}\n\nenum GameEndCondition {\n\tWin = 'Won',\n\tLose = 'Lost',\n}\n\nenum PlayerCondition {\n\tAlive = 'alive',\n\tDead = 'dead',\n}\n\nconst FIRE_VALUES = Object.values(Explosive).filter(v => v !== Explosive.Bomb);\n\nexport {\n\tDirection,\n\tAxis,\n\tExplosionState,\n\tPlayer,\n\tTile,\n\tPowerUp,\n\tExplosive,\n\tGameType,\n\tGameEndCondition,\n\tPlayerCondition,\n\tFIRE_VALUES,\n};\n","// eslint-disable-next-line import/no-unresolved\nimport { WritableDraft } from 'immer/dist/types/types-external';\n\nconst updateImmerDraft = (\n\tdraft: WritableDraft<DynamicObject>,\n\tpayload: DynamicObject\n) => {\n\tObject.keys(payload).forEach(key => {\n\t\tdraft[key] = payload[key];\n\t});\n};\n\nexport { updateImmerDraft };\n","import {\n\tAnimatableGameMap,\n\tBomb,\n\tBombId,\n\tGameState,\n} from 'store/redux/reducers/game/types';\nimport {\n\tPlayerConfig,\n\tPlayerId,\n\t// KeyboardConfig,\n\tPlayers,\n\tPlayerState,\n\tSquare,\n\tSquareCoordinates,\n\tTopLeftCoordinates,\n} from 'containers/Game/types';\nimport { Direction, PowerUp } from 'enums';\n// eslint-disable-next-line import/no-unresolved\nimport { WritableDraft } from 'immer/dist/internal';\nimport { updateImmerDraft } from 'utils/immer';\nimport GameUpdater from './GameUpdater';\n\nclass LocalGameUpdater extends GameUpdater {\n\tconstructor(\n\t\tpublic state: GameState,\n\t\tpublic draft: WritableDraft<GameState>\n\t) {\n\t\tsuper();\n\t}\n\n\t// #region GameState\n\n\t// #region \tGameState\n\n\tupdateGameState = async (gameState: Partial<GameState>) => {\n\t\tupdateImmerDraft(this.draft, gameState);\n\t};\n\n\t// #endregion\n\n\t// #region \tGameState.players\n\n\t// #region \t\tGameState.players\n\tupdatePlayers = async (players: Partial<Players>) => {\n\t\tthis.draft.players = players;\n\t};\n\t// #endregion\n\n\t// #region \t\tGameState.players.[*]\n\n\taddPlayer = async (playerConfig: PlayerConfig, playerId: PlayerId) => {\n\t\tthis.draft.players[playerId] = playerConfig;\n\t};\n\n\tupdatePlayer = async (\n\t\tplayerConfig: Partial<PlayerConfig>,\n\t\tplayerId: PlayerId\n\t) => {\n\t\tupdateImmerDraft(this.draft.players[playerId]!, playerConfig);\n\t};\n\n\tremovePlayer = async (playerId: PlayerId) => {\n\t\tdelete this.draft.players[playerId];\n\t};\n\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig]\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].id\n\tupdatePlayerId = async (id: PlayerId, playerId: PlayerId) => {\n\t\tthis.draft.players[playerId]!.id = id;\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].direction\n\tupdatePlayerDirection = ({\n\t\tdirection,\n\t\tid: playerId,\n\t}: Pick<PlayerConfig, 'direction' | 'id'>) => {\n\t\tthis.draft.players[playerId]!.direction = direction;\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].isWalking\n\tupdatePlayerIsWalking = ({\n\t\tisWalking,\n\t\tid: playerId,\n\t}: Pick<PlayerConfig, 'isWalking' | 'id'>) => {\n\t\tthis.draft.players[playerId]!.isWalking = isWalking;\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].coordinates\n\tupdatePlayerCoordinates = async (\n\t\tcoordinates: TopLeftCoordinates,\n\t\tplayerId: PlayerId,\n\t\tdirection: Direction\n\t) => {\n\t\tconst player = this.draft.players[playerId]!;\n\t\tplayer.coordinates = coordinates;\n\t\tplayer.direction = direction;\n\t\tplayer.isWalking = true;\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].state\n\tupdatePlayerState = async (\n\t\tplayerState: Partial<PlayerState>,\n\t\tplayerId: PlayerId\n\t) => {\n\t\tupdateImmerDraft(this.draft.players[playerId]!.state, playerState);\n\t};\n\n\tincrementPlayerPowerUp = async (powerUp: PowerUp, playerId: PlayerId) => {\n\t\tthis.draft.players[playerId]!.state.powerUps[powerUp]++;\n\t};\n\n\tincrementPlayerDeathCount = async (playerId: PlayerId) => {\n\t\tthis.draft.players[playerId]!.state.deathCount++;\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].keyboardConfig\n\t// updatePlayerPlayerKeyboardConfig = async (\n\t// \tkeyboardConfig: Partial<KeyboardConfig>,\n\t// \tplayerId: PlayerId\n\t// ) => {\n\t// \tupdateImmerDraft(\n\t// \t\tthis.draft.players[playerId]!.keyboardConfig || {},\n\t// \t\tkeyboardConfig\n\t// \t);\n\t// };\n\t// #endregion\n\n\t// #endregion\n\n\t// #endregion\n\n\t// #region \tGameState.gameMap\n\n\tupdateGameMap = async ({ gameMap, animate = false }: AnimatableGameMap) => {\n\t\tthis.draft.gameMap = gameMap;\n\t\tif (animate) this.incrementAnimationCounter();\n\t};\n\n\tupdateGameMapSquare = async (\n\t\t{ xSquare, ySquare }: SquareCoordinates,\n\t\tsquare: Square\n\t) => {\n\t\tthis.draft.gameMap[ySquare][xSquare] = square;\n\t};\n\n\t// #endregion\n\n\t// #region \tGameState.bombs\n\n\taddBomb = async (bomb: Bomb) => {\n\t\tthis.draft.bombs[bomb.id] = bomb;\n\t};\n\n\tremoveBomb = async (bombId: BombId) => {\n\t\tdelete this.draft.bombs[bombId];\n\t};\n\n\t// #endregion\n\n\t// #region \tGameState.powerUps\n\n\taddPowerUp = async (\n\t\tpowerUp: PowerUp,\n\t\t{ ySquare, xSquare }: SquareCoordinates\n\t) => {\n\t\tif (!this.draft.powerUps[ySquare]) {\n\t\t\tthis.draft.powerUps[ySquare] = {};\n\t\t}\n\t\tthis.draft.powerUps[ySquare][xSquare] = powerUp;\n\t};\n\n\tremovePowerUp = async ({ ySquare, xSquare }: SquareCoordinates) => {\n\t\tthis.draft.powerUps[ySquare][xSquare] = null;\n\t};\n\n\t// #endregion\n\n\t// #region \tGameState.gameConfig\n\t// TODO: editable-game-config\n\t// #endregion\n\n\t// #region \tGameState.[*primitives]\n\n\ttoggleIs3D = async () => {\n\t\tthis.draft.is3D = !this.state.is3D;\n\t};\n\n\ttoggleIsSideView = async () => {\n\t\tthis.draft.isSideView = !this.state.isSideView;\n\t};\n\n\tincrementAnimationCounter = async () => {\n\t\tthis.draft.animationCounter++;\n\t};\n\n\t// #endregion\n\n\t// #endregion\n}\n\nexport default LocalGameUpdater;\n","import { PlayerId } from 'containers/Game/types';\nimport produce from 'immer';\nimport { Reducer } from 'redux';\nimport LocalGameUpdater from 'api/LocalGameUpdater';\nimport GameUtils from 'api/GameUtils';\nimport {\n\tDEFAULT_VALUES,\n\tSET_GAME_STATE,\n\tSTART_GAME,\n\tEND_GAME,\n\tSET_GAME_MAP,\n\tTRIGGER_GAME_ANIMATION,\n\tTOGGLE_GAME_DIMENSION,\n\tTOGGLE_GAME_PERSPECTIVE,\n\tTOGGLE_GAME_TWO_PLAYER,\n\tTOGGLE_GAME_NPC,\n\tMAKE_MOVE,\n\tDROP_BOMB,\n\tON_EXPLOSION_COMPLETE,\n\tTRIGGER_MOVE,\n\tTRIGGER_EXPLOSION,\n} from './constants';\nimport {\n\tAnimatableGameMap,\n\tBombId,\n\tGameAction,\n\tGameState,\n\tOnMoveProps,\n\tOnPrepareMoveProps,\n} from './types';\n\nconst gameReducer: Reducer<GameState, GameAction> = (\n\tstate = DEFAULT_VALUES,\n\taction\n) => {\n\treturn produce(state, draft => {\n\t\tconst gameUpdater = new LocalGameUpdater(state, draft);\n\t\tconst gameUtils = new GameUtils(state, gameUpdater);\n\n\t\tswitch (action.type) {\n\t\t\tcase SET_GAME_STATE:\n\t\t\t\tgameUtils.setGameState(action.payload as GameState);\n\t\t\t\tbreak;\n\t\t\tcase START_GAME:\n\t\t\t\tgameUtils.startGame();\n\t\t\t\tbreak;\n\t\t\tcase END_GAME:\n\t\t\t\tgameUtils.endGame();\n\t\t\t\tbreak;\n\t\t\tcase SET_GAME_MAP: {\n\t\t\t\tgameUtils.setGameMap(action.payload as AnimatableGameMap);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// GAME ACTIONS\n\t\t\tcase TRIGGER_MOVE: {\n\t\t\t\tgameUtils.triggerMove(action.payload as OnPrepareMoveProps);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase MAKE_MOVE: {\n\t\t\t\tgameUtils.makeMove(action.payload as OnMoveProps);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DROP_BOMB: {\n\t\t\t\tgameUtils.dropBomb(action.payload as PlayerId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase TRIGGER_EXPLOSION: {\n\t\t\t\tgameUtils.triggerExplosion(action.payload as BombId, action.cb);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ON_EXPLOSION_COMPLETE: {\n\t\t\t\tgameUtils.onExplosionComplete(action.payload as BombId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// #region GAME SETTINGS\n\t\t\tcase TRIGGER_GAME_ANIMATION:\n\t\t\t\tgameUtils.triggerGameAnimation();\n\t\t\t\tbreak;\n\t\t\tcase TOGGLE_GAME_DIMENSION:\n\t\t\t\tgameUtils.toggleGameDimension();\n\t\t\t\tbreak;\n\t\t\tcase TOGGLE_GAME_PERSPECTIVE:\n\t\t\t\tgameUtils.toggleGamePerspective();\n\t\t\t\tbreak;\n\t\t\tcase TOGGLE_GAME_TWO_PLAYER:\n\t\t\t\tgameUtils.toggleGameTwoPlayer();\n\t\t\t\tbreak;\n\t\t\tcase TOGGLE_GAME_NPC:\n\t\t\t\tgameUtils.toggleGameNpc();\n\t\t\t\tbreak;\n\t\t\t// #endregion\n\t\t\tdefault:\n\t\t\t\t// No default\n\t\t\t\tbreak;\n\t\t}\n\t});\n};\n\nexport default gameReducer;\n","import { combineReducers } from 'redux';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport { firestoreReducer } from 'redux-firestore';\nimport { Store } from '../types';\nimport gameReducer, { gameKey } from './game';\n\nconst rootReducer = combineReducers<Store>({\n\tfirebase: firebaseReducer,\n\tfirestore: firestoreReducer,\n\t[gameKey]: gameReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, PreloadedState, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\nimport { Store as GameStore } from './types';\n\nconst configureStore = <S>(\n\tinitialState?: PreloadedState<S>\n): Store<GameStore> => {\n\t// Create the store with two middlewares\n\t// thunkMiddleware: Handle async calls\n\tconst middleware = [thunkMiddleware];\n\tconst enhancer = applyMiddleware(...middleware);\n\n\tconst store = createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tcomposeWithDevTools(enhancer)\n\t);\n\n\t// Hot reload the store\n\tif (process.env.NODE_ENV !== 'production' && module.hot) {\n\t\tmodule.hot.accept('./reducers', () => {\n\t\t\tstore.replaceReducer(rootReducer);\n\t\t});\n\t}\n\n\treturn store;\n};\n\nexport default configureStore;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/analytics';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProviderProps } from 'react-redux-firebase';\nimport { Store } from 'redux';\nimport { FirebaseObjects } from './types';\n\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_API_KEY,\n\tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\n\tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\n\tprojectId: process.env.REACT_APP_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_APP_ID,\n\tmeasurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\n// Initialize firebase instance\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize other services on firebase instance\nfirebase.firestore();\nfirebase.analytics();\n\nconst reactReduxFirebaseConfig: ReactReduxFirebaseProviderProps['config'] = {\n\tuserProfile: 'users',\n\t// profileParamsToPopulate: [\n\t// \t{ child: 'role', root: 'roles' }, // populates user's role with matching role object from roles\n\t// ],\n\t// Add \"User\" role to the user on signUp\n\tprofileFactory: user => {\n\t\tif (!user) {\n\t\t\t// TODO: double check this\n\t\t\tthrow new Error('Error creating the user, the user was not found');\n\t\t}\n\t\t// const _user = user?.user || user;\n\t\tconst profile: FirebaseObjects.Generic = {\n\t\t\temail: user.email || user.providerData[0]?.email || null,\n\t\t\troles: ['User'],\n\t\t};\n\t\tif (user.providerData && user.providerData.length) {\n\t\t\tprofile.providerData = user.providerData;\n\t\t}\n\t\treturn profile;\n\t},\n};\n\nconst getReactReduxFirebaseProps = (store: Store) => ({\n\tfirebase,\n\tconfig: reactReduxFirebaseConfig,\n\tdispatch: store.dispatch,\n\tcreateFirestoreInstance,\n});\n\nexport { firebaseConfig, reactReduxFirebaseConfig, getReactReduxFirebaseProps };\n","import { useSelector } from 'react-redux';\nimport { makeSelectGameConfig } from 'store/redux/reducers/game/selectors';\nimport { getMuiTheme, GlobalStyles } from 'theme';\nimport { CssBaseline } from '@material-ui/core';\nimport { MuiThemeProvider, StylesProvider } from '@material-ui/core/styles';\nimport { ThemeProvider as ScThemeProvider } from 'styled-components';\n\nconst ThemeProvider: React.FC = ({ children }) => {\n\tconst themeConfig = getMuiTheme();\n\tconst gameConfig = useSelector(makeSelectGameConfig());\n\n\treturn (\n\t\t<StylesProvider injectFirst>\n\t\t\t<MuiThemeProvider theme={themeConfig}>\n\t\t\t\t<ScThemeProvider theme={themeConfig}>\n\t\t\t\t\t{children}\n\t\t\t\t</ScThemeProvider>\n\t\t\t</MuiThemeProvider>\n\t\t\t<CssBaseline />\n\t\t\t<GlobalStyles $gameConfig={gameConfig} />\n\t\t</StylesProvider>\n\t);\n};\n\nexport default ThemeProvider;\n","import React from 'react';\n\ninterface Props extends React.FC {\n\ttitle?: string;\n}\n\ninterface State {\n\thasError: boolean;\n\terror: {\n\t\ttitle: string;\n\t\tmessage: string;\n\t};\n}\n\n/**\n * Catches errors on children and displays error information\n * instead of breaking the entire app\n *\n */\nclass ErrorBoundary extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false,\n\t\t\terror: {\n\t\t\t\ttitle: props.title || 'Error in the module.',\n\t\t\t\tmessage: '',\n\t\t\t},\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(/* error */) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\terror: {\n\t\t\t\t\t...prevState.error,\n\t\t\t\t\tmessage: error.message || errorInfo.componentStack || '',\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { hasError, error } = this.state;\n\t\tconst { title, message } = error;\n\t\tconst { children } = this.props;\n\n\t\treturn (\n\t\t\t(hasError && (\n\t\t\t\t<div style={{ padding: 20, color: 'white' }}>\n\t\t\t\t\t<h1> {title} </h1>\n\t\t\t\t\t<pre> {message} </pre>\n\t\t\t\t</div>\n\t\t\t)) ||\n\t\t\tchildren\n\t\t);\n\t}\n}\n\nexport default ErrorBoundary;\n","import { cloneElement } from 'react';\nimport Helmet from 'react-helmet';\nimport { Route, useHistory, useLocation } from 'react-router-dom';\n\nimport ErrorBoundary from 'components/ErrorBoundary';\nimport loadable from 'utils/loadable';\n// import useAuth from 'store/firebase/hooks/useAuth';\n// import useProfile from 'store/firebase/hooks/useProfile';\nimport { getElementFromElementOrType } from 'utils/react';\nimport { hasAnyFrom } from './utils';\nimport { BASE_PATH } from './constants';\nimport {\n\tRouteComponentPropsWithLocationState,\n\tReactRouterState,\n\tRoles,\n\tUserRoles,\n} from './types';\nimport { LoginProps } from './pages/Login';\n\nconst LazyUnauthorized = loadable<RouteComponentPropsWithLocationState>(\n\t() => import('./pages/Unauthorized')\n);\nconst LazyLogin = loadable<RouteComponentPropsWithLocationState & LoginProps>(\n\t() => import('./pages/Login')\n);\n\n// interface Props<P, C extends StaticContext = StaticContext>\n// \textends Route<RouteComponentPropsWithLocationState> {\n// \tcomponent:\n// \t\t| React.FunctionComponent\n// \t\t| React.ReactElement<\n// \t\t\t\tRouteComponentPropsWithLocationState<P, C>,\n// \t\t\t\tstring | React.JSXElementConstructor<any>\n// \t\t  >;\n// \troles: Roles;\n// \ttitle: string;\n// \tdescription: string;\n// }\n\n// @ts-expect-error\ninterface Props extends React.ComponentProps<typeof Route> {\n\tcomponent: ReactElementOrElementType;\n\troles?: Roles;\n\ttitle?: string;\n\tdescription?: string;\n}\n\n/**\n * LOGIC:\n * - If the requested path requires roles and app is fetching the user data from the login request\n * \t- Redirect to Login w/o error\n * \t- This triggers a loading screen with the message \"Authorizing\"\n * - If the user is not logged in (userName === '')\n * \t- If the requested path requires roles and we are not back at the /login\n * \t\t- Redirect to login with returnUrl\n * \t- If the path is /login\n * \t\t- If there was a user error or referrer requires roles and the user is not logged in\n * \t\t\t- Redirect to login w/ error message asking user to log in\n * - If requested path requires roles\n * \t- If user is trying to access '/login' or '/unauthorized'\n * \t\t- Redirect back to '/' (root)\n * \t- If user doesn't have the required roles\n * \t\t- Redirect to Unauthorized\n * - Else access the path\n */\nconst RouteWrapper = ({\n\tcomponent: Component,\n\troles = [],\n\ttitle,\n\tdescription,\n\t...rest\n}: Props) => {\n\t// const { isAuthorizing, user } = useAuth();\n\t// const {\n\t// isAuthorizing: isAuthorizingProfile,\n\t// roles: userRoles,\n\t// } = useProfile();\n\n\tconst isAuthorizing = false;\n\tconst user = { displayName: 'Temp User', email: '' };\n\tconst isAuthorizingProfile = false;\n\tconst userRoles: Roles = [UserRoles.GENERIC_USER];\n\n\tconst userName = user?.displayName || user?.email;\n\t// const userAuthError = '';\n\n\tconst _isAuthorizing = isAuthorizing || isAuthorizingProfile;\n\n\tconst {\n\t\tpush,\n\t\tlocation: { state, search },\n\t} = useHistory<ReactRouterState>();\n\tconst { pathname } = useLocation();\n\tconst referrerRoles = state?.roles || [];\n\n\tconst isAuthRequiredForTheCurrentPage = !!roles.length;\n\tconst isAuthRequiredForTheReferrerPage = !!referrerRoles.length;\n\tconst requiredRoles =\n\t\t(isAuthRequiredForTheCurrentPage && roles) || referrerRoles;\n\tconst isAuthRequired =\n\t\tisAuthRequiredForTheCurrentPage || isAuthRequiredForTheReferrerPage;\n\n\t// @ts-expect-error\n\tconst render: React.ComponentProps<typeof Route>['render'] = (\n\t\trenderProps: RouteComponentPropsWithLocationState\n\t) => {\n\t\t// Redirect to Authorizing via Login when auth is taking place\n\t\tif (isAuthRequiredForTheCurrentPage && _isAuthorizing) {\n\t\t\treturn <LazyLogin {...renderProps} authorizing />;\n\t\t}\n\n\t\t// If user is not logged in and auth is required\n\t\tif (!userName && isAuthRequired && pathname !== `${BASE_PATH}/login`) {\n\t\t\tpush(`${BASE_PATH}/login?returnUrl=${pathname}`, { roles });\n\t\t}\n\n\t\t// If logged in and\n\t\tif (userName) {\n\t\t\tconst returnUrl = (search || '').replace('?returnUrl=', '');\n\n\t\t\tif (returnUrl) {\n\t\t\t\tpush(returnUrl);\n\t\t\t} else if (\n\t\t\t\t// If logged in, don't allow to /login or /unauthorized directly\n\t\t\t\tpathname === `${BASE_PATH}/signup` ||\n\t\t\t\tpathname === `${BASE_PATH}/login`\n\t\t\t\t// pathname === `${BASE_PATH}/unauthorized`\n\t\t\t) {\n\t\t\t\t// Redirect back to home\n\t\t\t\tpush(`${BASE_PATH}/`);\n\t\t\t} else if (!hasAnyFrom(requiredRoles, userRoles)) {\n\t\t\t\treturn <LazyUnauthorized {...renderProps} />;\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{title && (\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<title>{title}</title>\n\t\t\t\t\t\t<meta name=\"description\" content={description} />\n\t\t\t\t\t</Helmet>\n\t\t\t\t)}\n\t\t\t\t{cloneElement<RouteComponentPropsWithLocationState>(\n\t\t\t\t\t// eslint-disable-next-line max-len\n\t\t\t\t\tgetElementFromElementOrType<RouteComponentPropsWithLocationState>(\n\t\t\t\t\t\tComponent\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\t...renderProps,\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<Route render={render} {...rest} />\n\t\t</ErrorBoundary>\n\t);\n};\n\nexport default RouteWrapper;\n","import { Redirect, Switch, useLocation } from 'react-router-dom';\nimport RouteWrapper from './RouteWrapper';\nimport { ROUTE_LIST } from './pages-and-roles';\nimport { BASE_PATH } from './constants';\n\nconst RedirectToNotFound = () => {\n\tconst { pathname } = useLocation();\n\treturn (\n\t\t<RouteWrapper\n\t\t\texact\n\t\t\tpath=\"*\"\n\t\t\tcomponent={\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: `${BASE_PATH}/not-found`,\n\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\treferrer: pathname,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t/>\n\t);\n};\n\nconst Routes = (props: DynamicObject) => {\n\t// usePageView();\n\treturn (\n\t\t<Switch>\n\t\t\t{ROUTE_LIST.map(({ component, path, ...rest }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<RouteWrapper\n\t\t\t\t\t\tkey={path}\n\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\tcomponent={component}\n\t\t\t\t\t\texact\n\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<RedirectToNotFound />\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import config from 'config';\nimport { NavLink } from 'react-router-dom';\n// import { BASE_PATH } from 'routes/constants';\n// import { NAV_LIST } from 'routes/pages-and-roles';\nimport styled from 'styled-components';\nimport theme from 'theme';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n\nconst LinkText = styled.h1`\n\tcolor: ${theme.palette.color.info};\n\tmargin: 0;\n\tpadding: 10px 15px;\n\ttransition: color ${theme.transition.hover};\n\tdisplay: inline-block;\n\n\t&:hover {\n\t\tcolor: ${theme.palette.color['info-lighter']};\n\t}\n`;\n\nconst Links = () => {\n\treturn (\n\t\t<Wrapper id=\"site-navbar\">\n\t\t\t<NavLink to=\"/\">\n\t\t\t\t<LinkText>{config.title}</LinkText>\n\t\t\t</NavLink>\n\t\t\t{/* TODO: grab paths from the constants, or create enum? */}\n\t\t\t{/* <NavLink to={`${BASE_PATH}/profile`}>\n\t\t\t\t<LinkText>Profile</LinkText>\n\t\t\t</NavLink> */}\n\t\t</Wrapper>\n\t);\n\t// return (\n\t// \t<L>\n\t// \t\t{NAV_LIST.filter(link => link.label !== 'Home').map(link => (\n\t// \t\t\t<NavLink\n\t// \t\t\t\t// color=\"textPrimary\"\n\t// \t\t\t\tactiveClassName=\"active\"\n\t// \t\t\t\t// activeStyle={{\n\t// \t\t\t\t// \tfontWeight: 'bold',\n\t// \t\t\t\t// \tcolor: 'red',\n\t// \t\t\t\t// }}\n\t// \t\t\t\tkey={link.to}\n\t// \t\t\t\tto={link.to}\n\t// \t\t\t>\n\t// \t\t\t\t{link.text}\n\t// \t\t\t</NavLink>\n\t// \t\t))}\n\t// \t</NavLink>\n\t// );\n};\n\nexport default Links;\n","import configureStore from 'store/redux';\nimport { __IS_DEV__ } from 'app';\nimport { getReactReduxFirebaseProps } from 'store/firebase';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport ThemeProvider from 'containers/ThemeProvider';\nimport { Provider as StoreProvider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from 'routes';\nimport Links from './Links';\n\nconst store = configureStore();\n// @ts-ignore\nif (__IS_DEV__) window.__redux_store = store;\n\nconst App = () => {\n\treturn (\n\t\t<StoreProvider store={store}>\n\t\t\t<div id=\"created-by-numan\" />\n\t\t\t<ReactReduxFirebaseProvider {...getReactReduxFirebaseProps(store)}>\n\t\t\t\t<ThemeProvider>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Links />\n\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</Router>\n\t\t\t\t</ThemeProvider>\n\t\t\t\t<div id=\"created-by-numan\" />\n\t\t\t</ReactReduxFirebaseProvider>\n\t\t</StoreProvider>\n\t);\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(\n\t\t\t({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\t\tgetCLS(onPerfEntry);\n\t\t\t\tgetFID(onPerfEntry);\n\t\t\t\tgetFCP(onPerfEntry);\n\t\t\t\tgetLCP(onPerfEntry);\n\t\t\t\tgetTTFB(onPerfEntry);\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from 'containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// TODO: replace polished with material ui's colorManipulator?\n// but lighten of mui is not pleasant, darken of polished is the same..\nimport { lighten } from 'polished';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { GameConfig } from 'store/redux/reducers/game/types';\nimport { createGlobalStyle } from 'styled-components';\nimport {\n\tresponsiveFontSizes,\n\tcreateMuiTheme,\n\t// eslint-disable-next-line camelcase\n\tunstable_createMuiStrictModeTheme,\n\tThemeOptions,\n} from '@material-ui/core/styles';\nimport { __IS_DEV__ } from 'app';\n\nconst theme = {\n\tpalette: {\n\t\tbackground: {\n\t\t\tprimary: 'var(--primary-background)',\n\t\t\t'primary-lighter': 'var(--primary-background-lighter)',\n\t\t\t'primary-darker': 'var(--primary-background-darker)',\n\t\t\tsecondary: 'var(--secondary-background)',\n\t\t\t'secondary-lighter': 'var(--secondary-background-lighter)',\n\t\t\t'secondary-darker': 'var(--secondary-background-darker)',\n\t\t},\n\t\tcolor: {\n\t\t\tprimary: 'var(--primary-color)',\n\t\t\t'primary-lighter': 'var(--primary-color-lighter)',\n\t\t\t'primary-darker': 'var(--primary-color-darker)',\n\t\t\tsecondary: 'var(--secondary-color)',\n\t\t\t'secondary-lighter': 'var(--secondary-color-lighter)',\n\t\t\t'secondary-darker': 'var(--secondary-color-darker)',\n\t\t\terror: 'var(--error-color)',\n\t\t\t'error-lighter': 'var(--error-color-lighter)',\n\t\t\t'error-darker': 'var(--error-color-darker)',\n\t\t\twarning: 'var(--warning-color)',\n\t\t\t'warning-lighter': 'var(--warning-color-lighter)',\n\t\t\t'warning-darker': 'var(--warning-color-darker)',\n\t\t\tsuccess: 'var(--success-color)',\n\t\t\t'success-lighter': 'var(--success-color-lighter)',\n\t\t\t'success-darker': 'var(--success-color-darker)',\n\t\t\tinfo: 'var(--info-color)',\n\t\t\t'info-lighter': 'var(--info-color-lighter)',\n\t\t\t'info-darker': 'var(--info-color-darker)',\n\t\t\tdefault: 'var(--default-color)',\n\t\t\t'default-lighter': 'var(--default-color-lighter)',\n\t\t\t'default-darker': 'var(--default-color-darker)',\n\t\t},\n\t},\n\tshape: {\n\t\tborderRadius: 'var(--border-radius)',\n\t\tpadding: 'var(--padding)',\n\t},\n\tgame: {\n\t\tcharacter: {\n\t\t\tsize: 'var(--character-size)',\n\t\t},\n\t\ttile: {\n\t\t\tsize: 'var(--tile-size)',\n\t\t},\n\t},\n\ttransition: {\n\t\thover: 'var(--hover-animation-duration)',\n\t},\n\tspacing: (s: number) => {\n\t\treturn s * 8;\n\t},\n};\n\nconst THEME_CONFIG: ThemeOptions = { palette: { type: 'dark' } };\n// eslint-disable-next-line camelcase\nconst themeFn = __IS_DEV__ ? unstable_createMuiStrictModeTheme : createMuiTheme;\nconst getMuiTheme = () => {\n\treturn responsiveFontSizes(themeFn(THEME_CONFIG));\n};\n\nconst COLORS = {\n\t'--primary-background': '#13141b',\n\t'--secondary-background': '#1a1d28',\n\t'--primary-color': '#ec7ebd',\n\t'--secondary-color': '#763ee6',\n\t'--error-color': '#f44336',\n\t'--warning-color': '#ff9800',\n\t'--success-color': '#4caf50',\n\t'--info-color': '#2196f3',\n\t'--default-color': '#E4E6EB',\n};\n\nconst GlobalStyles = createGlobalStyle<{ $gameConfig: GameConfig }>`\n\t:root {\n\t\t/* #region COLORS */\n\t\t${Object.entries(COLORS).reduce((acc, [colorKey, colorValue]) => {\n\t\t\treturn `\n\t\t\t\t${acc}${colorKey}: ${colorValue};\n\t\t\t\t${colorKey}-lighter: ${lighten(0.15, colorValue)};\n\t\t\t\t${colorKey}-darker: ${fade(colorValue, 0.05)};\n\t\t\t`;\n\t\t}, '')}\n\t\t/* #endregion */\n\n\t\t/* #region UTILITIES */\n\t\t--border-radius: 4px;\n\t\t--padding: 10px;\n\t\t/* #endregion */\n\n\t\t/* #region GAME */\n\t\t${({ $gameConfig }) => `\n\t\t\t--character-size: ${$gameConfig.sizes.character}px;\n\t\t\t--tile-size: ${$gameConfig.sizes.tile}px;\n\t\t\t--game-size: ${$gameConfig.sizes.map}px;\n\t\t\t--exploding-duration: ${$gameConfig.duration.bomb.exploding}s;\n\t\t\t--firing-duration: ${$gameConfig.duration.bomb.firing}s;\n\t\t`}\n\t\t/* #endregion */\n\t\t\n\t\t/* #region ANIMATIONS */\n\t\t/* @see https://easings.net/#easeInOutBack */\n\t\t--ease-in-out-back: cubic-bezier(0.68, -0.6, 0.32, 1.6);\n\t\t--ease-in-out-quint: cubic-bezier(0.83, 0, 0.17, 1);\n\t\t--incremental-animation-delay: 0.03s;\n\t\t--block-animation-duration: 0.5s;\n\t\t--hover-animation-duration: 0.3s;\n\t\t/* #endregion */\n\t}\n\n\t/* TODO: These will be removed once a proper UI is in place */\n\t/* #region OVERRIDES */\n\tdiv {\n\t\tcolor: white;\n\t}\n\t/* #endregion */\n\n\t/* #region GENERICS */\n\t*, ::before, ::after {\n\t\tbox-sizing: border-box;\n\t}\n\n\thtml,\n\tbody,\n\t#root {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\thtml {\n\t\tbackground-color: ${theme.palette.background.primary};\n\t\t/* color: #fff; */\n\t}\n\n\t#root {\n\t\tposition: relative;\n\t}\n\n\tpre {\n\t\twhite-space: pre-wrap;\n\t\tword-wrap: break-word;\n\t}\n\n\ta {\n\t\ttext-decoration: none;\n\t}\n\t/* #endregion */\n\n\t/* #region SCROLLBARS */\n\t*, ::before, ::after {\n\t\tscroll-behavior: smooth;\n\t\tscrollbar-color: black transparent;\n\t\tscrollbar-width: thin;\n\t}\n\n\t/* width */\n\t::-webkit-scrollbar {\n\t\twidth: 5px;\n\t\theight: 6px;\n\t}\n\n\t/* Track */\n\t::-webkit-scrollbar-track {\n\t\tbackground: #bfbfbf;\n\t}\n\n\t/* Handle */\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: black;\n\t\tborder-radius: 10px;\n\t}\n\n\t/* Handle on hover */\n\t::-webkit-scrollbar-thumb:hover {\n\t\tbackground: rgba(0, 0, 0, 0.7);\n\t}\n\t/* #endregion */\n`;\n\nexport { getMuiTheme, GlobalStyles };\nexport default theme;\n","import { KeyboardConfig } from 'containers/Game/types';\n// import { PowerUp } from 'enums';\nimport * as KeyCode from 'keycode-js';\n\nconst config = {\n\ttitle: 'Bomberman (WIP)',\n\t// powerUps: {\n\t// \t[PowerUp.Life]: 0, // number\n\t// \t[PowerUp.BombCount]: 0, // number\n\t// \t[PowerUp.BombSize]: 0, // number\n\t// \t[PowerUp.MovementSpeed]: 0, // number\n\t// } as PowerUps,\n\tkeyboardConfig: {\n\t\t0: {\n\t\t\tMoveUp: KeyCode.CODE_W,\n\t\t\tMoveRight: KeyCode.CODE_D,\n\t\t\tMoveDown: KeyCode.CODE_S,\n\t\t\tMoveLeft: KeyCode.CODE_A,\n\t\t\tDropBomb: KeyCode.CODE_SPACE,\n\t\t},\n\t\t1: {\n\t\t\tMoveUp: KeyCode.CODE_UP,\n\t\t\tMoveRight: KeyCode.CODE_RIGHT,\n\t\t\tMoveDown: KeyCode.CODE_DOWN,\n\t\t\tMoveLeft: KeyCode.CODE_LEFT,\n\t\t\tDropBomb: KeyCode.CODE_SEMICOLON,\n\t\t},\n\t} as NonNullable<KeyboardConfig>,\n};\n\nexport default config;\n","import { PlayerId, GameEnd } from 'containers/Game/types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { RouteComponentProps, StaticContext } from 'react-router';\nimport { GameConfig } from 'store/redux/reducers/game/types';\n\nenum UserRoles {\n\tDEV = 'Developer',\n\tGENERIC_USER = 'User',\n}\n\ntype Roles = Array<UserRoles>;\n\ntype Route = {\n\ttitle: string;\n\tdescription: string;\n\tpath: string;\n\tcomponent: ReactElementOrElementType;\n\troles?: Roles;\n};\n\ntype Link = {\n\tlabel: string;\n\ttooltip: string;\n\ttext: string;\n\tto: string;\n\ticon?: JSX.Element | React.ComponentType;\n};\n\ntype ReactRouterState = {\n\t/** Passed to /* */\n\treferrer?: string;\n\t/** Passed to /* */\n\tto?: string;\n\t/** Passed to /* */\n\troles?: Roles;\n\t/** Passed to /local */\n\tgameConfig?: GameConfig;\n\t/** Passed to /unauthorized */\n\tmessage?: string;\n\t/** Passed to /online/:id */\n\tplayerId?: PlayerId;\n\t/** Passed to /game-end/:id */\n\tendGame?: GameEnd;\n};\n\ntype RouteComponentPropsWithLocationState<\n\tParams extends { [K in keyof Params]?: string } = {},\n\tC extends StaticContext = StaticContext\n> = RouteComponentProps<Params, C, ReactRouterState> & {\n\terror?: string;\n};\n\nexport type {\n\tStaticContext,\n\tRouteComponentPropsWithLocationState,\n\tReactRouterState,\n\tRoles,\n\tRoute,\n\tLink,\n};\nexport { UserRoles };\n","import { BASE_PATH } from './constants';\nimport { Roles, Route, Link } from './types';\n\nconst mapRoles = (roles: Roles) => (route: Route | Link) => ({\n\t...route,\n\troles,\n});\n\nconst mapBasePathForRoutes = (route: Route) => ({\n\t...route,\n\t...(route.path !== '/' && { path: BASE_PATH + route.path }),\n});\n\nconst mapBasePathForLinks = (link: Link) => ({\n\t...link,\n\t...(link.to && { to: BASE_PATH + link.to }),\n});\n\nconst mapRouteToLink = ({ title, path }: Route) => {\n\treturn {\n\t\tlabel: title,\n\t\ttooltip: title,\n\t\ttext: title,\n\t\tto: path,\n\t} as Link;\n};\n\n/**\n * Returns true if at least one source value is contained in the\n * from array\n *\n * @example\n * ```ts\n * // Does user have any roles that match access roles?\n * const userRoles = ['A'];\n * const canAccessRoles = ['A', 'B'];\n * hasAnyFrom(canAccessRoles, userRoles) === true // true\n * ```\n *\n * @param source - List to match at least 1 element with\n * @param list - List to check if the element exists\n */\nconst hasAnyFrom = (source: Roles, from: Roles) => {\n\treturn source?.length === 0 || source.some(e => from.indexOf(e) >= 0);\n};\n\nexport {\n\tmapRoles,\n\tmapBasePathForRoutes,\n\tmapBasePathForLinks,\n\tmapRouteToLink,\n\thasAnyFrom,\n};\n"],"sourceRoot":""}