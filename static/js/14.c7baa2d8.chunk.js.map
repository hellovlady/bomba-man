{"version":3,"sources":["hooks/useOnGameEnd.tsx","api/OnlineGameUpdater.ts","store/firebase/hooks/useOnlineGameProvider.tsx","store/redux/hooks/useOnlineGame.tsx","routes/pages/Online.tsx","components/NoAccess/NoAccess.tsx","store/firebase/hooks/useFirebaseUtils.tsx","store/redux/reducers/firebase/selectors.tsx","store/firebase/hooks/useWatchOnlineGame.tsx","components/Button/Button.tsx","store/firebase/hooks/useOnlineGameActions.tsx","containers/Game/GameContainer.tsx","containers/Game/GameButton.tsx","containers/Game/GameSettings.tsx","hooks/useIsUnmounted.tsx","containers/Game/components/Cube.tsx","containers/Game/components/Bomb.tsx","containers/Game/components/Character.tsx","containers/Game/GameContent.tsx","containers/Game/components/Tile.tsx","containers/Game/components/PowerUp/PowerUp.tsx","containers/Game/components/Map.tsx","containers/Game/GameMap.tsx","containers/Game/Game.tsx","hooks/useBeforeUnload.tsx","hooks/useOnPlayerExitOnline.tsx"],"names":["useOnGameEnd","players","currentOnlinePlayerId","gameId","push","useHistory","removeOnlineGame","useOnlineGameActions","gameEndCondition","GameEndCondition","Lose","PlayerCondition","Alive","Win","useEffect","Object","values","filter","playerCondition","length","BASE_PATH","endGame","setTimeout","OnlineGameUpdater","state","updaters","getPlayerState","playerId","updateGameState","gameState","a","update","updatePlayers","addPlayer","playerConfig","create","updatePlayer","removePlayer","remove","updatePlayerId","id","updatePlayerDirection","direction","updatePlayerIsWalking","isWalking","updatePlayerCoordinates","coordinates","updatePlayerState","playerState","incrementPlayerDeathCount","deathCount","incrementPlayerPowerUp","powerUp","powerUps","updateGameMap","gameMap","animate","incrementAnimationCounter","updateGameMapSquare","square","xSquare","ySquare","addBomb","bomb","removeBomb","bombId","addPowerUp","removePowerUp","toggleIs3D","is3D","toggleIsSideView","isSideView","animationCounter","GameUpdater","useOnlineGameProvider","useFirebaseUtils","gameUpdater","useRef","gameUtils","GameUtils","current","updateGameSettings","useCallback","props","generateNewCollisionCoordinates","generateRandomGameMap","config","sizes","tiles","blockTileChance","makeMove","triggerMove","onComplete","dropBomb","triggerExplosion","cb","onExplosionComplete","triggerAnimation","triggerGameAnimation","toggleDimension","toggleGameDimension","togglePerspective","toggleGamePerspective","toggleTwoPlayer","toggleGameTwoPlayer","toggleNPC","toggleGameNpc","startGame","useOnlineGame","useWatchOnlineGame","pending","error","game","gamePlayers","provider","type","GameType","Online","location","match","params","gameProps","useOnPlayerExitOnline","Game","H1Wrapper","styled","H1","theme","palette","color","NoAccess","children","message","PageContainer","fullHeight","Spacer","spacing","baseRefPath","firebase","useFirebase","useFirebaseConnect","getPath","subPath","newProps","subPaths","dataSnapshot","onSuccess","onError","read","isLoaded","isEmpty","selectFirebase","LazyJoin","loadable","defaultGameState","generateDefaultGameState","refKey","onlineGameFromFirebase","useSelector","createSelector","online","data","makeSelectOnlineGame","LoadingIndicator","noWrapper","bombs","started","isReady","onPlayerJoin","isNPC","generatePlayer","gameConfig","keyboardConfig","onPlayerExit","keys","onStartGame","onPlayerDeath","Dead","Container","button","$variant","shape","borderRadius","padding","transition","hover","Button","forwardRef","ref","variant","size","rest","$size","memo","createOnlineGame","newGameId","key","SettingsAndMap","div","CenteredDiv","$is3D","GameContainer","GameButton","active","onClick","style","width","wordWrap","marginBottom","wrapPreventFocusLock","GameSettings","buttons","useMemo","label","disabled","map","useIsUnmounted","isMounted","CuboidSide","Cuboid","Cube","top","left","backgroundColor","collisionIndex","className","_className","height","Array","fill","_","ind","getTransform","deg","incrementalSpeedRotationKeyframes","keyframes","join","FiringBomb","FiringCubeBomb","Bomb","firingDuration","explodingDuration","tileSize","useState","ExplosionState","Firing","explosionState","setExplosionState","shouldBindEvent","sleep","bombIds","Exploding","forEach","bId","kaboom","bombSize","bombPadding","bombStyleProps","position","animationDuration","Number","Explosive","Character","name","highlight","_top","_left","success","transform","CUBE_BASE_TRANSFORM","Player","SpriteCharacter","GameContent","entries","isAlive","isPlayerDead","isSteppingOnFire","isPlayerSteppingOnFire","movement","character","tile","onPlayerIsWalking","DeadCharacter","duration","exploding","onDeathAnimationComplete","bombProps","explosionSize","getPoweredUpValue","PowerUp","BombSize","firing","Wrapper","attrs","$top","$left","$color","background","secondary","primary","$collisionIndex","$animate","$fireSquare","css","fireSquare","x","y","rotateFrom","rotateTo","borderRadiusFrom","borderRadiusTo","FireHorizontal","FireVertical","info","fireAnimation","bounceAnimation","Tile","icons","Icon","icon","TileIcon","$mapSize","$tileSize","$isTopView","Map","mapSize","isTopView","shouldAnimate","usePrevious","outer","outerInd","innerInd","hasCollision","TileEnum","NonBreaking","Breaking","squareSize","isPowerUp","FireCore","GameMap","playerIntervals","usePlayerEvents","gameContainerProps","gameSettingProps","gameMapProps","gameContentProps","useGameProps","noop","useBeforeUnload","onBeforeUnload","onUnload","window","addEventListener","removeEventListener","listen","pathname"],"mappings":"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","file":"static/js/14.c7baa2d8.chunk.js","sourcesContent":["import { GameEnd, OnlineGameId, PlayerId } from 'containers/Game/types';\nimport { GameEndCondition, PlayerCondition } from 'enums';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BASE_PATH } from 'routes/constants';\nimport { ReactRouterState } from 'routes/types';\nimport useOnlineGameActions from 'store/firebase/hooks/useOnlineGameActions';\n\nconst useOnGameEnd = (\n\tplayers: GameEnd['players'],\n\tcurrentOnlinePlayerId?: PlayerId,\n\tgameId?: OnlineGameId\n) => {\n\tconst { push } = useHistory<ReactRouterState>();\n\tconst { removeOnlineGame } = useOnlineGameActions();\n\n\tlet gameEndCondition = GameEndCondition.Lose;\n\tif (players && currentOnlinePlayerId) {\n\t\tgameEndCondition =\n\t\t\tplayers[currentOnlinePlayerId] === PlayerCondition.Alive\n\t\t\t\t? GameEndCondition.Win\n\t\t\t\t: GameEndCondition.Lose;\n\t}\n\n\tuseEffect(() => {\n\t\tconst alivePlayers = Object.values(players).filter(\n\t\t\tplayerCondition => playerCondition === PlayerCondition.Alive\n\t\t);\n\n\t\tif (alivePlayers.length > 1) return;\n\n\t\tpush(`${BASE_PATH}/game-end`, {\n\t\t\tendGame: {\n\t\t\t\tplayers,\n\t\t\t\tcurrentOnlinePlayerId,\n\t\t\t\tgameEndCondition,\n\t\t\t},\n\t\t});\n\n\t\tif (gameId) {\n\t\t\t// delay the game deletion as the death event is recreating the\n\t\t\t// object in firebase\n\t\t\tsetTimeout(() => {\n\t\t\t\tremoveOnlineGame(gameId);\n\t\t\t}, 1000);\n\t\t}\n\t}, [\n\t\tcurrentOnlinePlayerId,\n\t\tgameEndCondition,\n\t\tgameId,\n\t\tplayers,\n\t\tpush,\n\t\tremoveOnlineGame,\n\t]);\n};\n\nexport default useOnGameEnd;\n","import {\n\tAnimatableGameMap,\n\tBomb,\n\tBombId,\n\tBombs,\n\tGameState,\n} from 'store/redux/reducers/game/types';\nimport {\n\tPlayerConfig,\n\tPlayerId,\n\t// KeyboardConfig,\n\tPlayers,\n\tPlayerState,\n\tPowerUps,\n\tSquare,\n\tSquareCoordinates,\n\tTopLeftCoordinates,\n} from 'containers/Game/types';\nimport { Direction, PowerUp } from 'enums';\nimport GameUpdater from './GameUpdater';\nimport useFirebaseUtils from '../store/firebase/hooks/useFirebaseUtils';\n\nconst useFirebaseUtilsWrapper = () => useFirebaseUtils<GameState>('');\ntype FirebaseUtilsFns = ReturnType<typeof useFirebaseUtilsWrapper>;\n\nclass OnlineGameUpdater extends GameUpdater {\n\tconstructor(public state: GameState, public updaters: FirebaseUtilsFns) {\n\t\tsuper();\n\t}\n\n\t// #region Utils\n\tgetPlayerState = (playerId: PlayerId) => {\n\t\treturn this.state.players[playerId]!.state;\n\t};\n\t// #endregion\n\n\t// #region GameState\n\n\t// #region \tGameState\n\n\tupdateGameState = async (gameState: Partial<GameState>) => {\n\t\tthis.updaters.update(gameState);\n\t};\n\n\t// #endregion\n\n\t// #region \tGameState.players\n\n\t// #region \t\tGameState.players\n\tupdatePlayers = async (players: Partial<Players>) => {\n\t\tthis.updaters.update<Players>({ ...players });\n\t};\n\t// #endregion\n\n\t// #region \t\tGameState.players.[*]\n\n\taddPlayer = async (playerConfig: PlayerConfig, playerId: PlayerId) => {\n\t\tthis.updaters.create<PlayerConfig>(\n\t\t\tplayerConfig,\n\t\t\t`/players/${playerId}`\n\t\t);\n\t};\n\n\tupdatePlayer = async (\n\t\tplayerConfig: Partial<PlayerConfig>,\n\t\tplayerId: PlayerId\n\t) => {\n\t\tthis.updaters.update<PlayerConfig>(\n\t\t\t{ [playerId]: playerConfig },\n\t\t\t`/players`\n\t\t);\n\t};\n\n\tremovePlayer = async (playerId: PlayerId) => {\n\t\tthis.updaters.remove(`/players/${playerId}`);\n\t};\n\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig]\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].id\n\tupdatePlayerId = async (id: PlayerId, playerId: PlayerId) => {\n\t\tthis.updaters.update<PlayerConfig>({ id }, `/players/${playerId}`);\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].direction\n\tupdatePlayerDirection = ({\n\t\tdirection,\n\t\tid: playerId,\n\t}: Pick<PlayerConfig, 'direction' | 'id'>) => {\n\t\tthis.updaters.update<PlayerConfig>(\n\t\t\t{ direction },\n\t\t\t`/players/${playerId}`\n\t\t);\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].isWalking\n\tupdatePlayerIsWalking = ({\n\t\tisWalking,\n\t\tid: playerId,\n\t}: Pick<PlayerConfig, 'isWalking' | 'id'>) => {\n\t\tthis.updaters.update<PlayerConfig>(\n\t\t\t{ isWalking },\n\t\t\t`/players/${playerId}`\n\t\t);\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].coordinates\n\tupdatePlayerCoordinates = async (\n\t\tcoordinates: TopLeftCoordinates,\n\t\tplayerId: PlayerId,\n\t\tdirection: Direction\n\t) => {\n\t\tthis.updaters.update<PlayerConfig>(\n\t\t\t{ coordinates, direction, isWalking: true },\n\t\t\t`/players/${playerId}`\n\t\t);\n\t};\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].state\n\tupdatePlayerState = async (\n\t\tplayerState: Partial<PlayerState>,\n\t\tplayerId: PlayerId\n\t) => {\n\t\tthis.updaters.update<PlayerState>(\n\t\t\t{ ...playerState },\n\t\t\t`/players/${playerId}`\n\t\t);\n\t};\n\n\tincrementPlayerDeathCount = async (playerId: PlayerId) => {\n\t\tthis.updaters.update<PlayerState>(\n\t\t\t{ deathCount: this.getPlayerState(playerId).deathCount + 1 },\n\t\t\t`/players/${playerId}/state`\n\t\t);\n\t};\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].state.powerUps\n\tincrementPlayerPowerUp = async (powerUp: PowerUp, playerId: PlayerId) => {\n\t\tthis.updaters.update<PowerUps>(\n\t\t\t{ [powerUp]: this.getPlayerState(playerId).powerUps[powerUp] + 1 },\n\t\t\t`/players/${playerId}/state/powerUps`\n\t\t);\n\t};\n\t// #endregion\n\t// #endregion\n\n\t// #region \t\t\tGameState.players.[*].[*PlayerConfig].keyboardConfig\n\t// updatePlayerPlayerKeyboardConfig = async (\n\t// \tkeyboardConfig: KeyboardConfig,\n\t// \tplayerId: PlayerId\n\t// ) => {\n\t// \tthis.updaters.update<KeyboardConfig>(\n\t// \t\t{ ...keyboardConfig },\n\t// \t\t`/players/${playerId}`\n\t// \t);\n\t// };\n\t// #endregion\n\n\t// #endregion\n\n\t// #endregion\n\n\t// #region \tGameState.gameMap\n\n\tupdateGameMap = async ({ gameMap, animate }: AnimatableGameMap) => {\n\t\t// NOTE: Should we do a diff here and only update what's necessary?\n\t\t// we aren't sending huge data but should check this out later\n\t\tthis.updaters.update({ gameMap });\n\t\tif (animate) this.incrementAnimationCounter();\n\t};\n\n\tupdateGameMapSquare = async (\n\t\t{ xSquare, ySquare }: SquareCoordinates,\n\t\tsquare: Square\n\t) => {\n\t\tthis.updaters.update<Record<number, Square>>(\n\t\t\t{\n\t\t\t\t[xSquare]: square,\n\t\t\t},\n\t\t\t`/gameMap/${ySquare}`\n\t\t);\n\t};\n\n\t// #endregion\n\n\t// #region \tGameState.bombs\n\n\taddBomb = async (bomb: Bomb) => {\n\t\tthis.updaters.update<Bombs>({ [bomb.id]: bomb }, `/bombs`);\n\t};\n\n\tremoveBomb = async (bombId: BombId) => {\n\t\tthis.updaters.remove(`/bombs/${bombId}`);\n\t};\n\n\t// #endregion\n\n\t// #region \tGameState.powerUps\n\n\taddPowerUp = async (\n\t\tpowerUp: PowerUp,\n\t\t{ ySquare, xSquare }: SquareCoordinates\n\t) => {\n\t\tthis.updaters.update({\n\t\t\tpowerUps: {\n\t\t\t\t[ySquare]: {\n\t\t\t\t\t[xSquare]: powerUp,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t};\n\n\tremovePowerUp = async ({ ySquare, xSquare }: SquareCoordinates) => {\n\t\tthis.updaters.update({\n\t\t\tpowerUps: {\n\t\t\t\t[ySquare]: {\n\t\t\t\t\t[xSquare]: null,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t};\n\n\t// #endregion\n\n\t// #region \tGameState.gameConfig\n\t// TODO: editable-game-config\n\t// #endregion\n\n\t// #region \tGameState.[*primitives]\n\n\ttoggleIs3D = async () => {\n\t\tthis.updaters.update({\n\t\t\tis3D: !this.state.is3D,\n\t\t});\n\t};\n\n\ttoggleIsSideView = async () => {\n\t\tthis.updaters.update({\n\t\t\tisSideView: !this.state.isSideView,\n\t\t});\n\t};\n\n\tincrementAnimationCounter = async () => {\n\t\tthis.updaters.update({\n\t\t\tanimationCounter: this.state.animationCounter + 1,\n\t\t});\n\t};\n\n\t// #endregion\n\n\t// #endregion\n}\n\nexport default OnlineGameUpdater;\n","// import useAuth from 'store/firebase/hooks/useAuth';\n// TODO: notification-provider\n// import useNotificationProvider from 'store/redux/hooks/useNotificationProvider';\nimport {\n\tAnimatableGameMap,\n\tBombFn,\n\tBombId,\n\tGameState,\n\tOnMoveProps,\n\tOnTriggerMove,\n} from 'store/redux/reducers/game/types';\nimport { generateRandomGameMap } from 'utils/game';\nimport { OnDropBomb, PlayerId } from 'containers/Game/types';\nimport GameUtils from 'api/GameUtils';\nimport OnlineGameUpdater from 'api/OnlineGameUpdater';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { Direction } from 'enums';\nimport useFirebaseUtils from './useFirebaseUtils';\n\nconst useOnlineGameProvider = (gameId: string, gameState: GameState) => {\n\tconst updaters = useFirebaseUtils<GameState>(`online/${gameId}/gameState`);\n\t// const { notifyError } = useNotificationProvider();\n\t// const { userId } = useAuth();\n\n\tconst gameUpdater = useRef(new OnlineGameUpdater(gameState, updaters));\n\tconst gameUtils = useRef(new GameUtils(gameState, gameUpdater.current));\n\tconst state = useRef(gameState);\n\n\tuseEffect(() => {\n\t\tgameUpdater.current = new OnlineGameUpdater(gameState, updaters);\n\t\tgameUtils.current = new GameUtils(gameState, gameUpdater.current);\n\t}, [gameState, updaters]);\n\n\tconst updateGameSettings = useCallback((props: GameState) => {\n\t\tgameUpdater.current.updateGameState(props);\n\t}, []);\n\n\tconst updateGameMap = useCallback((props: AnimatableGameMap) => {\n\t\tgameUpdater.current.updateGameMap(props);\n\t}, []);\n\n\tconst generateNewCollisionCoordinates = useCallback(() => {\n\t\tupdateGameMap({\n\t\t\tgameMap: generateRandomGameMap(\n\t\t\t\tstate.current.config.sizes,\n\t\t\t\tstate.current.config.tiles.blockTileChance,\n\t\t\t\tstate.current.players\n\t\t\t),\n\t\t\tanimate: true,\n\t\t});\n\t}, [updateGameMap]);\n\n\tconst updatePlayerDirection = useCallback(\n\t\t(direction: Direction, id: PlayerId) => {\n\t\t\tgameUtils.current.updatePlayerDirection({ direction, id });\n\t\t},\n\t\t[]\n\t);\n\n\tconst updatePlayerIsWalking = useCallback(\n\t\t(isWalking: boolean, id: PlayerId) => {\n\t\t\tgameUtils.current.updatePlayerIsWalking({ isWalking, id });\n\t\t},\n\t\t[]\n\t);\n\n\tconst makeMove = useCallback((props: OnMoveProps) => {\n\t\tgameUtils.current.makeMove(props);\n\t}, []);\n\n\tconst triggerMove = useCallback<OnTriggerMove>(\n\t\tprops => {\n\t\t\tgameUtils.current.triggerMove({\n\t\t\t\t...props,\n\t\t\t\tonComplete: makeMove,\n\t\t\t});\n\t\t},\n\t\t[gameUtils, makeMove]\n\t);\n\n\tconst dropBomb = useCallback<OnDropBomb>(props => {\n\t\tgameUtils.current.dropBomb(props);\n\t}, []);\n\n\tconst triggerExplosion = useCallback<BombFn>((props, cb) => {\n\t\tgameUtils.current.triggerExplosion(props, cb);\n\t}, []);\n\n\tconst onExplosionComplete = useCallback((props: BombId) => {\n\t\tgameUtils.current.onExplosionComplete(props);\n\t}, []);\n\n\tconst triggerAnimation = useCallback(() => {\n\t\tgameUtils.current.triggerGameAnimation();\n\t}, []);\n\n\tconst toggleDimension = useCallback(() => {\n\t\tgameUtils.current.toggleGameDimension();\n\t}, []);\n\n\tconst togglePerspective = useCallback(() => {\n\t\tgameUtils.current.toggleGamePerspective();\n\t}, []);\n\n\tconst toggleTwoPlayer = useCallback(() => {\n\t\tgameUtils.current.toggleGameTwoPlayer();\n\t}, []);\n\n\tconst toggleNPC = useCallback(() => {\n\t\tgameUtils.current.toggleGameNpc();\n\t}, []);\n\n\tconst startGame = () => null;\n\n\treturn {\n\t\tstartGame,\n\t\tupdateGameSettings,\n\t\tgenerateNewCollisionCoordinates,\n\t\t// GAME ACTIONS\n\t\tupdatePlayerDirection,\n\t\tupdatePlayerIsWalking,\n\t\tmakeMove,\n\t\ttriggerMove,\n\t\tdropBomb,\n\t\ttriggerExplosion,\n\t\tonExplosionComplete,\n\t\t// GAME SETTINGS\n\t\ttriggerAnimation,\n\t\ttoggleDimension,\n\t\ttogglePerspective,\n\t\ttoggleTwoPlayer,\n\t\ttoggleNPC,\n\t};\n};\n\nexport default useOnlineGameProvider;\n","import { GameApiHookOnline, OnlineGameId } from 'containers/Game/types';\nimport { GameType } from 'enums';\nimport useOnlineGameProvider from 'store/firebase/hooks/useOnlineGameProvider';\nimport useWatchOnlineGame from 'store/firebase/hooks/useWatchOnlineGame';\n\nconst useOnlineGame: GameApiHookOnline = gameId => {\n\tconst {\n\t\tpending,\n\t\terror,\n\t\tgame: { gameState, gamePlayers },\n\t} = useWatchOnlineGame(gameId as string);\n\n\tconst provider = useOnlineGameProvider(gameId as OnlineGameId, gameState);\n\n\treturn {\n\t\tprovider,\n\t\tpending,\n\t\terror,\n\t\tstate: gameState,\n\t\ttype: GameType.Online,\n\t\tgamePlayers,\n\t};\n};\n\nexport default useOnlineGame;\n","import Game from 'containers/Game';\nimport useOnGameEnd from 'hooks/useOnGameEnd';\nimport useOnPlayerExitOnline from 'hooks/useOnPlayerExitOnline';\nimport { RouteComponentPropsWithLocationState } from 'routes/types';\nimport useWatchOnlineGame from 'store/firebase/hooks/useWatchOnlineGame';\nimport useOnlineGame from 'store/redux/hooks/useOnlineGame';\n\nconst Online = ({\n\tlocation,\n\tmatch: {\n\t\tparams: { id },\n\t},\n}: RouteComponentPropsWithLocationState<{ id: string }>) => {\n\tconst { pending, error, ...gameProps } = useOnlineGame(id);\n\tconst { game } = useWatchOnlineGame(id);\n\tconst currentOnlinePlayerId = location?.state?.playerId;\n\tconst players = game?.gamePlayers || {};\n\n\tuseOnPlayerExitOnline(id, currentOnlinePlayerId);\n\tuseOnGameEnd(players, currentOnlinePlayerId, id);\n\n\treturn (\n\t\tpending ||\n\t\terror || (\n\t\t\t<Game {...gameProps} playerId={currentOnlinePlayerId} gameId={id} />\n\t\t)\n\t);\n};\n\nexport default Online;\n","import PageContainer from 'components/PageContainer';\nimport { H1 } from 'components/typography';\nimport theme from 'theme';\nimport styled from 'styled-components';\nimport Spacer from 'components/Spacer';\n\nconst H1Wrapper = styled(H1)`\n\tcolor: ${theme.palette.color.error};\n`;\n\ninterface Props {\n\tmessage?: string;\n}\n\nconst DEFAULT_ERROR_MESSAGE =\n\t\"Either the game is not found or you don't have access to it.\";\nconst NoAccess: React.FC<Props> = ({\n\tchildren,\n\tmessage = DEFAULT_ERROR_MESSAGE,\n}) => (\n\t<PageContainer fullHeight>\n\t\t<Spacer spacing=\"5\" />\n\t\t<H1Wrapper>{message}</H1Wrapper>\n\t\t<Spacer spacing=\"10\" />\n\t\t{children}\n\t</PageContainer>\n);\n\nexport default NoAccess;\n","import LoadingIndicator from 'components/LoadingIndicator';\nimport NoAccess from 'components/NoAccess';\nimport {\n\tisEmpty,\n\tisLoaded,\n\tuseFirebase,\n\tuseFirebaseConnect,\n} from 'react-redux-firebase';\nimport { FirebaseUtils } from '../types';\n// eslint-disable-next-line import/no-unresolved\n// import { fromFirestore } from '../utils';\n// TODO: notification-provider\n// import useNotificationProvider from 'store/redux/hooks/useNotificationProvider';\n\nconst useFirebaseUtils = <RootSchema extends FirebaseUtils.UpdateableValue>(\n\tbaseRefPath: string\n) => {\n\t// const { notifyError } = useNotificationProvider();\n\tconst firebase = useFirebase();\n\tuseFirebaseConnect([baseRefPath]);\n\n\tconst getPath = (subPath?: FirebaseUtils.RefSubPath) => {\n\t\treturn `${baseRefPath}${subPath || ''}`;\n\t};\n\n\tconst create = async <\n\t\tOverrideSchema extends FirebaseUtils.OverridableValue = void\n\t>(\n\t\t...[newProps, subPaths, cb]: FirebaseUtils.CreateProps<\n\t\t\tRootSchema,\n\t\t\tOverrideSchema\n\t\t>\n\t): FirebaseUtils.DataSnapshotPromise => {\n\t\ttry {\n\t\t\tconst dataSnapshot = await firebase.push(\n\t\t\t\tgetPath(subPaths),\n\t\t\t\tnewProps\n\t\t\t);\n\t\t\tcb?.onSuccess?.(dataSnapshot);\n\n\t\t\treturn dataSnapshot;\n\t\t} catch (err) {\n\t\t\tif (cb?.onError) cb.onError(err);\n\t\t\t// else notifyError(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst read = <OverrideSchema extends FirebaseUtils.OverridableValue = void>(\n\t\t...[state]: FirebaseUtils.ReadProps<RootSchema, OverrideSchema>\n\t) => {\n\t\tconst pending = !isLoaded(state) && <LoadingIndicator />;\n\t\tconst error = isEmpty(state) && <NoAccess />;\n\t\treturn {\n\t\t\tstate,\n\t\t\tpending,\n\t\t\terror,\n\t\t};\n\t};\n\n\tconst update = async <\n\t\tOverrideSchema extends FirebaseUtils.OverridableValue = void\n\t>(\n\t\t...[newProps, subPaths, cb]: FirebaseUtils.UpdateProps<\n\t\t\tRootSchema,\n\t\t\tOverrideSchema\n\t\t>\n\t): FirebaseUtils.DataSnapshotPromise => {\n\t\ttry {\n\t\t\tconst dataSnapshot = await firebase.update(\n\t\t\t\tgetPath(subPaths),\n\t\t\t\tnewProps\n\t\t\t);\n\t\t\tcb?.onSuccess?.(dataSnapshot);\n\t\t\treturn dataSnapshot;\n\t\t} catch (err) {\n\t\t\tif (cb?.onError) cb.onError(err);\n\t\t\t// else notifyError(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst push = async <\n\t\tOverrideSchema extends FirebaseUtils.OverridableValue = void\n\t>(\n\t\t...[newProps, subPaths, cb]: FirebaseUtils.PushProps<\n\t\t\tRootSchema,\n\t\t\tOverrideSchema\n\t\t>\n\t): FirebaseUtils.DataSnapshotPromise => {\n\t\ttry {\n\t\t\tconst dataSnapshot = await firebase.push(\n\t\t\t\tgetPath(subPaths),\n\t\t\t\tnewProps\n\t\t\t);\n\t\t\tcb?.onSuccess?.(dataSnapshot);\n\t\t\treturn dataSnapshot;\n\t\t} catch (err) {\n\t\t\tif (cb?.onError) cb.onError(err);\n\t\t\t// else notifyError(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst remove = async (\n\t\t...[subPaths, cb]: FirebaseUtils.RemoveProps\n\t): FirebaseUtils.DataSnapshotPromise => {\n\t\ttry {\n\t\t\tconst dataSnapshot = await firebase.remove(getPath(subPaths));\n\t\t\tcb?.onSuccess?.(dataSnapshot);\n\t\t\treturn dataSnapshot;\n\t\t} catch (err) {\n\t\t\tif (cb?.onError) cb.onError(err);\n\t\t\t// else notifyError(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\treturn {\n\t\tcreate,\n\t\tread,\n\t\tupdate,\n\t\tpush,\n\t\tremove,\n\t};\n};\n\nexport default useFirebaseUtils;\n","import { createSelector, Selector } from 'reselect';\nimport { Store } from 'store/redux/types';\nimport { FirebaseState } from './types';\n\n// Direct selector to the userPreferences state\nconst selectFirebase: Selector<Store, FirebaseState> = state => {\n\treturn state.firebase;\n};\n\n// Other specific selectors\nconst makeSelectAuth = () => {\n\treturn createSelector(selectFirebase, ({ auth }) => auth);\n};\n\nconst makeSelectProfile = () => {\n\treturn createSelector(selectFirebase, ({ profile }) => profile);\n};\n\nconst makeSelectOnlineGame = (id: string) => {\n\treturn createSelector(\n\t\tselectFirebase,\n\t\t({ data: { online } }) => online?.[id]\n\t);\n};\n\n// Default selector\nconst makeSelectFirebase = () => {\n\treturn createSelector(selectFirebase, state => state);\n};\n\nexport {\n\tselectFirebase,\n\tmakeSelectAuth,\n\tmakeSelectProfile,\n\tmakeSelectOnlineGame,\n};\nexport default makeSelectFirebase;\n","import { isEmpty, isLoaded, useFirebaseConnect } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\nimport { makeSelectOnlineGame } from 'store/redux/reducers/firebase/selectors';\nimport { generateDefaultGameState, generatePlayer } from 'utils/game';\nimport LoadingIndicator from 'components/LoadingIndicator';\nimport NoAccess from 'components/NoAccess';\nimport loadable from 'utils/loadable';\nimport { OnlineGame, PlayerConfig, PlayerId } from 'containers/Game/types';\nimport gameConfig from 'config';\nimport { PlayerCondition } from 'enums';\nimport useFirebaseUtils from './useFirebaseUtils';\n// TODO: notification-provider\n// import useNotificationProvider from 'store/redux/hooks/useNotificationProvider';\n\nconst LazyJoin = loadable(() => import(`routes/pages/Join`));\n\nconst defaultGameState = generateDefaultGameState();\n\nconst useWatchOnlineGame = (id: string) => {\n\t// const { notifyError } = useNotificationProvider();\n\tconst refKey = `online/${id}`;\n\tuseFirebaseConnect(refKey);\n\tconst { update, remove } = useFirebaseUtils<OnlineGame>(refKey);\n\n\tconst onlineGameFromFirebase = useSelector(makeSelectOnlineGame(id));\n\n\tconst pending = !isLoaded(onlineGameFromFirebase) && <LoadingIndicator />;\n\tconst error = isEmpty(onlineGameFromFirebase) && (\n\t\t<NoAccess>\n\t\t\t<LazyJoin noWrapper />\n\t\t</NoAccess>\n\t);\n\n\tconst game = onlineGameFromFirebase;\n\n\tconst onPlayerJoin = (playerId: PlayerId, isNPC = false) => {\n\t\t// set player as active\n\t\tupdate<OnlineGame['gamePlayers']>(\n\t\t\t{\n\t\t\t\t[playerId]: PlayerCondition.Alive,\n\t\t\t},\n\t\t\t'/gamePlayers'\n\t\t);\n\n\t\tconst playerConfig = generatePlayer(\n\t\t\tplayerId,\n\t\t\tgame.gameState.config,\n\t\t\t(!isNPC && gameConfig.keyboardConfig) || null\n\t\t);\n\n\t\t// put him in the game state\n\t\tupdate<PlayerConfig>(playerConfig, `/gameState/players/${playerId}`);\n\t};\n\n\tconst onStartGame = () => {\n\t\tupdate({\n\t\t\tstarted: true,\n\t\t});\n\t};\n\n\tconst onEndGame = () => {\n\t\tupdate({\n\t\t\tstarted: false,\n\t\t});\n\t};\n\n\tconst onPlayerExit = (playerId: PlayerId) => {\n\t\t// remove as active player\n\t\tremove(`/gamePlayers/${playerId}`);\n\t\t// remove him from the game state\n\t\tremove(`/gameState/players/${playerId}`);\n\n\t\t// 2 because the state won't be updated just yet\n\t\tif (game.gamePlayers && Object.keys(game.gamePlayers).length <= 2) {\n\t\t\tonEndGame();\n\t\t}\n\t};\n\n\tconst onPlayerDeath = (playerId: PlayerId) => {\n\t\tupdate<OnlineGame['gamePlayers']>(\n\t\t\t{\n\t\t\t\t[playerId]: PlayerCondition.Dead,\n\t\t\t},\n\t\t\t'/gamePlayers'\n\t\t);\n\t};\n\n\tconst _game: OnlineGame = {\n\t\tgameId: id,\n\t\tgameState: {\n\t\t\tplayers: game?.gameState?.players || defaultGameState.players,\n\t\t\tgameMap: game?.gameState?.gameMap || defaultGameState.gameMap,\n\t\t\tbombs: game?.gameState?.bombs || defaultGameState.bombs,\n\t\t\tpowerUps: game?.gameState?.powerUps || defaultGameState.powerUps,\n\t\t\tis3D: game?.gameState?.is3D || defaultGameState.is3D,\n\t\t\tisSideView:\n\t\t\t\tgame?.gameState?.isSideView || defaultGameState.isSideView,\n\t\t\tanimationCounter:\n\t\t\t\tgame?.gameState?.animationCounter ||\n\t\t\t\tdefaultGameState.animationCounter,\n\t\t\tconfig: game?.gameState?.config || defaultGameState.config,\n\t\t},\n\t\tgamePlayers: game?.gamePlayers || {},\n\t\tstarted: game?.started || false,\n\t};\n\n\treturn {\n\t\tgame: _game,\n\t\tpending,\n\t\terror,\n\t\tisReady: !pending && !error,\n\t\tonPlayerJoin,\n\t\tonPlayerExit,\n\t\tonStartGame,\n\t\tonPlayerDeath,\n\t};\n};\n\nexport default useWatchOnlineGame;\n","import { forwardRef, memo } from 'react';\nimport styled from 'styled-components';\nimport theme from 'theme';\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n\tvariant?: ColorVariants;\n\tsize?: BaseSize;\n}\n\nconst Container = styled.button<StyledProps<Props, 'variant' | 'size'>>`\n\tbackground-color: ${({ $variant }) =>\n\t\ttheme.palette.color[$variant as ColorVariants]};\n\t/* IGNORE SIZE FOR NOW */\n\tborder-radius: ${theme.shape.borderRadius};\n\tpadding: ${theme.shape.padding};\n\tcursor: pointer;\n\ttransition: background-color ${theme.transition.hover};\n\n\t&:hover {\n\t\tbackground-color: ${({ $variant }) =>\n\t\t\ttheme.palette.color[`${$variant}-lighter` as ColorVariants]};\n\t}\n`;\n\n// TODO: Remove this component as we got mui now, use TooltipButton\nconst Button = forwardRef<HTMLButtonElement, Props>(\n\t({ variant = 'default', size = 'medium', children, ...rest }, ref) => {\n\t\treturn (\n\t\t\t<Container $variant={variant} $size={size} ref={ref} {...rest}>\n\t\t\t\t{children}\n\t\t\t</Container>\n\t\t);\n\t}\n);\n\nexport type { Props as ButtonProps };\nexport default memo(Button);\n","import { useFirebaseConnect } from 'react-redux-firebase';\nimport { GameState } from 'store/redux/reducers/game/types';\nimport { OnlineGame, OnlineGameId } from 'containers/Game/types';\nimport { DataSnapshot } from 'store/firebase/types';\nimport useFirebaseUtils from './useFirebaseUtils';\n\nconst useOnlineGameActions = () => {\n\tconst refKey = `online`;\n\tuseFirebaseConnect(refKey);\n\tconst { create, update, remove } = useFirebaseUtils<OnlineGame>(refKey);\n\n\tconst createOnlineGame = async (gameState: GameState) => {\n\t\t// create the game\n\t\tconst { key: newGameId } = (await create({\n\t\t\tgameState,\n\t\t\tstarted: false,\n\t\t})) as DataSnapshot;\n\t\t// set its id\n\t\tawait update(\n\t\t\t{\n\t\t\t\tgameId: newGameId as OnlineGameId,\n\t\t\t},\n\t\t\t`/${newGameId}`\n\t\t);\n\t\treturn newGameId;\n\t};\n\n\tconst removeOnlineGame = async (gameId: OnlineGameId) => {\n\t\tremove(`/${gameId}`);\n\t};\n\n\treturn {\n\t\tcreateOnlineGame,\n\t\tremoveOnlineGame,\n\t};\n};\n\nexport default useOnlineGameActions;\n","import styled from 'styled-components';\nimport Spacer from 'components/Spacer';\nimport { PickedGameState } from './types';\n\nconst SettingsAndMap = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\n\t& > :first-child {\n\t\tmargin-right: 50px;\n\t\twidth: 15%;\n\t\t@media only screen and (max-width: 600px) {\n\t\t\twidth: 100%;\n\t\t\tmargin: 50px auto;\n\t\t\torder: 2;\n\t\t\t& button {\n\t\t\t\twidth: 80% !important;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst CenteredDiv = styled.div<{ $is3D: boolean }>`\n\ttext-align: center;\n\t${({ $is3D }) => ($is3D && 'perspective: 1000') || ''}\n`;\n\ninterface Props extends PickedGameState<'is3D'> {}\n\nconst GameContainer: React.FC<Props> = ({ children, is3D }) => {\n\treturn (\n\t\t<CenteredDiv $is3D={is3D}>\n\t\t\t<Spacer spacing=\"2\" />\n\t\t\t<SettingsAndMap>{children}</SettingsAndMap>\n\t\t</CenteredDiv>\n\t);\n};\n\nexport type { Props as GameContainerProps };\nexport default GameContainer;\n","import Button from 'components/Button';\nimport { GamePayload } from 'store/redux/reducers/game/types';\nimport { wrapPreventFocusLock } from 'utils';\n\ninterface Props extends Partial<React.ComponentProps<typeof Button>> {\n\tactive?: boolean;\n\tonClick: ReactOnClick<GamePayload>;\n}\n\nconst GameButton = ({ active = false, onClick, children, ...rest }: Props) => {\n\treturn (\n\t\t<Button\n\t\t\tstyle={{ width: '100%', wordWrap: 'break-word', marginBottom: 10 }}\n\t\t\tvariant={active ? 'success' : 'warning'}\n\t\t\tonClick={wrapPreventFocusLock(onClick)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{children}\n\t\t</Button>\n\t);\n};\n\nexport default GameButton;\n","import { memo, useMemo } from 'react';\nimport GameButton from './GameButton';\nimport { GameApi } from './types';\n\ninterface Props extends GameApi {}\n\nconst GameSettings = ({ state, provider }: Props) => {\n\tconst {\n\t\tgenerateNewCollisionCoordinates,\n\t\ttogglePerspective,\n\t\ttoggleDimension,\n\t} = provider;\n\n\tconst { is3D, isSideView } = state;\n\n\tconst buttons = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: 'New Collision Coordinates',\n\t\t\t\t\tonClick: generateNewCollisionCoordinates,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Toggle 3D (Experimental)',\n\t\t\t\t\tonClick: toggleDimension,\n\t\t\t\t\tactive: is3D,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Toggle Side View',\n\t\t\t\t\tonClick: togglePerspective,\n\t\t\t\t\tactive: isSideView,\n\t\t\t\t\tdisabled: !is3D,\n\t\t\t\t},\n\t\t\t].map(({ label, ...rest }) => (\n\t\t\t\t<GameButton key={label} {...rest}>\n\t\t\t\t\t{label}\n\t\t\t\t</GameButton>\n\t\t\t)),\n\t\t[\n\t\t\tgenerateNewCollisionCoordinates,\n\t\t\tis3D,\n\t\t\tisSideView,\n\t\t\ttoggleDimension,\n\t\t\ttogglePerspective,\n\t\t]\n\t);\n\n\treturn <div>{buttons}</div>;\n};\n\nexport type { Props as GameSettingsProps };\nexport default memo(GameSettings);\n","import { useEffect, useRef } from 'react';\n\nconst useIsUnmounted = () => {\n\tconst isMounted = useRef(true);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\treturn isMounted;\n};\n\nexport default useIsUnmounted;\n","import './Cube.scss';\nimport styled from 'styled-components';\nimport { TileProps } from '../types';\n\nconst CuboidSide = styled.div``;\n\nconst Cuboid = styled.div<StyledProps<TileProps, 'size'>>`\n\t${({ $size }) => `\n\t\t--tile-size: ${$size};\n\t`}\n\theight: calc(var(--tile-size) * 1px);\n\twidth: calc(var(--tile-size) * 1px);\n\ttransform-style: preserve-3d;\n\tposition: absolute;\n\ttransform-origin: center center;\n\ttransition: 300ms;\n\n\ttransform: scale(1, 1) translateZ(calc(var(--tile-size) / 2 * -1px));\n\n\t& > ${CuboidSide} {\n\t\tborder: 1px solid var(--primary-background);\n\n\t\theight: calc(var(--tile-size) * 1px);\n\t\twidth: calc(var(--tile-size) * 1px);\n\t\t/* transform-origin: 50% 50%; */\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\tposition: absolute;\n\n\t\t/** @see https://codepen.io/jh3y/pen/BaKqQLJ */\n\t\t&:nth-of-type(1) {\n\t\t\ttransform: translate(-50%, -50%) rotateX(-90deg)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(2) {\n\t\t\ttransform: translate(-50%, -50%) rotateX(-90deg) rotateY(180deg)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(3) {\n\t\t\ttransform: translate(-50%, -50%) rotateX(-90deg) rotateY(90deg)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(4) {\n\t\t\ttransform: translate(-50%, -50%) rotateX(-90deg) rotateY(-90deg)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(5) {\n\t\t\tbackground-color: var(--secondary-background);\n\t\t\ttransform: translate(-50%, -50%)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(6) {\n\t\t\ttransform: translate(-50%, -50%)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * -1px)) rotateX(180deg);\n\t\t}\n\t}\n\n\t&.bouncy-block- {\n\t\t&no-animation {\n\t\t\ttransform: translateZ(calc(var(--tile-size) / 2 * 1px));\n\t\t\t& > ${CuboidSide} {\n\t\t\t\tbackground-color: var(--secondary-color);\n\t\t\t}\n\t\t}\n\n\t\t&0 {\n\t\t\ttransform: translateZ(calc(var(--tile-size) / 2 * 1px))\n\t\t\t\trotateX(0deg) rotateY(0deg) rotateZ(0deg);\n\t\t}\n\t}\n`;\n\nconst Cube = ({\n\tsize,\n\ttop,\n\tleft,\n\tanimate = false,\n\tvariant,\n\tcolor: backgroundColor,\n\tcollisionIndex,\n\tstyle,\n\tclassName,\n\t...rest\n}: TileProps) => {\n\tconst _className = `cuboid bouncy-block-${\n\t\t(!animate && 'no-animation') || collisionIndex || 0\n\t} ${variant}${(className && ` ${className}`) || ''}`;\n\n\treturn (\n\t\t<Cuboid\n\t\t\tclassName={_className}\n\t\t\tstyle={{ ...style, top, left, width: size, height: size }}\n\t\t\t$size={size}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{Array(6)\n\t\t\t\t.fill(0)\n\t\t\t\t.map((_, ind) => (\n\t\t\t\t\t<CuboidSide\n\t\t\t\t\t\tkey={ind}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...(backgroundColor && { backgroundColor }),\n\t\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\t\theight: size,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</Cuboid>\n\t);\n};\n\nexport default Cube;\n","import { ExplosionState, Explosive } from 'enums';\nimport useIsUnmounted from 'hooks/useIsUnmounted';\nimport { useEffect, useState } from 'react';\nimport {\n\tBomb as BombType,\n\tBombFn,\n\tBombId,\n\tGameConfigRanges,\n} from 'store/redux/reducers/game/types';\nimport styled, { keyframes } from 'styled-components';\nimport theme from 'theme';\nimport { sleep } from 'utils';\nimport { PlayerId } from '../types';\nimport Cube from './Cube';\n\nconst getTransform = (deg: number, is3D: boolean) => {\n\treturn `${\n\t\tis3D\n\t\t\t? `transform: translateZ(calc(var(--tile-size) / 2 * 2px)) rotateX(${deg}deg) rotateY(${deg}deg)`\n\t\t\t: `transform: rotate(${deg}deg)`\n\t};`;\n};\n\nconst incrementalSpeedRotationKeyframes = (is3D = false) => keyframes`\n\t0% { ${getTransform(0, is3D)} }\n\t\n\t/* 40% -> 100% */\n\t${Array(7)\n\t\t.fill(0)\n\t\t.map(\n\t\t\t(_, ind) =>\n\t\t\t\t/* start at 40% */\n\t\t\t\t`${(ind + 4) * 10}% { ${getTransform(\n\t\t\t\t\t/* gradually increase the rotation degree multiplier */\n\t\t\t\t\t(ind + 1) *\n\t\t\t\t\t\t((is3D && ((ind < 6 && 90) || 100)) ||\n\t\t\t\t\t\t\t(ind < 4 && 90) ||\n\t\t\t\t\t\t\t(ind < 6 && 270) ||\n\t\t\t\t\t\t\t360),\n\t\t\t\t\tis3D\n\t\t\t\t)} }`\n\t\t)\n\t\t.join('\\n')}\n`;\n\nconst FiringBomb = styled.div`\n\tanimation: ${incrementalSpeedRotationKeyframes()} linear forwards;\n`;\n\nconst FiringCubeBomb = styled(Cube)`\n\t/* ${({ size }) => `\n\t\t--tile-size: ${size};\n\t`} */\n\tanimation: ${incrementalSpeedRotationKeyframes(true)} linear forwards;\n`;\ninterface Props extends BombType {\n\t// skin: Skin;\n\tcolor: string;\n\ttileSize: GameConfigRanges.SquareSize;\n\tfiringDuration: number;\n\texplodingDuration: number;\n\ttriggerExplosion: BombFn;\n\tonExplosionComplete: BombFn;\n\tis3D: boolean;\n\t/** needed to not trigger the bomb explosion multiple times */\n\tcurrentOnlinePlayerId?: PlayerId;\n}\n\nconst Bomb = ({\n\tcolor: backgroundColor,\n\tfiringDuration,\n\texplodingDuration,\n\t// explosionSize,\n\tplayerId,\n\tcurrentOnlinePlayerId,\n\ttileSize,\n\tid,\n\ttop,\n\tleft,\n\ttriggerExplosion,\n\tonExplosionComplete,\n\tis3D,\n}: Props) => {\n\tconst [explosionState, setExplosionState] = useState<ExplosionState>(\n\t\tExplosionState.Firing\n\t);\n\n\tconst isMounted = useIsUnmounted();\n\n\t// We only want to bind the event if it's:\n\t// - not online game\n\t// - online game and it's the current player\n\tconst shouldBindEvent =\n\t\t!currentOnlinePlayerId || playerId === currentOnlinePlayerId;\n\n\tuseEffect(() => {\n\t\tconst kaboom = async () => {\n\t\t\tawait sleep(firingDuration * 1000);\n\t\t\tif (!isMounted.current) return;\n\t\t\ttriggerExplosion(id, async (bombIds: Set<BombId>) => {\n\t\t\t\tif (!isMounted.current) return;\n\t\t\t\t// update animation\n\t\t\t\tsetExplosionState(ExplosionState.Exploding);\n\t\t\t\tawait sleep(explodingDuration * 1000);\n\n\t\t\t\tif (!isMounted.current) return;\n\t\t\t\t// complete explosion for this bomb\n\t\t\t\tonExplosionComplete(id);\n\t\t\t\t// then complete the explosion for all the other bombs\n\t\t\t\t// that got caught in the fire complete their explosion\n\t\t\t\t// as the trigger was already handled in the reducer\n\t\t\t\tbombIds.forEach(bId => {\n\t\t\t\t\tonExplosionComplete(bId);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tif (shouldBindEvent) kaboom();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst bombSize = tileSize / 2;\n\tconst bombPadding = bombSize / 2;\n\n\tconst bombStyleProps: React.CSSProperties = {\n\t\tposition: 'absolute',\n\t\tbackgroundColor,\n\t\twidth: bombSize,\n\t\theight: bombSize,\n\t\ttop: top + bombPadding,\n\t\tleft: left + bombPadding,\n\t\tanimationDuration: `${firingDuration}s`,\n\t};\n\n\treturn (\n\t\t(explosionState === ExplosionState.Firing &&\n\t\t\t((!is3D && <FiringBomb style={bombStyleProps} />) || (\n\t\t\t\t<FiringCubeBomb\n\t\t\t\t\tsize={bombSize}\n\t\t\t\t\ttop={Number(bombStyleProps.top)}\n\t\t\t\t\tleft={Number(bombStyleProps.left)}\n\t\t\t\t\tanimate={false}\n\t\t\t\t\tvariant={Explosive.Bomb}\n\t\t\t\t\tcolor={theme.palette.color.error}\n\t\t\t\t\tcollisionIndex={1}\n\t\t\t\t\tstyle={bombStyleProps}\n\t\t\t\t/>\n\t\t\t))) ||\n\t\tnull\n\t);\n};\n\nexport default Bomb;\n","import Cube from 'containers/Game/components/Cube';\nimport { Direction, Player } from 'enums';\nimport { GameProvider } from 'store/redux/hooks/useGameProvider';\nimport { GameConfigRanges } from 'store/redux/reducers/game/types';\nimport theme from 'theme';\nimport { CUBE_BASE_TRANSFORM } from 'utils/game';\nimport { KeyboardConfig, PlayerId, TopLeftCoordinates } from '../types';\n// import CircleCharacter from './CircleCharacter';\nimport SpriteCharacter from './SpriteCharacter';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n\tid: PlayerId;\n\tcurrentOnlinePlayerId?: PlayerId;\n\tname: string;\n\tsize: GameConfigRanges.SquareSize;\n\ttileSize: GameConfigRanges.SquareSize;\n\tcoordinates: TopLeftCoordinates;\n\tkeyboardConfig?: KeyboardConfig;\n\tis3D: boolean;\n\thighlight?: boolean;\n\t// mainly for sprite\n\t// skin: Skin;\n\tonPlayerIsWalking?: GameProvider['updatePlayerIsWalking'];\n\tisWalking?: boolean;\n\tdirection?: Direction;\n\tisNPC?: boolean;\n}\n\nconst Character = ({\n\t/* skin */\n\tid,\n\tcurrentOnlinePlayerId,\n\tname,\n\tsize,\n\ttileSize,\n\tcoordinates: { top, left },\n\tkeyboardConfig,\n\tis3D,\n\thighlight = false,\n\t...rest\n}: Props) => {\n\tconst padding = (tileSize - size) / 2;\n\n\tconst _top = padding + top;\n\tconst _left = padding + left;\n\n\treturn (\n\t\t(is3D && (\n\t\t\t<Cube\n\t\t\t\tid={id}\n\t\t\t\tsize={size}\n\t\t\t\ttop={_top}\n\t\t\t\tleft={_left}\n\t\t\t\tanimate\n\t\t\t\tcolor={theme.palette.color.success}\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: CUBE_BASE_TRANSFORM,\n\t\t\t\t\t// top,\n\t\t\t\t\t// left,\n\t\t\t\t}}\n\t\t\t\tvariant={Player[id]}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t)) || (\n\t\t\t<SpriteCharacter\n\t\t\t\tid={id}\n\t\t\t\tcurrentOnlinePlayerId={currentOnlinePlayerId}\n\t\t\t\t// name={`${name}${id}`}\n\t\t\t\tname={id}\n\t\t\t\tcoordinates={{\n\t\t\t\t\ttop: _top,\n\t\t\t\t\tleft: _left,\n\t\t\t\t}}\n\t\t\t\tkeyboardConfig={keyboardConfig}\n\t\t\t\thighlight={highlight}\n\t\t\t\tsize={size}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t)\n\t);\n};\n\nexport type { Props as CharacterProps };\nexport default Character;\n","import theme from 'theme';\nimport { PowerUp } from 'enums';\nimport {\n\tgetPoweredUpValue,\n\tisPlayerDead,\n\tisPlayerSteppingOnFire,\n} from 'utils/game';\nimport useWatchOnlineGame from 'store/firebase/hooks/useWatchOnlineGame';\nimport Bomb from './components/Bomb';\nimport Character from './components/Character';\nimport { GameApi, OnlineGameId, PlayerConfig, PlayerId } from './types';\nimport DeadCharacter from './components/DeadCharacter';\n\ntype PlayerEntry = Array<[PlayerId, PlayerConfig]>;\n\ninterface Props extends GameApi {\n\tgameId?: OnlineGameId;\n}\n\nconst GameContent = ({\n\tstate,\n\tprovider,\n\tplayerId: currentOnlinePlayerId,\n\tgameId,\n}: Props) => {\n\tconst {\n\t\ttriggerExplosion,\n\t\tonExplosionComplete,\n\t\tupdatePlayerIsWalking,\n\t} = provider;\n\tconst { gameMap, players, bombs, is3D, config } = state;\n\n\tconst { onPlayerDeath } = useWatchOnlineGame(gameId || '');\n\n\treturn (\n\t\t<>\n\t\t\t{(Object.entries(players) as PlayerEntry).map(\n\t\t\t\t([playerId, playerConfig]) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcoordinates,\n\t\t\t\t\t\tstate: playerState,\n\t\t\t\t\t\t...rest\n\t\t\t\t\t} = playerConfig;\n\n\t\t\t\t\tconst isAlive = !isPlayerDead(playerState, config.powerUps);\n\t\t\t\t\tconst isSteppingOnFire = isPlayerSteppingOnFire(\n\t\t\t\t\t\tgameMap,\n\t\t\t\t\t\tcoordinates,\n\t\t\t\t\t\tconfig.sizes.movement\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(isAlive && (\n\t\t\t\t\t\t\t<Character\n\t\t\t\t\t\t\t\tcurrentOnlinePlayerId={currentOnlinePlayerId}\n\t\t\t\t\t\t\t\tkey={playerId}\n\t\t\t\t\t\t\t\tname=\"Bomber\"\n\t\t\t\t\t\t\t\tsize={config.sizes.character}\n\t\t\t\t\t\t\t\ttileSize={config.sizes.tile}\n\t\t\t\t\t\t\t\tcoordinates={coordinates!}\n\t\t\t\t\t\t\t\tis3D={is3D}\n\t\t\t\t\t\t\t\thighlight={isSteppingOnFire}\n\t\t\t\t\t\t\t\tonPlayerIsWalking={updatePlayerIsWalking}\n\t\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)) || (\n\t\t\t\t\t\t\t<DeadCharacter\n\t\t\t\t\t\t\t\tid={playerId}\n\t\t\t\t\t\t\t\tname={playerId}\n\t\t\t\t\t\t\t\tkey={playerId}\n\t\t\t\t\t\t\t\tcoordinates={coordinates!}\n\t\t\t\t\t\t\t\tsize={config.sizes.character}\n\t\t\t\t\t\t\t\texplodingDuration={\n\t\t\t\t\t\t\t\t\tconfig.duration.bomb.exploding\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonDeathAnimationComplete={onPlayerDeath}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t)}\n\t\t\t{Object.values(bombs).map(({ id, playerId, ...bombProps }) => {\n\t\t\t\tconst playerState = players[playerId]?.state;\n\t\t\t\tif (!playerState) return null;\n\n\t\t\t\tconst explosionSize = getPoweredUpValue(\n\t\t\t\t\tplayerState,\n\t\t\t\t\tPowerUp.BombSize,\n\t\t\t\t\tconfig.powerUps\n\t\t\t\t);\n\n\t\t\t\treturn (\n\t\t\t\t\t<Bomb\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tplayerId={playerId}\n\t\t\t\t\t\tcurrentOnlinePlayerId={currentOnlinePlayerId}\n\t\t\t\t\t\t{...bombProps}\n\t\t\t\t\t\tcolor={theme.palette.color.error}\n\t\t\t\t\t\ttileSize={config.sizes.tile}\n\t\t\t\t\t\texplosionSize={explosionSize}\n\t\t\t\t\t\tfiringDuration={config.duration.bomb.firing}\n\t\t\t\t\t\texplodingDuration={config.duration.bomb.exploding}\n\t\t\t\t\t\ttriggerExplosion={triggerExplosion}\n\t\t\t\t\t\tonExplosionComplete={onExplosionComplete}\n\t\t\t\t\t\tis3D={is3D}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n};\n\nexport type { Props as GameContentProps };\nexport default GameContent;\n","import { bounceAnimation } from 'animations';\nimport { Explosive } from 'enums';\nimport { memo } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport theme from 'theme';\nimport { Fire, TileProps } from '../types';\n\ntype WrapperProps = StyledProps<\n\tTileProps,\n\t| 'size'\n\t| 'top'\n\t| 'left'\n\t| 'animate'\n\t| 'color'\n\t| 'collisionIndex'\n\t| 'fireSquare'\n>;\n\nconst fireAnimation = (fireSquare: Fire) => {\n\tlet x = 0;\n\tlet y = 0;\n\tlet rotateFrom = '';\n\tlet rotateTo = '';\n\tlet borderRadiusFrom = '';\n\tlet borderRadiusTo = '';\n\n\tif (fireSquare === Explosive.FireHorizontal) {\n\t\tx = 1;\n\t} else if (fireSquare === Explosive.FireVertical) {\n\t\ty = 1;\n\t} else {\n\t\tx = 0.5;\n\t\ty = 0.5;\n\t\trotateFrom = ' rotate(90deg)';\n\t\trotateTo = ' rotate(360deg)';\n\t\tborderRadiusFrom = 'border-radius: 50%;';\n\t\tborderRadiusTo = 'border-radius: 0%;';\n\t}\n\n\treturn keyframes`\n\t\t// cool effect\n\t\t/* 0% { border: 16px solid ${theme.palette.background.primary}; transform: scale(${x}, ${y})${rotateFrom}; ${borderRadiusFrom} } */\n\t\t0% { background-color: ${theme.palette.background.primary}; transform: scale(${x}, ${y})${rotateFrom}; ${borderRadiusFrom} }\n\t\t20% { background-color: ${theme.palette.color.error}; }\n\t\t40% { background-color: ${theme.palette.color.info}; }\n\t\t50% { ${borderRadiusTo} }\n\t\t60% { background-color: ${theme.palette.color.error}; }\n\t\t80% { background-color: ${theme.palette.color.info}; }\n\t\t100% { background-color: ${theme.palette.color.error}; transform: scale(1)${rotateTo};  }\n\t`;\n};\n\nconst Wrapper = styled.div.attrs<WrapperProps>(\n\t({ $size, $top, $left, $color }) => ({\n\t\tstyle: {\n\t\t\twidth: $size,\n\t\t\theight: $size,\n\t\t\ttop: $top,\n\t\t\tleft: $left,\n\t\t\t...($color && { backgroundColor: $color }),\n\t\t},\n\t})\n)<WrapperProps>`\n\tposition: absolute;\n\t/* background-color: ${theme.palette.background.secondary}; */\n\tborder: 1px solid ${theme.palette.background.primary};\n\t${({ $color, $collisionIndex, $animate, $fireSquare }) => {\n\t\treturn (\n\t\t\t($fireSquare &&\n\t\t\t\tcss`\n\t\t\t\t\tborder: none;\n\t\t\t\t\tanimation: ${fireAnimation($fireSquare)}\n\t\t\t\t\t\tcalc(var(--firing-duration) / 2)\n\t\t\t\t\t\tvar(--ease-in-out-quint) forwards;\n\t\t\t\t`) ||\n\t\t\t($animate &&\n\t\t\t\t$color &&\n\t\t\t\tcss`\n\t\t\t\t\ttransform: scale(0, 0);\n\t\t\t\t\tz-index: 9999;\n\t\t\t\t\tanimation: ${bounceAnimation()}\n\t\t\t\t\t\tvar(--block-animation-duration) ease\n\t\t\t\t\t\tcalc(\n\t\t\t\t\t\t\t${$collisionIndex as number} *\n\t\t\t\t\t\t\t\tvar(--incremental-animation-delay)\n\t\t\t\t\t\t)\n\t\t\t\t\t\tforwards;\n\t\t\t\t`) ||\n\t\t\t''\n\t\t);\n\t}}\n`;\n\nconst Tile = ({\n\tsize,\n\ttop,\n\tleft,\n\tcolor,\n\tcollisionIndex,\n\tanimate = false,\n\tfireSquare,\n}: TileProps) => {\n\treturn (\n\t\t<Wrapper\n\t\t\t$size={size}\n\t\t\t$top={top}\n\t\t\t$left={left}\n\t\t\t$animate={animate}\n\t\t\t$color={color}\n\t\t\t$collisionIndex={collisionIndex}\n\t\t\t$fireSquare={fireSquare}\n\t\t/>\n\t);\n};\n\nexport default memo(Tile);\n","import { PowerUp as PowerUpEnum } from 'enums';\nimport TileIcon from '../TileIcon';\nimport icons from './icons';\n\ninterface Props {\n\tvariant: PowerUpEnum;\n\tsize: number;\n\ttop: number;\n\tleft: number;\n}\n\nconst PowerUp = ({ variant, top, left, size }: Props) => {\n\tconst { icon: Icon, color } = icons[variant];\n\treturn (\n\t\t<TileIcon $top={top} $left={left} $size={size}>\n\t\t\t<Icon color={color} />\n\t\t</TileIcon>\n\t);\n};\n\nexport default PowerUp;\n","import usePrevious from 'hooks/usePrevious';\nimport styled from 'styled-components';\nimport theme from 'theme';\nimport { Explosive, Tile as TileEnum } from 'enums';\nimport { isPowerUp } from 'utils/game';\nimport { useEffect } from 'react';\nimport { GameConfig } from 'store/redux/reducers/game/types';\nimport Cube from './Cube';\nimport Tile from './Tile';\nimport { GameMap, Square, TileProps } from '../types';\nimport PowerUp from './PowerUp';\n\ninterface Props {\n\tsizes: GameConfig['sizes'];\n\tgameMap: GameMap;\n\tis3D: boolean;\n\tisTopView: boolean;\n\tanimationCounter: number;\n}\n\nconst Wrapper = styled.div<\n\tStyledProps<Props, 'is3D' | 'isTopView'> & {\n\t\t$mapSize: GameConfig['sizes']['map'];\n\t\t$tileSize: GameConfig['sizes']['tile'];\n\t}\n>`\n\t${({ $mapSize, $tileSize }) => `\n\t\twidth: calc(${$tileSize}px * ${$mapSize});\n\t\theight: calc(${$tileSize}px * ${$mapSize});\n\t`}\n\tborder-radius: ${theme.shape.borderRadius};\n\tbackground-color: ${theme.palette.background.secondary};\n\tposition: relative;\n\tbox-shadow: 0 10px 20px rgba(0, 0, 0, 0.5), 0 6px 6px rgba(0, 0, 0, 0.6);\n\ttransition: transform var(--block-animation-duration);\n\n\t${({ $is3D, $isTopView }) => {\n\t\tlet style = '';\n\t\tif ($is3D) {\n\t\t\tstyle += 'transform-style: preserve-3d;';\n\t\t\tif (!$isTopView) {\n\t\t\t\tstyle += `\\ntransform: rotateX(-24deg) rotateY(-24deg) rotateX(90deg);`;\n\t\t\t}\n\t\t}\n\t\treturn style;\n\t}}\n`;\n\nconst Map: React.FC<Props> = ({\n\tsizes: { map: mapSize, tile: tileSize },\n\tgameMap,\n\tis3D,\n\tisTopView,\n\tanimationCounter,\n\tchildren,\n}) => {\n\t// we only need to animate when new collision is set using the button\n\t// need to prevent explosion diff from re-animating tiles\n\tconst previousAnimationCounter = usePrevious(animationCounter);\n\tlet shouldAnimate = animationCounter !== previousAnimationCounter;\n\n\tuseEffect(() => {\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tshouldAnimate = true;\n\t}, []);\n\n\tlet collisionIndex = 1;\n\treturn (\n\t\t<Wrapper\n\t\t\t$mapSize={mapSize}\n\t\t\t$tileSize={tileSize}\n\t\t\t$is3D={is3D}\n\t\t\t$isTopView={isTopView}\n\t\t>\n\t\t\t{Object.keys(gameMap).map((outer, outerInd) => {\n\t\t\t\treturn Object.values(gameMap[outer]).map(\n\t\t\t\t\t(square: Square, innerInd) => {\n\t\t\t\t\t\tconst hasCollision =\n\t\t\t\t\t\t\tsquare === TileEnum.NonBreaking ||\n\t\t\t\t\t\t\tsquare === TileEnum.Breaking;\n\n\t\t\t\t\t\tconst key = `${outerInd}_${innerInd}`;\n\t\t\t\t\t\tconst squareSize = tileSize;\n\t\t\t\t\t\tconst top = outerInd * tileSize;\n\t\t\t\t\t\tconst left = innerInd * tileSize;\n\n\t\t\t\t\t\t// if it's a PowerUp\n\t\t\t\t\t\tif (isPowerUp(square)) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<PowerUp\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tsize={squareSize}\n\t\t\t\t\t\t\t\t\tvariant={square as ValuesOf<typeof PowerUp>}\n\t\t\t\t\t\t\t\t\ttop={top}\n\t\t\t\t\t\t\t\t\tleft={left}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet fireSquare;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsquare === Explosive.FireCore ||\n\t\t\t\t\t\t\tsquare === Explosive.FireHorizontal ||\n\t\t\t\t\t\t\tsquare === Explosive.FireVertical\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tfireSquare = square;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// TODO: Get this key properly\n\t\t\t\t\t\tconst props: TileProps & { key: string } = {\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tsize: squareSize,\n\t\t\t\t\t\t\ttop,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\tanimate: shouldAnimate,\n\t\t\t\t\t\t\tvariant: square,\n\t\t\t\t\t\t\tfireSquare,\n\t\t\t\t\t\t\t...(hasCollision && {\n\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\ttheme.palette.color[\n\t\t\t\t\t\t\t\t\t\tsquare === TileEnum.NonBreaking\n\t\t\t\t\t\t\t\t\t\t\t? 'secondary'\n\t\t\t\t\t\t\t\t\t\t\t: 'primary'\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcollisionIndex: collisionIndex++,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t(is3D &&\n\t\t\t\t\t\t\t\t((hasCollision && <Cube {...props} />) || (\n\t\t\t\t\t\t\t\t\t<Tile {...props} />\n\t\t\t\t\t\t\t\t))) || <Tile {...props} />\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t})}\n\t\t\t{children}\n\t\t</Wrapper>\n\t);\n};\n\nexport default Map;\n","import { GameConfig } from 'store/redux/reducers/game/types';\nimport Map from './components/Map';\nimport { PickedGameState } from './types';\n\ninterface Props\n\textends PickedGameState<\n\t\t'gameMap' | 'is3D' | 'isSideView' | 'animationCounter'\n\t> {\n\tsizes: GameConfig['sizes'];\n}\n\nconst GameMap: React.FC<Props> = ({\n\tsizes,\n\tchildren,\n\tgameMap,\n\tis3D,\n\tisSideView,\n\tanimationCounter,\n}) => {\n\treturn (\n\t\t<Map\n\t\t\tsizes={sizes}\n\t\t\tgameMap={gameMap}\n\t\t\tis3D={is3D}\n\t\t\tisTopView={!isSideView}\n\t\t\tanimationCounter={animationCounter}\n\t\t>\n\t\t\t{children}\n\t\t</Map>\n\t);\n};\n\nexport type { Props as GameMapProps };\nexport default GameMap;\n","import usePlayerEvents from 'store/redux/hooks/usePlayerEvents';\nimport GameContainer from './GameContainer';\nimport GameSettings from './GameSettings';\nimport GameContent from './GameContent';\nimport GameMap from './GameMap';\nimport { GameApi } from './types';\n\nconst useGameProps = (props: GameApi) => {\n\tconst {\n\t\tstate: { is3D, gameMap, isSideView, animationCounter, config },\n\t\t// provider,\n\t\tgameId,\n\t\ttype,\n\t} = props;\n\n\tconst gameContainerProps = {\n\t\tis3D,\n\t};\n\n\tconst gameSettingProps = {\n\t\t...props,\n\t\ttype,\n\t};\n\n\tconst gameMapProps = {\n\t\tsizes: config.sizes,\n\t\tgameMap,\n\t\tis3D,\n\t\tisSideView,\n\t\tanimationCounter,\n\t};\n\n\tconst gameContentProps = {\n\t\t...props,\n\t\tgameId,\n\t};\n\n\treturn {\n\t\tgameContainerProps,\n\t\tgameSettingProps,\n\t\tgameMapProps,\n\t\tgameContentProps,\n\t};\n};\n\nconst Game = (props: GameApi) => {\n\tconst playerIntervals = usePlayerEvents(props);\n\tconst {\n\t\tgameContainerProps,\n\t\tgameSettingProps,\n\t\tgameMapProps,\n\t\tgameContentProps,\n\t} = useGameProps(props);\n\n\treturn (\n\t\t<GameContainer {...gameContainerProps}>\n\t\t\t<GameSettings {...gameSettingProps} />\n\t\t\t<GameMap {...gameMapProps}>\n\t\t\t\t<GameContent {...gameContentProps} />\n\t\t\t</GameMap>\n\t\t\t{playerIntervals}\n\t\t</GameContainer>\n\t);\n};\n\nexport default Game;\n","import { useEffect } from 'react';\n\nconst noop = () => null;\ntype UseBeforeLoadCb = (this: Window, ev: BeforeUnloadEvent) => any;\n\nconst useBeforeUnload = (\n\tonBeforeUnload: UseBeforeLoadCb,\n\tonUnload: UseBeforeLoadCb = noop\n) => {\n\tuseEffect(() => {\n\t\twindow.addEventListener('beforeunload', onBeforeUnload);\n\t\twindow.addEventListener('unload', onUnload);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('beforeunload', onBeforeUnload);\n\t\t\twindow.removeEventListener('unload', onUnload);\n\t\t};\n\t});\n};\n\nexport default useBeforeUnload;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { OnlineGameId, PlayerId } from 'containers/Game/types';\nimport { BASE_PATH } from 'routes/constants';\nimport useWatchOnlineGame from 'store/firebase/hooks/useWatchOnlineGame';\nimport useBeforeUnload from './useBeforeUnload';\n\nconst useOnPlayerExitOnline = (gameId: OnlineGameId, playerId?: PlayerId) => {\n\tconst { onPlayerExit } = useWatchOnlineGame(gameId);\n\tconst { listen } = useHistory();\n\tuseBeforeUnload(() => {\n\t\tif (!playerId) return;\n\t\tonPlayerExit(playerId);\n\t});\n\n\t/** @see https://help.mouseflow.com/en/articles/4310818-tracking-url-changes-with-react#:~:text=2.%20Listening%20for%20route%20changes */\n\tuseEffect(() => {\n\t\treturn listen(({ pathname }) => {\n\t\t\tif (!playerId) return;\n\t\t\t// if we are redirected to the game, don't trigger this\n\t\t\tif (pathname === `${BASE_PATH}/online/${gameId}`) return;\n\t\t\t// end game screen should not trigger this either\n\t\t\tif (pathname === `${BASE_PATH}/game-end`) return;\n\t\t\tonPlayerExit(playerId);\n\t\t});\n\t}, [gameId, listen, onPlayerExit, playerId]);\n};\n\nexport default useOnPlayerExitOnline;\n"],"sourceRoot":""}