{"version":3,"sources":["components/typography/CenteredTypography.tsx","components/typography/H1.tsx","components/typography/H4.tsx","components/typography/Small.tsx","components/PageContainer/PageContainer.tsx","components/Form/types.ts","components/ContainerWithCenteredItems/ContainerWithCenteredItems.tsx","components/TooltipButton/StyledIconButton.tsx","components/TooltipButton/StyledLoadingIconButton.tsx","components/TooltipButton/TooltipButton.tsx","components/Form/useForm.tsx","components/Form/FormField.tsx","components/Form/FormContainer.tsx","components/Form/Form.tsx","components/Form/components/Text.tsx","components/Form/components/Password.tsx","components/Form/components/Checkbox.tsx","components/Popover/Popover.tsx","components/ColorPicker/ColorPicker.tsx","components/Form/components/ColorPicker.tsx","components/Form/components/Slider.tsx","components/Form/components/Rating.tsx","components/Form/components/index.tsx","containers/RoomCreator/components/PaperWrapper.tsx","containers/RoomCreator/components/Section.tsx","containers/RoomCreator/components/WrappedSectionItem.tsx","containers/RoomCreator/components/WrappedSection.tsx"],"names":["CenteredTypography","styled","Typography","H1","children","rest","variant","component","H4","Small","Wrapper","div","theme","palette","background","secondary","$fullHeight","navbarHeight","document","getElementById","clientHeight","fullHeight","Array","fill","reduce","acc","PageContainer","ContainerWithCenteredItems","container","item","xs","style","backgroundColor","FormComponent","ComponentTypes","Grid","$horizontal","$vertical","horizontal","vertical","StyledIconButton","IconButton","$bg","paletteColors","main","getContrastText","dark","sizeMap","default","small","large","multiplierMap","StyledLoadingIconButton","LoadingIndicator","$iconSize","iconSize","typography","pxToRem","TooltipButton","tooltip","interactive","onClick","bg","icon","disabled","type","preventDefaultEvent","displayTooltipOnClickForMobile","loading","text","Error","useState","isTooltipOpen","setIsTooltipOpen","smAndDown","useMediaQuery","breakpoints","down","wrappedOnClick","e","a","preventDefault","stopPropagation","setTimeout","button","color","startIcon","getElementFromElementOrType","endIcon","cloneElement","fontSize","tooltipText","className","Tooltip","title","enterTouchDelay","disableFocusListener","open","onOpen","onClose","useForm","onSubmit","defaultValues","schema","firstFocusElementName","reactHookFormUtils","useReactHookForm","resolver","yupResolver","setFocus","handleSubmit","errors","formState","useEffect","utils","getRequiredField","fieldName","required","field","get","rules","helperText","message","error","checkIfRequiredField","keys","split","reverse","length","key","pop","fields","exclusiveTests","err","values","ref","focus","Object","FormField","control","register","setValue","trigger","name","label","boundNames","dependentFields","defaultValue","formItemProps","controllerRequiredProps","componentRequiredProps","controllerProps","As","COMPONENTS","componentProps","render","onChange","value","forEach","pathName","onChangeRest","FormGroup","FormContainer","submitText","doubleSubmit","isSubmitting","setIsSubmitting","submitButton","justify","sm","md","fullWidth","onKeyUp","noValidate","autoComplete","Spacer","spacing","Form","items","focusOnFirstElement","containerProps","_containerProps","width","map","props","TextField","Text","forwardRef","inputRef","Password","Checkbox","FormControlLabel","checked","Popover","buttonComponent","passCallback","passDownOnCloseProp","anchorOrigin","transformOrigin","anchorEl","setAnchorEl","currentTarget","isPopoverOpen","Boolean","id","undefined","aria-describedby","popoverOnClose","ColoredIcon","CheckboxIcon","shape","borderRadius","ColorPicker","colors","onChangeComplete","hex","Slider","valueLabelDisplay","_color","useTheme","aria-labelledby","event","newValue","labelPlacement","alignItems","MuiRating","Rating","Number","PaperWrapper","isMain","Paper","Box","p","Section","description","wrap","direction","WrappedSectionItem","Divider","padding","WrappedSection","ind","sectionName","subTitle","subDescription","subItems","maxWidth"],"mappings":"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","file":"static/js/2.8935c0d2.chunk.js","sourcesContent":["import { Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst CenteredTypography = styled(Typography)<{\n\t// BUG: gotta override here\n\tcomponent: React.ElementType;\n}>`\n\ttext-align: center;\n`;\n\nexport default CenteredTypography;\n","import { TypographyProps } from '@material-ui/core';\nimport CenteredTypography from './CenteredTypography';\n\nconst H1: React.FC<TypographyProps> = ({ children, ...rest }) => {\n\treturn (\n\t\t<CenteredTypography variant=\"h4\" component=\"h1\" {...rest}>\n\t\t\t{children}\n\t\t</CenteredTypography>\n\t);\n};\n\nexport default H1;\n","import { TypographyProps } from '@material-ui/core';\nimport CenteredTypography from './CenteredTypography';\n\nconst H4: React.FC<TypographyProps> = ({ children, ...rest }) => {\n\treturn (\n\t\t<CenteredTypography variant=\"body1\" component=\"h4\" {...rest}>\n\t\t\t{children}\n\t\t</CenteredTypography>\n\t);\n};\n\nexport default H4;\n","import { TypographyProps } from '@material-ui/core';\nimport CenteredTypography from './CenteredTypography';\n\nconst Small: React.FC<TypographyProps> = ({ children, ...rest }) => {\n\treturn (\n\t\t<CenteredTypography variant=\"body2\" component=\"small\" {...rest}>\n\t\t\t{children}\n\t\t</CenteredTypography>\n\t);\n};\n\nexport default Small;\n","import ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\nimport { PaperWrapper } from 'containers/RoomCreator/components';\nimport styled from 'styled-components';\nimport theme from 'theme';\n\nconst Wrapper = styled.div<StyledProps<Props, 'fullHeight'>>`\n\t/* padding: 20px; */\n\tbackground: ${theme.palette.background.secondary};\n\t${({ $fullHeight }) => {\n\t\tif (!$fullHeight) return '';\n\n\t\tconst navbarHeight =\n\t\t\tdocument.getElementById('site-navbar')?.clientHeight || 60;\n\n\t\t/** add 3 full heights for each div in the PageContainer */\n\t\tconst fullHeight = `${Array(3)\n\t\t\t.fill(0)\n\t\t\t.reduce(acc => {\n\t\t\t\treturn `${acc} > div { height: 100%; `;\n\t\t\t}, '')}}}}`;\n\n\t\treturn `\n\t\t\theight: calc(100% - ${navbarHeight}px);\n\t\t\t${fullHeight}\n\t\t`;\n\t}}\n`;\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n\tfullHeight?: boolean;\n}\n\nconst PageContainer: React.FC<Props> = ({\n\tchildren,\n\tfullHeight = false,\n\t...rest\n}) => {\n\treturn (\n\t\t<Wrapper $fullHeight={fullHeight} {...rest}>\n\t\t\t<ContainerWithCenteredItems container item xs={12}>\n\t\t\t\t<PaperWrapper\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\ttheme.palette.background['primary-lighter'],\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</PaperWrapper>\n\t\t\t</ContainerWithCenteredItems>\n\t\t</Wrapper>\n\t);\n};\n\nexport default PageContainer;\n","import { ControllerProps, Path, UseFormReturn } from 'react-hook-form';\nimport { FormProps } from '.';\nimport COMPONENTS from './components';\n\nenum FormComponent {\n\tText = 'Text',\n\tPassword = 'Password',\n\tCheckbox = 'Checkbox',\n\tColorPicker = 'ColorPicker',\n\tSlider = 'Slider',\n\tRating = 'Rating',\n}\n\nnamespace ComponentTypes {\n\texport type Text = typeof COMPONENTS[FormComponent.Text];\n\texport type Password = typeof COMPONENTS[FormComponent.Password];\n\texport type Checkbox = typeof COMPONENTS[FormComponent.Checkbox];\n\texport type ColorPicker = typeof COMPONENTS[FormComponent.ColorPicker];\n\texport type Slider = typeof COMPONENTS[FormComponent.Slider];\n\texport type Rating = typeof COMPONENTS[FormComponent.Rating];\n}\n\ntype PossibleComponentProps = Partial<\n\t| React.ComponentProps<ComponentTypes.Text>\n\t| React.ComponentProps<ComponentTypes.Password>\n\t| React.ComponentProps<ComponentTypes.Checkbox>\n\t| React.ComponentProps<ComponentTypes.ColorPicker>\n\t| React.ComponentProps<ComponentTypes.Slider>\n\t| React.ComponentProps<ComponentTypes.Rating>\n>;\n\ntype FormItem<Schema> = {\n\ttype: FormComponent;\n\tname: Path<Schema>;\n\tlabel: string;\n\t/** If you want a field to update other fields' values */\n\tboundNames?: Array<Path<Schema>>;\n\t/**\n\t * react-hook-form doesn't revalidate all fields due to performance issues\n\t * @see https://github.com/react-hook-form/react-hook-form/issues/1575#issuecomment-659136700\n\t * so pass all the dependent field names here to validate them together\n\t */\n\tdependentFields?: Array<Path<Schema>>;\n\trequired?: boolean;\n\tdefaultValue?: string;\n} & PossibleComponentProps;\n\ntype PropsWithFormControl<T> = Omit<T, 'onChange' | 'icon'> & {\n\tlabel: string;\n\tonChange: (\n\t\tvalue: any\n\t) =>\n\t\t| void\n\t\t| ((event: React.ChangeEvent<{}>, value: number | number[]) => void)\n\t\t| undefined;\n};\n\ntype UseFormProps<Schema> = Omit<\n\tFormProps<Schema>,\n\t'submitText' | 'items' | 'focusOnFirstElement'\n> & {\n\tfirstFocusElementName?: Path<Schema>;\n};\n\ntype UseFormUtils<Schema> = {\n\tgetRequiredField: (\n\t\tfieldName: Path<Schema>,\n\t\trequired: boolean\n\t) => [Pick<ControllerProps, 'rules'>, DynamicObject];\n\tcheckIfRequiredField: (fieldName: Path<Schema>) => boolean;\n} & UseFormReturn<Schema>;\n\nexport { FormComponent };\nexport type {\n\tFormItem,\n\tComponentTypes,\n\tPropsWithFormControl,\n\tUseFormProps,\n\tUseFormUtils,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { GridProps, Grid } from '@material-ui/core';\n\nconst Wrapper = styled(Grid)<{ $horizontal: boolean; $vertical: boolean }>`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\t${({ $horizontal, $vertical }) => `\n\t\t${$horizontal && 'justify-content: center;'}\n\t\t${$vertical && 'height: 100%; align-items: center;'}\n\t`}\n`;\n\ninterface Props extends GridProps {\n\thorizontal?: boolean;\n\tvertical?: boolean;\n}\n\n/**\n * Centered Grid\n *\n * @component\n */\nconst ContainerWithCenteredItems: React.FC<Props> = ({\n\tchildren,\n\thorizontal = true,\n\tvertical = false,\n\t...rest\n}) => (\n\t<Wrapper $horizontal={horizontal} $vertical={vertical} {...rest}>\n\t\t{children}\n\t</Wrapper>\n);\n\nexport default ContainerWithCenteredItems;\n","import { IconButton } from '@material-ui/core';\nimport { Palette, PaletteColor } from '@material-ui/core/styles/createPalette';\nimport styled from 'styled-components';\n\nconst StyledIconButton = styled(IconButton)<{\n\t$bg?: KeysOf<Palette>;\n}>`\n\t${({ theme, $bg }) => {\n\t\tif (!$bg) return '';\n\n\t\tconst paletteColors = theme.palette[$bg] as PaletteColor;\n\n\t\treturn `\n\t\t\t&.MuiIconButton-root {\n\t\t\t\t\tbackground-color: ${paletteColors.main};\n\t\t\t\t\tcolor: ${theme.palette.getContrastText(paletteColors.main)};\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tbackground-color: ${paletteColors.dark};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`;\n\t}}\n`;\n\nexport default StyledIconButton;\n","import styled from 'styled-components';\nimport LoadingIndicator from 'components/LoadingIndicator';\nimport { SvgIconProps } from '@material-ui/core';\n\ntype SizeMap = Omit<\n\tRecord<NonNullable<SvgIconProps['fontSize']>, number>,\n\t'inherit'\n>;\n\nconst sizeMap: SizeMap = {\n\tdefault: 24,\n\tsmall: 20,\n\tlarge: 35,\n};\n\nconst multiplierMap: SizeMap = {\n\tdefault: 2,\n\tsmall: 2.1,\n\tlarge: 1.7,\n};\n\nconst StyledLoadingIconButton = styled(LoadingIndicator)<{\n\t$iconSize: SvgIconProps['fontSize'];\n}>`\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\t${({ theme, $iconSize }) => {\n\t\tif (!$iconSize || $iconSize === 'inherit') return '';\n\n\t\tconst iconSize = theme.typography.pxToRem(\n\t\t\t(sizeMap[$iconSize] || sizeMap.default) *\n\t\t\t\t(multiplierMap[$iconSize] || multiplierMap.default)\n\t\t);\n\n\t\treturn `\n\t\t\twidth: ${iconSize} !important;\n\t\t\theight: ${iconSize} !important;\n\t\t`;\n\t}}\n`;\n\nexport default StyledLoadingIconButton;\n","import { cloneElement, useState } from 'react';\nimport {\n\tButton as MuiButton,\n\tIconButtonProps,\n\tPropTypes,\n\tSvgIconProps,\n\tTheme,\n\tTooltip,\n\tuseMediaQuery,\n} from '@material-ui/core';\nimport { ButtonProps } from '@material-ui/core/Button';\nimport { getElementFromElementOrType } from 'utils/react';\nimport LoadingIndicator from 'components/LoadingIndicator';\nimport { Palette } from '@material-ui/core/styles/createPalette';\nimport StyledIconButton from './StyledIconButton';\nimport StyledLoadingIconButton from './StyledLoadingIconButton';\n\ntype Btn = ButtonProps | IconButtonProps;\n\ninterface Props {\n\t// ========== Tooltip props ==========\n\t/**\n\t * - Tooltip to display\n\t */\n\ttooltip?: string;\n\tinteractive?: boolean;\n\t// ========== Button props ==========\n\tonClick?: ReactOnButtonClick;\n\t/**\n\t * - Background color variant\n\t */\n\tbg?: PropTypes.Color & KeysOf<Palette>;\n\ticon?: ReactElementOrElementType;\n\tdisabled?: boolean;\n\ttype?: React.ComponentProps<'button'>['type'];\n\tpreventDefaultEvent?: boolean;\n\tdisplayTooltipOnClickForMobile?: boolean;\n\tloading?: boolean;\n\t// ========== TextButton props ==========\n\t/**\n\t * - Text to display in a text button\n\t * - If filled, generates a TextTooltipButton\n\t */\n\ttext?: string;\n\tvariant?: ButtonProps['variant'];\n\t// ========== IconButton props ==========\n\t/**\n\t * - Icon size\n\t * - 'inherit' loading size is same as default\n\t */\n\ticonSize?: SvgIconProps['fontSize'];\n}\n\n/**\n * Text/Icon Button with Tooltip. If the text prop has value then\n * it's a TextTooltipButton, else it's IconTooltipButton\n *\n * @example\n * ```js\n * // IconTooltipButton\n * <TooltipButton tooltip=\"Details\" onClick={onClick} icon={DetailsIcon} />\n *\n * // TextTooltipButton\n * <TooltipButton tooltip=\"Details\" text=\"Details\" onClick={onClick} icon={DetailsIcon} />\n * ```\n *\n * @component\n */\nconst TooltipButton = ({\n\t// Tooltip defaultProps\n\ttooltip,\n\tinteractive = false,\n\t// Button defaultProps\n\tonClick,\n\tbg,\n\ticon,\n\tdisabled = false,\n\ttype = 'button',\n\tpreventDefaultEvent = false,\n\tdisplayTooltipOnClickForMobile = true,\n\tloading = false,\n\t// TextButton defaultProps\n\ttext,\n\tvariant = 'contained',\n\t// IconButton defaultProps\n\ticonSize = 'default',\n\t// IconButton props\n\t// MuiButtonProps|MuiIconButtonProps\n\t...rest\n}: Props & Btn) => {\n\tif (type !== 'submit' && !onClick) {\n\t\tthrow new Error(\n\t\t\t'Either provide an onClick handler or set the type=\"submit\"'\n\t\t);\n\t}\n\n\tif (!text && !tooltip) {\n\t\tthrow new Error('Icon buttons require a tooltip text!');\n\t}\n\n\t// Manual triggering of tooltip on mobile\n\tconst [isTooltipOpen, setIsTooltipOpen] = useState(false);\n\tconst smAndDown = useMediaQuery<Theme>(theme =>\n\t\ttheme.breakpoints.down('sm')\n\t);\n\n\t// Prevents default event\n\t// eslint-disable-next-line max-len\n\tconst wrappedOnClick: ReactOnButtonClick = async e => {\n\t\tif (preventDefaultEvent) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t}\n\n\t\t// Manual triggering of tooltip on mobile\n\t\tif (displayTooltipOnClickForMobile && smAndDown) {\n\t\t\tsetIsTooltipOpen(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetIsTooltipOpen(false);\n\t\t\t}, 1000);\n\t\t}\n\n\t\tonClick?.(e);\n\t};\n\n\tlet button = text ? (\n\t\t<MuiButton\n\t\t\tvariant={variant}\n\t\t\tcolor={bg}\n\t\t\t{...(icon && { startIcon: getElementFromElementOrType(icon) })}\n\t\t\tonClick={wrappedOnClick}\n\t\t\tdisabled={disabled || loading}\n\t\t\t// endIcon={(loading && <LoadingIndicator size=\"small\" />) || null}\n\t\t\tendIcon={(loading && <LoadingIndicator />) || null}\n\t\t\ttype={type}\n\t\t\t{...(rest as ButtonProps)}\n\t\t>\n\t\t\t{text}\n\t\t</MuiButton>\n\t) : (\n\t\t<StyledIconButton\n\t\t\tonClick={wrappedOnClick}\n\t\t\tdisabled={disabled || loading}\n\t\t\ttype={type}\n\t\t\t$bg={bg}\n\t\t\t{...(rest as IconButtonProps)}\n\t\t>\n\t\t\t{loading && <StyledLoadingIconButton $iconSize={iconSize} />}\n\t\t\t{icon &&\n\t\t\t\tcloneElement(getElementFromElementOrType(icon), {\n\t\t\t\t\tfontSize: iconSize,\n\t\t\t\t})}\n\t\t</StyledIconButton>\n\t);\n\n\tlet tooltipText = tooltip || text || '';\n\n\t// To show tooltip on disabled items\n\tif (disabled) {\n\t\tbutton = <span className=\"tooltip-wrapper\">{button}</span>;\n\t\ttooltipText += ' (DISABLED)';\n\t}\n\n\treturn (\n\t\t<Tooltip\n\t\t\ttitle={tooltipText}\n\t\t\tinteractive={interactive}\n\t\t\tenterTouchDelay={0}\n\t\t\tdisableFocusListener\n\t\t\topen={isTooltipOpen}\n\t\t\tonOpen={() => setIsTooltipOpen(true)}\n\t\t\tonClose={() => setIsTooltipOpen(false)}\n\t\t>\n\t\t\t{button}\n\t\t</Tooltip>\n\t);\n};\n\nexport default TooltipButton;\n","import { useEffect } from 'react';\nimport {\n\tuseForm as useReactHookForm,\n\tSubmitErrorHandler,\n\tControllerProps,\n\tget,\n\tFieldError,\n\tDeepMap,\n\tPath,\n} from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { UseFormProps, UseFormUtils } from './types';\n\nconst useForm = <Schema,>({\n\tonSubmit,\n\tdefaultValues,\n\tschema,\n\tfirstFocusElementName,\n}: UseFormProps<Schema>) => {\n\tconst reactHookFormUtils = useReactHookForm<Schema>({\n\t\tresolver: yupResolver(schema),\n\t\tdefaultValues,\n\t});\n\n\tconst {\n\t\tsetFocus,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = reactHookFormUtils;\n\n\t// Focus on the first element in the first render\n\tuseEffect(() => {\n\t\tif (firstFocusElementName) setFocus(firstFocusElementName);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\t/** Focus on the first error */\n\tconst onInvalid: SubmitErrorHandler<Schema> = err => {\n\t\tlet values: DeepMap<Schema, FieldError> = err;\n\t\t// recursively look for the first ref, then focus on it\n\t\twhile (values) {\n\t\t\tconst { ref } = values as FieldError;\n\t\t\tif (ref) {\n\t\t\t\tref!.focus?.();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t[values] = Object.values(values);\n\t\t}\n\t};\n\n\tconst getRequiredField: UseFormUtils<Schema>['getRequiredField'] = (\n\t\tfieldName,\n\t\trequired\n\t) => {\n\t\tif (!required) return [{}, {}];\n\t\tconst controllerRequiredProps: Pick<ControllerProps, 'rules'> = {\n\t\t\trules: {\n\t\t\t\trequired: true,\n\t\t\t},\n\t\t};\n\n\t\tconst field = get(errors, fieldName);\n\t\tconst componentRequiredProps: DynamicObject = {\n\t\t\trequired: true,\n\t\t\trules: { required: true },\n\t\t\t...(field && {\n\t\t\t\thelperText: `${field.message}`,\n\t\t\t\terror: true,\n\t\t\t}),\n\t\t};\n\n\t\treturn [controllerRequiredProps, componentRequiredProps];\n\t};\n\n\t/** Checks if the field is required from the yup schema */\n\tconst checkIfRequiredField = (fieldName: Path<Schema>) => {\n\t\tconst keys = fieldName.split('.').reverse();\n\t\tlet field = null;\n\t\t// recursively look for the field\n\t\twhile (keys.length) {\n\t\t\tconst key = keys.pop()!;\n\t\t\tfield = !field ? schema.fields[key] : field.fields[key];\n\t\t}\n\t\treturn field?.exclusiveTests?.required;\n\t};\n\n\tconst utils = {\n\t\tgetRequiredField,\n\t\tcheckIfRequiredField,\n\t\t...reactHookFormUtils,\n\t};\n\n\treturn {\n\t\thandleSubmit: handleSubmit(onSubmit, onInvalid),\n\t\tutils,\n\t};\n};\n\nexport default useForm;\n","import { FormGroup } from '@material-ui/core';\nimport { Controller, ControllerProps } from 'react-hook-form';\nimport { COMPONENTS } from '.';\nimport { FormItem, UseFormUtils } from './types';\n\n// const useFormWithSchema = ()\n\ntype Props<Schema> = FormItem<Schema> & {\n\tutils: UseFormUtils<Schema>;\n};\n\nconst FormField = <Schema,>({\n\t// utils\n\tutils: {\n\t\tcheckIfRequiredField,\n\t\tgetRequiredField,\n\t\tcontrol,\n\t\tregister,\n\t\tsetValue,\n\t\ttrigger,\n\t},\n\t// FormItemProps\n\ttype,\n\tname,\n\tlabel,\n\tboundNames,\n\tdependentFields,\n\trequired = false,\n\tdefaultValue = '',\n\t...formItemProps\n}: Props<Schema>) => {\n\tconst [controllerRequiredProps, componentRequiredProps] = getRequiredField(\n\t\tname,\n\t\trequired || checkIfRequiredField(name)\n\t);\n\n\t// render is added later for sure\n\tconst controllerProps: Partial<ControllerProps<Schema>> = {\n\t\tcontrol,\n\t\tname,\n\t\tdefaultValue,\n\t\t...controllerRequiredProps,\n\t};\n\n\tconst As = COMPONENTS[type];\n\tconst componentProps: Partial<React.ComponentProps<typeof As>> = {\n\t\tlabel,\n\t\t...formItemProps,\n\t\t...componentRequiredProps,\n\t};\n\n\tcontrollerProps.render = ({ field: { onChange, ...rest } }) => {\n\t\tconst { ref } = register(name);\n\t\tconst _onChange = (value: any, ...onChangeRest: any[]) => {\n\t\t\t// update all bound values\n\t\t\tboundNames?.forEach(pathName => {\n\t\t\t\tsetValue(pathName, value);\n\t\t\t});\n\t\t\t// trigger the change\n\t\t\tonChange(value, ...onChangeRest);\n\t\t\t// trigger a check on the dependent fields\n\t\t\tif (dependentFields) {\n\t\t\t\tdependentFields.forEach(pathName => {\n\t\t\t\t\ttrigger(pathName);\n\t\t\t\t});\n\t\t\t\t// also trigger a check on the current field\n\t\t\t\ttrigger(name);\n\t\t\t}\n\t\t};\n\t\t// TODO: create a wrapper/util that will pass the exact\n\t\t// props based on the type\n\t\treturn (\n\t\t\t// @ts-expect-error\n\t\t\t<As {...rest} {...componentProps} onChange={_onChange} ref={ref} />\n\t\t);\n\t};\n\n\t// NOTE: rhfProps contains: onChange, onBlur and value\n\n\treturn (\n\t\t<FormGroup>\n\t\t\t<Controller\n\t\t\t\t// We added the `render` so this can be ignored\n\t\t\t\t// eslint-disable-next-line max-len\n\t\t\t\t{...(controllerProps as ControllerProps<Schema>)}\n\t\t\t/>\n\t\t</FormGroup>\n\t);\n};\n\nexport default FormField;\n","import { Grid } from '@material-ui/core';\nimport ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\nimport TooltipButton from 'components/TooltipButton';\nimport Spacer from 'components/Spacer';\nimport { useState } from 'react';\nimport { FormProps } from './Form';\n\ninterface Props\n\textends Omit<React.HTMLAttributes<HTMLFormElement>, 'onSubmit'>,\n\t\tPick<FormProps<any>, 'onSubmit' | 'submitText'> {\n\tdoubleSubmit?: boolean;\n}\n\nconst FormContainer: React.FC<Props> = ({\n\tonSubmit,\n\tsubmitText,\n\tchildren,\n\tdoubleSubmit = false,\n\t...rest\n}) => {\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\tconst submitButton = (\n\t\t<ContainerWithCenteredItems container>\n\t\t\t<Grid container justify=\"center\" item xs={12} sm={8} md={6}>\n\t\t\t\t<TooltipButton\n\t\t\t\t\ttext={submitText}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\tbg=\"primary\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonKeyUp={() => setIsSubmitting(true)}\n\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</ContainerWithCenteredItems>\n\t);\n\treturn (\n\t\t<form onSubmit={onSubmit} noValidate autoComplete=\"off\" {...rest}>\n\t\t\t{doubleSubmit && (\n\t\t\t\t<>\n\t\t\t\t\t<Spacer spacing=\"3\" />\n\t\t\t\t\t{submitButton}\n\t\t\t\t\t<Spacer spacing=\"4\" />\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<Spacer spacing=\"2\" />\n\t\t\t{children}\n\t\t\t<Spacer spacing=\"2\" />\n\t\t\t{submitButton}\n\t\t</form>\n\t);\n};\n\nexport type { Props as FormContainerProps };\nexport default FormContainer;\n","import { SubmitHandler, DeepPartial, UnpackNestedValue } from 'react-hook-form';\nimport { ObjectSchema } from 'yup';\nimport { FormItem } from './types';\nimport useForm from './useForm';\nimport FormField from './FormField';\nimport FormContainer, { FormContainerProps } from './FormContainer';\n\ninterface Props<Schema> {\n\titems: Array<FormItem<Schema>>;\n\t/** @see https://github.com/react-hook-form/react-hook-form/issues/2129#issuecomment-657334424 */\n\tschema: ObjectSchema<object | any>;\n\tonSubmit: SubmitHandler<Schema>;\n\tdefaultValues?: UnpackNestedValue<DeepPartial<Schema>>;\n\tsubmitText?: string;\n\tfocusOnFirstElement?: boolean;\n\tfullWidth?: boolean;\n\tcontainerProps?: Partial<FormContainerProps>;\n}\n\nconst Form = <Schema,>({\n\titems,\n\tschema,\n\tonSubmit,\n\tdefaultValues,\n\tsubmitText = 'Submit',\n\tfocusOnFirstElement = false,\n\tfullWidth = false,\n\tcontainerProps = {},\n}: Props<Schema>) => {\n\tconst { handleSubmit, utils } = useForm({\n\t\tdefaultValues,\n\t\tonSubmit,\n\t\tschema,\n\t\t...(focusOnFirstElement && { firstFocusElementName: items[0]?.name }),\n\t});\n\n\tconst _containerProps = {\n\t\t...containerProps,\n\t\tstyle: {\n\t\t\t...containerProps?.style,\n\t\t\t...(fullWidth && { width: '100%' }),\n\t\t},\n\t};\n\n\treturn (\n\t\t<FormContainer\n\t\t\tonSubmit={handleSubmit}\n\t\t\tsubmitText={submitText}\n\t\t\t{..._containerProps}\n\t\t>\n\t\t\t{items.map(props => (\n\t\t\t\t<FormField\n\t\t\t\t\tkey={props.name}\n\t\t\t\t\tutils={utils}\n\t\t\t\t\t{...props}\n\t\t\t\t\trequired={props.required}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</FormContainer>\n\t);\n};\n\nexport type { Props as FormProps };\nexport default Form;\n","import styled from 'styled-components';\nimport { TextField, TextFieldProps } from '@material-ui/core';\nimport { forwardRef } from 'react';\n\nconst Wrapper = styled(TextField)`\n\t${({ theme }) => `\n\t\tmargin-bottom: ${theme.spacing(2)}px;\n\t`}\n`;\n\nconst Text = forwardRef<HTMLInputElement, TextFieldProps>(\n\t({ variant = 'outlined', helperText, ...props }, ref) => {\n\t\treturn (\n\t\t\t<Wrapper\n\t\t\t\tvariant={variant}\n\t\t\t\tinputRef={ref}\n\t\t\t\terror={!!helperText}\n\t\t\t\thelperText={helperText}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t);\n\t}\n);\n\nexport default Text;\n","import { TextFieldProps } from '@material-ui/core';\nimport { forwardRef } from 'react';\nimport Text from './Text';\n\nconst Password = forwardRef<HTMLInputElement, TextFieldProps>((props, ref) => (\n\t<Text {...props} type=\"password\" ref={ref} />\n));\n\nexport default Password;\n","import { forwardRef } from 'react';\nimport {\n\tFormControlLabel,\n\tCheckbox as MuiCheckbox,\n\tCheckboxProps,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport { PropsWithFormControl } from '../types';\n\nconst Wrapper = styled.div`\n\tmargin-left: 13px;\n`;\n\nconst Checkbox = forwardRef<\n\tHTMLButtonElement,\n\tPropsWithFormControl<CheckboxProps>\n>(({ label, value, ...props }, ref) => {\n\treturn (\n\t\t// TODO: Make this a reusable component\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<MuiCheckbox\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tchecked={!!value}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t</Wrapper>\n\t\t\t}\n\t\t\tlabel={label}\n\t\t/>\n\t);\n});\n\nexport default Checkbox;\n","import { cloneElement, useState } from 'react';\nimport { Popover as MuiPopover } from '@material-ui/core';\nimport { PopoverProps } from '@material-ui/core/Popover';\nimport TooltipButton from 'components/TooltipButton';\nimport styled from 'styled-components';\n\ninterface Props extends Omit<PopoverProps, 'open'> {\n\tcomponent: React.ReactElement;\n\tpassCallback?: boolean;\n\tpassDownOnCloseProp?: boolean;\n\ttooltip?: string;\n\ttext?: string;\n\ticon?: ReactElementOrElementType;\n\tbuttonComponent?: React.ReactElement;\n\topen?: boolean;\n}\n\nconst Wrapper = styled.div`\n\t&.MuiPopover-root {\n\t\tmargin: auto;\n\t\t/* width: '3.5rem', */\n\t\theight: 48px;\n\t\twidth: 48px;\n\n\t\tdisplay: inline-flex;\n\t\tposition: relative;\n\t\talign-items: center;\n\t\tvertical-align: middle;\n\t\t-moz-appearance: none;\n\t\tjustify-content: center;\n\t}\n\n\t& button {\n\t\tmargin: auto;\n\t}\n`;\n\nconst Popover = ({\n\tcomponent,\n\ttooltip,\n\ttext,\n\ticon,\n\tbuttonComponent,\n\tpassCallback = false,\n\tpassDownOnCloseProp = false,\n\tanchorOrigin = {\n\t\tvertical: 'bottom',\n\t\thorizontal: 'center',\n\t},\n\ttransformOrigin = {\n\t\tvertical: 'top',\n\t\thorizontal: 'center',\n\t},\n\t...rest\n}: Props) => {\n\tconst [anchorEl, setAnchorEl] = useState<\n\t\tHTMLButtonElement | HTMLAnchorElement | null\n\t>(null);\n\n\tconst onClick: ReactOnButtonClick = e => {\n\t\te.stopPropagation();\n\t\tsetAnchorEl(e.currentTarget);\n\t};\n\tconst onClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst isPopoverOpen = Boolean(anchorEl);\n\tconst id = isPopoverOpen ? '__popover' : undefined;\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{(buttonComponent &&\n\t\t\t\tcloneElement(buttonComponent, {\n\t\t\t\t\tonClick: (e => {\n\t\t\t\t\t\t// If you need to do a check before executing on click,\n\t\t\t\t\t\t// pass it back. (Eg: auth)\n\t\t\t\t\t\tif (passCallback) {\n\t\t\t\t\t\t\tif (!buttonComponent.props.onClick) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t'You forgot to pass an onClick.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbuttonComponent.props.onClick(() => onClick(e));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick(e);\n\t\t\t\t\t}) as ReactOnButtonClick,\n\t\t\t\t})) || (\n\t\t\t\t<TooltipButton\n\t\t\t\t\taria-describedby={id}\n\t\t\t\t\ttooltip={tooltip}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\ttext={text}\n\t\t\t\t\ticon={icon}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<MuiPopover\n\t\t\t\t{...rest}\n\t\t\t\tid={id}\n\t\t\t\topen={isPopoverOpen}\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tonClose={onClose}\n\t\t\t\tanchorOrigin={anchorOrigin}\n\t\t\t\ttransformOrigin={transformOrigin}\n\t\t\t>\n\t\t\t\t{(passDownOnCloseProp &&\n\t\t\t\t\tcloneElement(component, { popoverOnClose: onClose })) ||\n\t\t\t\t\tcomponent}\n\t\t\t</MuiPopover>\n\t\t</Wrapper>\n\t);\n};\n\nexport default Popover;\n","import { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { TwitterPicker } from 'react-color';\nimport Popover from 'components/Popover';\nimport { CheckBoxOutlineBlank as CheckboxIcon } from '@material-ui/icons';\nimport TooltipButton from 'components/TooltipButton';\nimport theme from 'theme';\n\nconst ColoredIcon = styled(CheckboxIcon)<{ $bg?: string }>`\n\tmargin-left: -2px;\n\twidth: 20px;\n\theight: 20px;\n\t${({ $bg }) => {\n\t\tif (!$bg) return '';\n\t\treturn `\n\t\t\tfill: ${$bg} !important;\n\t\t\tborder-radius: ${theme.shape.borderRadius};\n\t\t\tcolor: ${$bg} !important;\n\t\t\tbackground-color: ${$bg} !important;\n\t\t`;\n\t}}\n`;\n\ninterface Props {\n\tvalue: string;\n\tonChange: (hexColor: string) => void;\n}\n\nconst ColorPicker = forwardRef<TwitterPicker, Props>(\n\t({ value, onChange, ...rest }, ref) => {\n\t\t// console.log('{ value, onChange, ...rest }:', {\n\t\t// \tvalue,\n\t\t// \tonChange,\n\t\t// \t...rest,\n\t\t// });\n\t\treturn (\n\t\t\t<Popover\n\t\t\t\tbuttonComponent={\n\t\t\t\t\t<TooltipButton\n\t\t\t\t\t\ttooltip=\"Pick a color\"\n\t\t\t\t\t\ticon={<ColoredIcon fontSize=\"small\" $bg={value} />}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tcomponent={\n\t\t\t\t\t<TwitterPicker\n\t\t\t\t\t\tcolors={\n\t\t\t\t\t\t\tObject.values(theme.palette.color)\n\t\t\t\t\t\t\t// '#FCB900',\n\t\t\t\t\t\t\t// '#7BDCB5',\n\t\t\t\t\t\t\t// '#00D084',\n\t\t\t\t\t\t\t// '#8ED1FC',\n\t\t\t\t\t\t\t// '#0693E3',\n\t\t\t\t\t\t\t// '#ABB8C3',\n\t\t\t\t\t\t\t// '#EB144C',\n\t\t\t\t\t\t\t// '#F78DA7',\n\t\t\t\t\t\t\t// '#9900EF',\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolor={value}\n\t\t\t\t\t\tonChangeComplete={colors => {\n\t\t\t\t\t\t\tonChange(colors.hex);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t{...rest}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\t}\n);\n\nexport type { Props as ColorPickerProps };\nexport default ColorPicker;\n","import { forwardRef } from 'react';\nimport { FormControlLabel } from '@material-ui/core';\nimport ColorPickerComponent, { ColorPickerProps } from 'components/ColorPicker';\nimport { TwitterPicker } from 'react-color';\nimport styled from 'styled-components';\nimport { PropsWithFormControl } from '../types';\n\nconst Wrapper = styled.div`\n\tmargin-left: 13px;\n`;\n\nconst ColorPicker = forwardRef<\n\tTwitterPicker,\n\tPropsWithFormControl<ColorPickerProps>\n>(({ label, ...props }, ref) => (\n\t<FormControlLabel\n\t\tcontrol={\n\t\t\t<Wrapper>\n\t\t\t\t<ColorPickerComponent ref={ref} {...props} />\n\t\t\t</Wrapper>\n\t\t}\n\t\tlabel={label}\n\t/>\n));\n\nexport default ColorPicker;\n","import {\n\tFormControlLabel,\n\tGrid,\n\tSlider as MuiSlider,\n\tSliderProps,\n\tTypography,\n\tuseTheme,\n} from '@material-ui/core';\nimport { cloneElement, forwardRef } from 'react';\nimport { PropsWithFormControl } from '../types';\n\nconst Slider = forwardRef<\n\tHTMLSpanElement,\n\tPropsWithFormControl<SliderProps> & {\n\t\ticon: React.ReactElement;\n\t\thelperText: string;\n\t}\n>(\n\t(\n\t\t{\n\t\t\tname,\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\tcolor,\n\t\t\tvalueLabelDisplay = 'auto',\n\t\t\tonChange,\n\t\t\tdisabled,\n\t\t\thelperText,\n\t\t\t...rest\n\t\t},\n\t\tref\n\t) => {\n\t\tconst handleChange = (\n\t\t\tevent: React.ChangeEvent<{}>,\n\t\t\tnewValue: number | number[]\n\t\t) => {\n\t\t\tonChange(newValue);\n\t\t};\n\n\t\tconst _color = disabled ? '#bdbdbd' : color;\n\t\tconst theme = useTheme();\n\n\t\treturn (\n\t\t\t// \t<Typography id=\"continuous-slider\" gutterBottom>\n\t\t\t// \tVolume\n\t\t\t//   </Typography>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{icon && (\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t{(_color &&\n\t\t\t\t\t\t\t\t\tcloneElement(icon, { color: _color })) ||\n\t\t\t\t\t\t\t\t\ticon}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t<MuiSlider\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\taria-labelledby={name}\n\t\t\t\t\t\t\t\tvalueLabelDisplay={valueLabelDisplay}\n\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{helperText && (\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\tstyle={{ color: theme.palette.error.main }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{helperText}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t\tlabelPlacement=\"top\"\n\t\t\t\tlabel={label}\n\t\t\t\tstyle={{ alignItems: 'flex-start' }}\n\t\t\t/>\n\t\t);\n\t}\n);\n\nexport default Slider;\n","import { FormControlLabel } from '@material-ui/core';\nimport { Rating as MuiRating, RatingProps } from '@material-ui/lab';\nimport { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { PropsWithFormControl } from '../types';\n\nconst Wrapper = styled(MuiRating)`\n\t${({ color }) => {\n\t\treturn `\n\t\t\tcolor: ${color}\n\t\t`;\n\t}}\n`;\n\nconst Rating = forwardRef<HTMLSpanElement, PropsWithFormControl<RatingProps>>(\n\t({ name, label, value, ...rest }, ref) => {\n\t\treturn (\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<>\n\t\t\t\t\t\t{/* alignment */}\n\t\t\t\t\t\t{/* &nbsp; &nbsp; */}\n\t\t\t\t\t\t<Wrapper\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\taria-labelledby={name}\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\tvalue={Number(value)}\n\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* alignment */}\n\t\t\t\t\t\t{/* &nbsp; &nbsp; */}\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\tlabelPlacement=\"top\"\n\t\t\t\tlabel={label}\n\t\t\t\tstyle={{ alignItems: 'flex-start' }}\n\t\t\t/>\n\t\t);\n\t}\n);\n\nexport default Rating;\n","import Text from './Text';\nimport Password from './Password';\nimport Checkbox from './Checkbox';\nimport ColorPicker from './ColorPicker';\nimport Slider from './Slider';\nimport Rating from './Rating';\nimport { FormComponent } from '../types';\n\nconst COMPONENTS = {\n\t[FormComponent.Text]: Text,\n\t[FormComponent.Password]: Password,\n\t[FormComponent.Checkbox]: Checkbox,\n\t[FormComponent.ColorPicker]: ColorPicker,\n\t[FormComponent.Slider]: Slider,\n\t[FormComponent.Rating]: Rating,\n};\n\nexport default COMPONENTS;\n","import { Box, Paper, PaperProps } from '@material-ui/core';\nimport theme from 'theme';\n\nconst PaperWrapper: React.FC<PaperProps & { isMain?: boolean }> = ({\n\tchildren,\n\tisMain = false,\n\t...props\n}) => {\n\treturn (\n\t\t<Paper\n\t\t\t{...props}\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor:\n\t\t\t\t\ttheme.palette.background[\n\t\t\t\t\t\t`primary-${isMain ? 'darker' : 'lighter'}` as KeysOf<\n\t\t\t\t\t\t\ttypeof theme.palette.background\n\t\t\t\t\t\t>\n\t\t\t\t\t],\n\t\t\t\twidth: '100%',\n\t\t\t\t...props.style,\n\t\t\t}}\n\t\t>\n\t\t\t<Box p={3}>{children}</Box>\n\t\t</Paper>\n\t);\n};\n\nexport default PaperWrapper;\n","import { GridProps } from '@material-ui/core';\nimport ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\nimport { H1, H4 } from 'components/typography';\nimport PaperWrapper from './PaperWrapper';\n\nconst Section: React.FC<\n\tGridProps & { title: string; description?: string; isMain?: boolean }\n> = ({ title, description, isMain = false, children, ...rest }) => {\n\treturn (\n\t\t<ContainerWithCenteredItems\n\t\t\titem\n\t\t\txs={12}\n\t\t\tcontainer\n\t\t\twrap=\"wrap\"\n\t\t\tdirection=\"column\"\n\t\t\t{...rest}\n\t\t>\n\t\t\t<PaperWrapper isMain={isMain}>\n\t\t\t\t<H1>{title}</H1>\n\t\t\t\t{description && <H4>{description}</H4>}\n\t\t\t\t{children}\n\t\t\t</PaperWrapper>\n\t\t</ContainerWithCenteredItems>\n\t);\n};\n\nexport default Section;\n","import { Divider } from '@material-ui/core';\nimport { FormField } from 'components/Form';\n\nconst WrappedSectionItem = ({ name, utils, ...props }: any) => {\n\treturn (\n\t\t<>\n\t\t\t<Divider />\n\t\t\t<div style={{ padding: '20px 0' }}>\n\t\t\t\t<FormField key={name} utils={utils} name={name} {...props} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default WrappedSectionItem;\n","import Spacer from 'components/Spacer';\nimport { Fragment } from 'react';\nimport Section from './Section';\nimport WrappedSectionItem from './WrappedSectionItem';\n\nconst WrappedSection = ({\n\tname,\n\tdescription,\n\titems,\n\tutils,\n\tisMain = false,\n\t...rest\n}: any) => {\n\treturn (\n\t\t<>\n\t\t\t<Section\n\t\t\t\ttitle={name}\n\t\t\t\tdescription={description}\n\t\t\t\tisMain={isMain}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t{items.map((props: any, ind: any) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tname: sectionName,\n\t\t\t\t\t\ttitle: subTitle,\n\t\t\t\t\t\tdescription: subDescription,\n\t\t\t\t\t\titems: subItems,\n\t\t\t\t\t} = props;\n\t\t\t\t\treturn subItems ? (\n\t\t\t\t\t\t<Fragment key={subTitle + ind}>\n\t\t\t\t\t\t\t<WrappedSection\n\t\t\t\t\t\t\t\tname={subTitle}\n\t\t\t\t\t\t\t\tdescription={subDescription}\n\t\t\t\t\t\t\t\titems={subItems}\n\t\t\t\t\t\t\t\tutils={utils}\n\t\t\t\t\t\t\t\tstyle={{ maxWidth: '100%', width: '100%' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Spacer spacing=\"3\" />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<WrappedSectionItem\n\t\t\t\t\t\t\tkey={sectionName + ind}\n\t\t\t\t\t\t\tutils={utils}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Section>\n\t\t\t<Spacer spacing=\"3\" />\n\t\t</>\n\t);\n};\n\nexport default WrappedSection;\n"],"sourceRoot":""}