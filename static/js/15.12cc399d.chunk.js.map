{"version":3,"sources":["hooks/useOnGameEndLocal.tsx","store/redux/hooks/useGameProvider.tsx","store/redux/reducers/game/actions.tsx","store/redux/hooks/useLocalGame.tsx","routes/pages/Local.tsx","components/NoAccess/NoAccess.tsx","store/firebase/hooks/useFirebaseUtils.tsx","store/redux/reducers/firebase/selectors.tsx","store/firebase/hooks/useWatchOnlineGame.tsx","components/Button/Button.tsx","containers/Game/GameContainer.tsx","containers/Game/GameButton.tsx","containers/Game/GameSettings.tsx","hooks/useIsUnmounted.tsx","containers/Game/components/Cube.tsx","containers/Game/components/Bomb.tsx","containers/Game/components/Character.tsx","containers/Game/GameContent.tsx","containers/Game/components/Tile.tsx","containers/Game/components/PowerUp/PowerUp.tsx","containers/Game/components/Map.tsx","containers/Game/GameMap.tsx","containers/Game/Game.tsx"],"names":["useOnGameEndLocal","gameState","onGameEnd","push","useHistory","players","config","powerUpConfig","powerUps","exploding","duration","bomb","gameEndCondition","GameEndCondition","Lose","mappedPlayers","mapPlayersToGamePlayers","P1","P2","PlayerCondition","Alive","Win","useEffect","alivePlayers","Object","values","filter","playerCondition","length","setTimeout","BASE_PATH","endGame","currentOnlinePlayerId","keys","useGameProvider","dispatch","useDispatch","useSelector","makeSelectGameConfig","sizes","blockTileChance","tiles","makeSelectGamePlayers","updateGameSettings","useCallback","payload","type","SET_GAME_STATE","setGameState","startGame","generateDefaultGameState","updateGameMap","props","SET_GAME_MAP","generateNewCollisionCoordinates","gameMap","generateRandomGameMap","animate","updatePlayerDirection","direction","id","CHANGE_DIRECTION","updatePlayerIsWalking","isWalking","CHANGE_IS_WALKING","makeMove","MAKE_MOVE","triggerMove","onComplete","TRIGGER_MOVE","dropBomb","playerId","DROP_BOMB","triggerExplosion","bombId","cb","TRIGGER_EXPLOSION","triggerExplosionInGame","onExplosionComplete","ON_EXPLOSION_COMPLETE","triggerAnimation","TRIGGER_GAME_ANIMATION","toggleDimension","TOGGLE_GAME_DIMENSION","togglePerspective","TOGGLE_GAME_PERSPECTIVE","toggleTwoPlayer","TOGGLE_GAME_TWO_PLAYER","toggleNPC","TOGGLE_GAME_NPC","useLocalGame","gameConfig","provider","state","makeSelectGameState","gameStarted","useRef","current","GameType","Local","gamePlayers","reduce","acc","Wrapper","gameProps","Game","location","LoadingIndicator","H1Wrapper","styled","H1","theme","palette","color","error","NoAccess","children","message","PageContainer","fullHeight","Spacer","spacing","useFirebaseUtils","baseRefPath","firebase","useFirebase","useFirebaseConnect","getPath","subPath","create","a","newProps","subPaths","dataSnapshot","onSuccess","onError","read","pending","isLoaded","isEmpty","update","remove","selectFirebase","LazyJoin","loadable","defaultGameState","useWatchOnlineGame","refKey","onlineGameFromFirebase","createSelector","online","data","makeSelectOnlineGame","noWrapper","game","gameId","bombs","is3D","isSideView","animationCounter","started","isReady","onPlayerJoin","isNPC","playerConfig","generatePlayer","keyboardConfig","onPlayerExit","onStartGame","onPlayerDeath","Dead","Container","button","$variant","shape","borderRadius","padding","transition","hover","Button","forwardRef","ref","variant","size","rest","$size","memo","SettingsAndMap","div","CenteredDiv","$is3D","GameContainer","GameButton","active","onClick","style","width","wordWrap","marginBottom","wrapPreventFocusLock","GameSettings","buttons","useMemo","label","disabled","map","useIsUnmounted","isMounted","CuboidSide","Cuboid","Cube","top","left","backgroundColor","collisionIndex","className","_className","height","Array","fill","_","ind","getTransform","deg","incrementalSpeedRotationKeyframes","keyframes","join","FiringBomb","FiringCubeBomb","Bomb","firingDuration","explodingDuration","tileSize","useState","ExplosionState","Firing","explosionState","setExplosionState","shouldBindEvent","sleep","bombIds","Exploding","forEach","bId","kaboom","bombSize","bombPadding","bombStyleProps","position","animationDuration","Number","Explosive","Character","name","coordinates","highlight","_top","_left","success","transform","CUBE_BASE_TRANSFORM","Player","SpriteCharacter","GameContent","entries","playerState","isAlive","isPlayerDead","isSteppingOnFire","isPlayerSteppingOnFire","movement","character","tile","onPlayerIsWalking","DeadCharacter","onDeathAnimationComplete","bombProps","explosionSize","getPoweredUpValue","PowerUp","BombSize","firing","attrs","$top","$left","$color","background","secondary","primary","$collisionIndex","$animate","$fireSquare","css","fireSquare","x","y","rotateFrom","rotateTo","borderRadiusFrom","borderRadiusTo","FireHorizontal","FireVertical","info","fireAnimation","bounceAnimation","Tile","icons","Icon","icon","TileIcon","$mapSize","$tileSize","$isTopView","Map","mapSize","isTopView","shouldAnimate","usePrevious","outer","outerInd","square","innerInd","hasCollision","TileEnum","NonBreaking","Breaking","key","squareSize","isPowerUp","FireCore","GameMap","playerIntervals","usePlayerEvents","gameContainerProps","gameSettingProps","gameMapProps","gameContentProps","useGameProps"],"mappings":"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","file":"static/js/15.12cc399d.chunk.js","sourcesContent":["import { PlayerId } from 'containers/Game/types';\nimport { GameEndCondition, PlayerCondition } from 'enums';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BASE_PATH } from 'routes/constants';\nimport { ReactRouterState } from 'routes/types';\nimport { GameState } from 'store/redux/reducers/game/types';\nimport { mapPlayersToGamePlayers } from 'utils/game';\n\nconst useOnGameEndLocal = (\n\tgameState: GameState,\n\tonGameEnd: CallableFunction\n) => {\n\tconst { push } = useHistory<ReactRouterState>();\n\n\tconst {\n\t\tplayers,\n\t\tconfig: {\n\t\t\tpowerUps: powerUpConfig,\n\t\t\tduration: {\n\t\t\t\tbomb: { exploding },\n\t\t\t},\n\t\t},\n\t} = gameState;\n\tlet gameEndCondition = GameEndCondition.Lose;\n\n\tconst mappedPlayers = mapPlayersToGamePlayers(players, powerUpConfig);\n\n\tconst { P1, P2 } = mappedPlayers;\n\t// P1 or P2 alive will display You have won as both players are on the same screen\n\tif (P1 === PlayerCondition.Alive || (P2 && P2 === PlayerCondition.Alive)) {\n\t\tgameEndCondition = GameEndCondition.Win;\n\t}\n\n\tuseEffect(() => {\n\t\tconst alivePlayers = Object.values(mappedPlayers).filter(\n\t\t\tplayerCondition => playerCondition === PlayerCondition.Alive\n\t\t);\n\n\t\tif (alivePlayers.length > 1) return;\n\n\t\tsetTimeout(() => {\n\t\t\tonGameEnd();\n\t\t\tpush(`${BASE_PATH}/game-end`, {\n\t\t\t\tendGame: {\n\t\t\t\t\tplayers: mappedPlayers,\n\t\t\t\t\tcurrentOnlinePlayerId: Object.keys(\n\t\t\t\t\t\talivePlayers\n\t\t\t\t\t)[0] as PlayerId,\n\t\t\t\t\tgameEndCondition,\n\t\t\t\t},\n\t\t\t});\n\t\t}, exploding * 1000 + 1000);\n\t}, [exploding, gameEndCondition, mappedPlayers, onGameEnd, push]);\n};\n\nexport default useOnGameEndLocal;\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tsetGameState,\n\tsetGameMap,\n\ttriggerGameAnimation,\n\ttoggleGamePerspective,\n\ttoggleGameDimension,\n\ttoggleGameNPC,\n\ttoggleGameTwoPlayer,\n\tmakeMoveInGame,\n\tdropBombInGame,\n\tonExplosionCompleteInGame,\n\ttriggerMoveInGame,\n\ttriggerExplosionInGame,\n\tchangePlayerDirectionInGame,\n\tchangePlayerIsWalkingInGame,\n} from 'store/redux/reducers/game/actions';\nimport {\n\tAnimatableGameMap,\n\tBombFn,\n\tBombId,\n\tGameConfig,\n\tGameState,\n\tOnMoveProps,\n\tOnTriggerMove,\n} from 'store/redux/reducers/game/types';\nimport { generateDefaultGameState, generateRandomGameMap } from 'utils/game';\nimport {\n\tmakeSelectGameConfig,\n\tmakeSelectGamePlayers,\n} from 'store/redux/reducers/game/selectors';\nimport { OnDropBomb, PlayerId } from 'containers/Game/types';\nimport { Direction } from 'enums';\n\nconst useGameProvider = () => {\n\tconst dispatch = useDispatch();\n\tconst {\n\t\tsizes,\n\t\ttiles: { blockTileChance },\n\t} = useSelector(makeSelectGameConfig());\n\tconst players = useSelector(makeSelectGamePlayers());\n\n\tconst updateGameSettings = useCallback(\n\t\t(payload: GameState) => dispatch(setGameState(payload)),\n\t\t[dispatch]\n\t);\n\n\tconst startGame = useCallback(\n\t\t(payload: GameConfig) => {\n\t\t\tconst gameState = generateDefaultGameState(payload);\n\t\t\tupdateGameSettings(gameState);\n\t\t},\n\t\t[updateGameSettings]\n\t);\n\n\tconst updateGameMap = useCallback(\n\t\t(props: AnimatableGameMap) => dispatch(setGameMap(props)),\n\t\t[dispatch]\n\t);\n\n\tconst generateNewCollisionCoordinates = useCallback(\n\t\t() =>\n\t\t\tupdateGameMap({\n\t\t\t\tgameMap: generateRandomGameMap(sizes, blockTileChance, players),\n\t\t\t\tanimate: true,\n\t\t\t}),\n\t\t[blockTileChance, sizes, players, updateGameMap]\n\t);\n\n\t// #region GAME ACTIONS\n\tconst updatePlayerDirection = useCallback(\n\t\t(direction: Direction, id: PlayerId) => {\n\t\t\tdispatch(changePlayerDirectionInGame({ direction, id }));\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst updatePlayerIsWalking = useCallback(\n\t\t(isWalking: boolean, id: PlayerId) => {\n\t\t\tdispatch(changePlayerIsWalkingInGame({ isWalking, id }));\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst makeMove = useCallback(\n\t\t(props: OnMoveProps) => dispatch(makeMoveInGame(props)),\n\t\t[dispatch]\n\t);\n\n\tconst triggerMove = useCallback<OnTriggerMove>(\n\t\tprops =>\n\t\t\tdispatch(\n\t\t\t\ttriggerMoveInGame({\n\t\t\t\t\t...props,\n\t\t\t\t\tonComplete: makeMove,\n\t\t\t\t})\n\t\t\t),\n\t\t[dispatch, makeMove]\n\t);\n\n\tconst dropBomb = useCallback<OnDropBomb>(\n\t\tplayerId => dispatch(dropBombInGame(playerId)),\n\t\t[dispatch]\n\t);\n\n\tconst triggerExplosion = useCallback<BombFn>(\n\t\t(bombId, cb) => dispatch(triggerExplosionInGame(bombId, cb)),\n\t\t[dispatch]\n\t);\n\n\tconst onExplosionComplete = useCallback(\n\t\t(bombId: BombId) => {\n\t\t\tdispatch(onExplosionCompleteInGame(bombId));\n\t\t},\n\t\t[dispatch]\n\t);\n\t// #endregion\n\n\t// #region GAME SETTINGS\n\tconst triggerAnimation = useCallback(\n\t\t() => dispatch(triggerGameAnimation()),\n\t\t[dispatch]\n\t);\n\n\tconst toggleDimension = useCallback(() => dispatch(toggleGameDimension()), [\n\t\tdispatch,\n\t]);\n\n\tconst togglePerspective = useCallback(\n\t\t() => dispatch(toggleGamePerspective()),\n\t\t[dispatch]\n\t);\n\n\tconst toggleTwoPlayer = useCallback(() => dispatch(toggleGameTwoPlayer()), [\n\t\tdispatch,\n\t]);\n\n\tconst toggleNPC = useCallback(() => dispatch(toggleGameNPC()), [dispatch]);\n\t// #endregion\n\n\treturn {\n\t\tstartGame,\n\t\tupdateGameSettings,\n\t\tgenerateNewCollisionCoordinates,\n\t\t// GAME ACTIONS\n\t\tupdatePlayerDirection,\n\t\tupdatePlayerIsWalking,\n\t\tmakeMove,\n\t\ttriggerMove,\n\t\tdropBomb,\n\t\ttriggerExplosion,\n\t\tonExplosionComplete,\n\t\t// GAME SETTINGS\n\t\ttriggerAnimation,\n\t\ttoggleDimension,\n\t\ttogglePerspective,\n\t\ttoggleTwoPlayer,\n\t\ttoggleNPC,\n\t};\n};\n\ntype GameProvider = ReturnType<typeof useGameProvider>;\n\nexport type { GameProvider };\nexport default useGameProvider;\n","import {\n\tDROP_BOMB,\n\tCHANGE_DIRECTION,\n\tCHANGE_IS_WALKING,\n\tMAKE_MOVE,\n\tON_EXPLOSION_COMPLETE,\n\tSET_GAME_MAP,\n\tSET_GAME_STATE,\n\tTOGGLE_GAME_DIMENSION,\n\tTOGGLE_GAME_NPC,\n\tTOGGLE_GAME_PERSPECTIVE,\n\tTOGGLE_GAME_TWO_PLAYER,\n\tTRIGGER_EXPLOSION,\n\tTRIGGER_GAME_ANIMATION,\n\tTRIGGER_MOVE,\n} from './constants';\nimport { GameActionFn } from './types';\n\nconst setGameState: GameActionFn = payload => ({\n\ttype: SET_GAME_STATE,\n\tpayload,\n});\n\nconst setGameMap: GameActionFn = payload => ({\n\ttype: SET_GAME_MAP,\n\tpayload,\n});\n\n// #region GAME ACTIONS\nconst changePlayerDirectionInGame: GameActionFn = payload => ({\n\ttype: CHANGE_DIRECTION,\n\tpayload,\n});\n\nconst changePlayerIsWalkingInGame: GameActionFn = payload => ({\n\ttype: CHANGE_IS_WALKING,\n\tpayload,\n});\n\nconst makeMoveInGame: GameActionFn = payload => ({\n\ttype: MAKE_MOVE,\n\tpayload,\n});\n\nconst triggerMoveInGame: GameActionFn = payload => ({\n\ttype: TRIGGER_MOVE,\n\tpayload,\n});\n\nconst dropBombInGame: GameActionFn = payload => ({\n\ttype: DROP_BOMB,\n\tpayload,\n});\n\nconst triggerExplosionInGame: GameActionFn = (payload, cb) => ({\n\ttype: TRIGGER_EXPLOSION,\n\tpayload,\n\tcb,\n});\n\nconst onExplosionCompleteInGame: GameActionFn = payload => ({\n\ttype: ON_EXPLOSION_COMPLETE,\n\tpayload,\n});\n// #endregion\n\n// #region GAME SETTINGS\nconst triggerGameAnimation: GameActionFn = () => ({\n\ttype: TRIGGER_GAME_ANIMATION,\n});\n\nconst toggleGameDimension: GameActionFn = () => ({\n\ttype: TOGGLE_GAME_DIMENSION,\n});\n\nconst toggleGamePerspective: GameActionFn = () => ({\n\ttype: TOGGLE_GAME_PERSPECTIVE,\n});\n\nconst toggleGameTwoPlayer: GameActionFn = () => ({\n\ttype: TOGGLE_GAME_TWO_PLAYER,\n});\n\nconst toggleGameNPC: GameActionFn = () => ({\n\ttype: TOGGLE_GAME_NPC,\n});\n// #endregion\n\nexport {\n\tsetGameState,\n\tsetGameMap,\n\t// GAME ACTIONS\n\tchangePlayerDirectionInGame,\n\tchangePlayerIsWalkingInGame,\n\tmakeMoveInGame,\n\ttriggerMoveInGame,\n\tdropBombInGame,\n\ttriggerExplosionInGame,\n\tonExplosionCompleteInGame,\n\t// GAME SETTINGS\n\ttriggerGameAnimation,\n\ttoggleGameDimension,\n\ttoggleGamePerspective,\n\ttoggleGameTwoPlayer,\n\ttoggleGameNPC,\n};\n","import { GameApiHookLocal, PlayerId } from 'containers/Game/types';\nimport { GameType, PlayerCondition } from 'enums';\nimport { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { BASE_PATH } from 'routes/constants';\nimport makeSelectGameState from '../reducers/game/selectors';\nimport useGameProvider from './useGameProvider';\n\nconst useLocalGame: GameApiHookLocal = gameConfig => {\n\tconst { push } = useHistory();\n\tconst provider = useGameProvider();\n\tconst state = useSelector(makeSelectGameState());\n\n\tconst gameStarted = useRef(false);\n\n\tuseEffect(() => {\n\t\tif (gameStarted.current) return;\n\t\tif (!gameConfig) return;\n\t\tprovider.startGame(gameConfig);\n\t\tgameStarted.current = true;\n\t});\n\n\tif (!gameConfig) {\n\t\tpush(`${BASE_PATH}/room-creator/local`);\n\t\treturn null; // to satisfy lint\n\t}\n\n\treturn {\n\t\tprovider,\n\t\tstate,\n\t\ttype: GameType.Local,\n\t\tgamePlayers: Object.keys(state.players).reduce<\n\t\t\tRecord<PlayerId, PlayerCondition>\n\t\t>((acc, playerId) => {\n\t\t\tacc[playerId as PlayerId] = PlayerCondition.Alive;\n\t\t\treturn acc;\n\t\t}, {} as Record<PlayerId, PlayerCondition>),\n\t};\n};\n\nexport default useLocalGame;\n","import LoadingIndicator from 'components/LoadingIndicator';\nimport Game from 'containers/Game';\nimport { GameApi } from 'containers/Game/types';\nimport useOnGameEndLocal from 'hooks/useOnGameEndLocal';\nimport { RouteComponentPropsWithLocationState } from 'routes/types';\nimport useLocalGame from 'store/redux/hooks/useLocalGame';\n\n// need to wrap it as game props will be null if the user goes to\n// /local without going through /room-creator\nconst Wrapper = ({ gameProps }: { gameProps: GameApi }) => {\n\t// bug: old game state is passed, since the players are\n\t// already dead, ends the game. This will be fixed once\n\t// the redux store is injected rather then set on default\n\t// temporary workaround: start the game again to clear\n\t// I could create a revivePlayer function but not now..\n\tuseOnGameEndLocal(gameProps.state, gameProps.provider.startGame);\n\n\treturn <Game {...gameProps} />;\n};\n\nconst Local = ({ location }: RouteComponentPropsWithLocationState) => {\n\tconst gameConfig = location?.state?.gameConfig;\n\tconst gameProps = useLocalGame(gameConfig);\n\n\treturn gameProps ? <Wrapper gameProps={gameProps} /> : <LoadingIndicator />;\n};\n\nexport default Local;\n","import PageContainer from 'components/PageContainer';\nimport { H1 } from 'components/typography';\nimport theme from 'theme';\nimport styled from 'styled-components';\nimport Spacer from 'components/Spacer';\n\nconst H1Wrapper = styled(H1)`\n\tcolor: ${theme.palette.color.error};\n`;\n\ninterface Props {\n\tmessage?: string;\n}\n\nconst DEFAULT_ERROR_MESSAGE =\n\t\"Either the game is not found or you don't have access to it.\";\nconst NoAccess: React.FC<Props> = ({\n\tchildren,\n\tmessage = DEFAULT_ERROR_MESSAGE,\n}) => (\n\t<PageContainer fullHeight>\n\t\t<Spacer spacing=\"5\" />\n\t\t<H1Wrapper>{message}</H1Wrapper>\n\t\t<Spacer spacing=\"10\" />\n\t\t{children}\n\t</PageContainer>\n);\n\nexport default NoAccess;\n","import LoadingIndicator from 'components/LoadingIndicator';\nimport NoAccess from 'components/NoAccess';\nimport {\n\tisEmpty,\n\tisLoaded,\n\tuseFirebase,\n\tuseFirebaseConnect,\n} from 'react-redux-firebase';\nimport { FirebaseUtils } from '../types';\n// eslint-disable-next-line import/no-unresolved\n// import { fromFirestore } from '../utils';\n// TODO: notification-provider\n// import useNotificationProvider from 'store/redux/hooks/useNotificationProvider';\n\nconst useFirebaseUtils = <RootSchema extends FirebaseUtils.UpdateableValue>(\n\tbaseRefPath: string\n) => {\n\t// const { notifyError } = useNotificationProvider();\n\tconst firebase = useFirebase();\n\tuseFirebaseConnect([baseRefPath]);\n\n\tconst getPath = (subPath?: FirebaseUtils.RefSubPath) => {\n\t\treturn `${baseRefPath}${subPath || ''}`;\n\t};\n\n\tconst create = async <\n\t\tOverrideSchema extends FirebaseUtils.OverridableValue = void\n\t>(\n\t\t...[newProps, subPaths, cb]: FirebaseUtils.CreateProps<\n\t\t\tRootSchema,\n\t\t\tOverrideSchema\n\t\t>\n\t): FirebaseUtils.DataSnapshotPromise => {\n\t\ttry {\n\t\t\tconst dataSnapshot = await firebase.push(\n\t\t\t\tgetPath(subPaths),\n\t\t\t\tnewProps\n\t\t\t);\n\t\t\tcb?.onSuccess?.(dataSnapshot);\n\n\t\t\treturn dataSnapshot;\n\t\t} catch (err) {\n\t\t\tif (cb?.onError) cb.onError(err);\n\t\t\t// else notifyError(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst read = <OverrideSchema extends FirebaseUtils.OverridableValue = void>(\n\t\t...[state]: FirebaseUtils.ReadProps<RootSchema, OverrideSchema>\n\t) => {\n\t\tconst pending = !isLoaded(state) && <LoadingIndicator />;\n\t\tconst error = isEmpty(state) && <NoAccess />;\n\t\treturn {\n\t\t\tstate,\n\t\t\tpending,\n\t\t\terror,\n\t\t};\n\t};\n\n\tconst update = async <\n\t\tOverrideSchema extends FirebaseUtils.OverridableValue = void\n\t>(\n\t\t...[newProps, subPaths, cb]: FirebaseUtils.UpdateProps<\n\t\t\tRootSchema,\n\t\t\tOverrideSchema\n\t\t>\n\t): FirebaseUtils.DataSnapshotPromise => {\n\t\ttry {\n\t\t\tconst dataSnapshot = await firebase.update(\n\t\t\t\tgetPath(subPaths),\n\t\t\t\tnewProps\n\t\t\t);\n\t\t\tcb?.onSuccess?.(dataSnapshot);\n\t\t\treturn dataSnapshot;\n\t\t} catch (err) {\n\t\t\tif (cb?.onError) cb.onError(err);\n\t\t\t// else notifyError(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst push = async <\n\t\tOverrideSchema extends FirebaseUtils.OverridableValue = void\n\t>(\n\t\t...[newProps, subPaths, cb]: FirebaseUtils.PushProps<\n\t\t\tRootSchema,\n\t\t\tOverrideSchema\n\t\t>\n\t): FirebaseUtils.DataSnapshotPromise => {\n\t\ttry {\n\t\t\tconst dataSnapshot = await firebase.push(\n\t\t\t\tgetPath(subPaths),\n\t\t\t\tnewProps\n\t\t\t);\n\t\t\tcb?.onSuccess?.(dataSnapshot);\n\t\t\treturn dataSnapshot;\n\t\t} catch (err) {\n\t\t\tif (cb?.onError) cb.onError(err);\n\t\t\t// else notifyError(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\tconst remove = async (\n\t\t...[subPaths, cb]: FirebaseUtils.RemoveProps\n\t): FirebaseUtils.DataSnapshotPromise => {\n\t\ttry {\n\t\t\tconst dataSnapshot = await firebase.remove(getPath(subPaths));\n\t\t\tcb?.onSuccess?.(dataSnapshot);\n\t\t\treturn dataSnapshot;\n\t\t} catch (err) {\n\t\t\tif (cb?.onError) cb.onError(err);\n\t\t\t// else notifyError(err);\n\t\t\treturn err;\n\t\t}\n\t};\n\n\treturn {\n\t\tcreate,\n\t\tread,\n\t\tupdate,\n\t\tpush,\n\t\tremove,\n\t};\n};\n\nexport default useFirebaseUtils;\n","import { createSelector, Selector } from 'reselect';\nimport { Store } from 'store/redux/types';\nimport { FirebaseState } from './types';\n\n// Direct selector to the userPreferences state\nconst selectFirebase: Selector<Store, FirebaseState> = state => {\n\treturn state.firebase;\n};\n\n// Other specific selectors\nconst makeSelectAuth = () => {\n\treturn createSelector(selectFirebase, ({ auth }) => auth);\n};\n\nconst makeSelectProfile = () => {\n\treturn createSelector(selectFirebase, ({ profile }) => profile);\n};\n\nconst makeSelectOnlineGame = (id: string) => {\n\treturn createSelector(\n\t\tselectFirebase,\n\t\t({ data: { online } }) => online?.[id]\n\t);\n};\n\n// Default selector\nconst makeSelectFirebase = () => {\n\treturn createSelector(selectFirebase, state => state);\n};\n\nexport {\n\tselectFirebase,\n\tmakeSelectAuth,\n\tmakeSelectProfile,\n\tmakeSelectOnlineGame,\n};\nexport default makeSelectFirebase;\n","import { isEmpty, isLoaded, useFirebaseConnect } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\nimport { makeSelectOnlineGame } from 'store/redux/reducers/firebase/selectors';\nimport { generateDefaultGameState, generatePlayer } from 'utils/game';\nimport LoadingIndicator from 'components/LoadingIndicator';\nimport NoAccess from 'components/NoAccess';\nimport loadable from 'utils/loadable';\nimport { OnlineGame, PlayerConfig, PlayerId } from 'containers/Game/types';\nimport gameConfig from 'config';\nimport { PlayerCondition } from 'enums';\nimport useFirebaseUtils from './useFirebaseUtils';\n// TODO: notification-provider\n// import useNotificationProvider from 'store/redux/hooks/useNotificationProvider';\n\nconst LazyJoin = loadable(() => import(`routes/pages/Join`));\n\nconst defaultGameState = generateDefaultGameState();\n\nconst useWatchOnlineGame = (id: string) => {\n\t// const { notifyError } = useNotificationProvider();\n\tconst refKey = `online/${id}`;\n\tuseFirebaseConnect(refKey);\n\tconst { update, remove } = useFirebaseUtils<OnlineGame>(refKey);\n\n\tconst onlineGameFromFirebase = useSelector(makeSelectOnlineGame(id));\n\n\tconst pending = !isLoaded(onlineGameFromFirebase) && <LoadingIndicator />;\n\tconst error = isEmpty(onlineGameFromFirebase) && (\n\t\t<NoAccess>\n\t\t\t<LazyJoin noWrapper />\n\t\t</NoAccess>\n\t);\n\n\tconst game = onlineGameFromFirebase;\n\n\tconst onPlayerJoin = (playerId: PlayerId, isNPC = false) => {\n\t\t// set player as active\n\t\tupdate<OnlineGame['gamePlayers']>(\n\t\t\t{\n\t\t\t\t[playerId]: PlayerCondition.Alive,\n\t\t\t},\n\t\t\t'/gamePlayers'\n\t\t);\n\n\t\tconst playerConfig = generatePlayer(\n\t\t\tplayerId,\n\t\t\tgame.gameState.config,\n\t\t\t(!isNPC && gameConfig.keyboardConfig) || null\n\t\t);\n\n\t\t// put him in the game state\n\t\tupdate<PlayerConfig>(playerConfig, `/gameState/players/${playerId}`);\n\t};\n\n\tconst onStartGame = () => {\n\t\tupdate({\n\t\t\tstarted: true,\n\t\t});\n\t};\n\n\tconst onEndGame = () => {\n\t\tupdate({\n\t\t\tstarted: false,\n\t\t});\n\t};\n\n\tconst onPlayerExit = (playerId: PlayerId) => {\n\t\t// remove as active player\n\t\tremove(`/gamePlayers/${playerId}`);\n\t\t// remove him from the game state\n\t\tremove(`/gameState/players/${playerId}`);\n\n\t\t// 2 because the state won't be updated just yet\n\t\tif (game.gamePlayers && Object.keys(game.gamePlayers).length <= 2) {\n\t\t\tonEndGame();\n\t\t}\n\t};\n\n\tconst onPlayerDeath = (playerId: PlayerId) => {\n\t\tupdate<OnlineGame['gamePlayers']>(\n\t\t\t{\n\t\t\t\t[playerId]: PlayerCondition.Dead,\n\t\t\t},\n\t\t\t'/gamePlayers'\n\t\t);\n\t};\n\n\tconst _game: OnlineGame = {\n\t\tgameId: id,\n\t\tgameState: {\n\t\t\tplayers: game?.gameState?.players || defaultGameState.players,\n\t\t\tgameMap: game?.gameState?.gameMap || defaultGameState.gameMap,\n\t\t\tbombs: game?.gameState?.bombs || defaultGameState.bombs,\n\t\t\tpowerUps: game?.gameState?.powerUps || defaultGameState.powerUps,\n\t\t\tis3D: game?.gameState?.is3D || defaultGameState.is3D,\n\t\t\tisSideView:\n\t\t\t\tgame?.gameState?.isSideView || defaultGameState.isSideView,\n\t\t\tanimationCounter:\n\t\t\t\tgame?.gameState?.animationCounter ||\n\t\t\t\tdefaultGameState.animationCounter,\n\t\t\tconfig: game?.gameState?.config || defaultGameState.config,\n\t\t},\n\t\tgamePlayers: game?.gamePlayers || {},\n\t\tstarted: game?.started || false,\n\t};\n\n\treturn {\n\t\tgame: _game,\n\t\tpending,\n\t\terror,\n\t\tisReady: !pending && !error,\n\t\tonPlayerJoin,\n\t\tonPlayerExit,\n\t\tonStartGame,\n\t\tonPlayerDeath,\n\t};\n};\n\nexport default useWatchOnlineGame;\n","import { forwardRef, memo } from 'react';\nimport styled from 'styled-components';\nimport theme from 'theme';\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n\tvariant?: ColorVariants;\n\tsize?: BaseSize;\n}\n\nconst Container = styled.button<StyledProps<Props, 'variant' | 'size'>>`\n\tbackground-color: ${({ $variant }) =>\n\t\ttheme.palette.color[$variant as ColorVariants]};\n\t/* IGNORE SIZE FOR NOW */\n\tborder-radius: ${theme.shape.borderRadius};\n\tpadding: ${theme.shape.padding};\n\tcursor: pointer;\n\ttransition: background-color ${theme.transition.hover};\n\n\t&:hover {\n\t\tbackground-color: ${({ $variant }) =>\n\t\t\ttheme.palette.color[`${$variant}-lighter` as ColorVariants]};\n\t}\n`;\n\n// TODO: Remove this component as we got mui now, use TooltipButton\nconst Button = forwardRef<HTMLButtonElement, Props>(\n\t({ variant = 'default', size = 'medium', children, ...rest }, ref) => {\n\t\treturn (\n\t\t\t<Container $variant={variant} $size={size} ref={ref} {...rest}>\n\t\t\t\t{children}\n\t\t\t</Container>\n\t\t);\n\t}\n);\n\nexport type { Props as ButtonProps };\nexport default memo(Button);\n","import styled from 'styled-components';\nimport Spacer from 'components/Spacer';\nimport { PickedGameState } from './types';\n\nconst SettingsAndMap = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\n\t& > :first-child {\n\t\tmargin-right: 50px;\n\t\twidth: 15%;\n\t\t@media only screen and (max-width: 600px) {\n\t\t\twidth: 100%;\n\t\t\tmargin: 50px auto;\n\t\t\torder: 2;\n\t\t\t& button {\n\t\t\t\twidth: 80% !important;\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst CenteredDiv = styled.div<{ $is3D: boolean }>`\n\ttext-align: center;\n\t${({ $is3D }) => ($is3D && 'perspective: 1000') || ''}\n`;\n\ninterface Props extends PickedGameState<'is3D'> {}\n\nconst GameContainer: React.FC<Props> = ({ children, is3D }) => {\n\treturn (\n\t\t<CenteredDiv $is3D={is3D}>\n\t\t\t<Spacer spacing=\"2\" />\n\t\t\t<SettingsAndMap>{children}</SettingsAndMap>\n\t\t</CenteredDiv>\n\t);\n};\n\nexport type { Props as GameContainerProps };\nexport default GameContainer;\n","import Button from 'components/Button';\nimport { GamePayload } from 'store/redux/reducers/game/types';\nimport { wrapPreventFocusLock } from 'utils';\n\ninterface Props extends Partial<React.ComponentProps<typeof Button>> {\n\tactive?: boolean;\n\tonClick: ReactOnClick<GamePayload>;\n}\n\nconst GameButton = ({ active = false, onClick, children, ...rest }: Props) => {\n\treturn (\n\t\t<Button\n\t\t\tstyle={{ width: '100%', wordWrap: 'break-word', marginBottom: 10 }}\n\t\t\tvariant={active ? 'success' : 'warning'}\n\t\t\tonClick={wrapPreventFocusLock(onClick)}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{children}\n\t\t</Button>\n\t);\n};\n\nexport default GameButton;\n","import { memo, useMemo } from 'react';\nimport GameButton from './GameButton';\nimport { GameApi } from './types';\n\ninterface Props extends GameApi {}\n\nconst GameSettings = ({ state, provider }: Props) => {\n\tconst {\n\t\tgenerateNewCollisionCoordinates,\n\t\ttogglePerspective,\n\t\ttoggleDimension,\n\t} = provider;\n\n\tconst { is3D, isSideView } = state;\n\n\tconst buttons = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tlabel: 'New Collision Coordinates',\n\t\t\t\t\tonClick: generateNewCollisionCoordinates,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Toggle 3D (Experimental)',\n\t\t\t\t\tonClick: toggleDimension,\n\t\t\t\t\tactive: is3D,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Toggle Side View',\n\t\t\t\t\tonClick: togglePerspective,\n\t\t\t\t\tactive: isSideView,\n\t\t\t\t\tdisabled: !is3D,\n\t\t\t\t},\n\t\t\t].map(({ label, ...rest }) => (\n\t\t\t\t<GameButton key={label} {...rest}>\n\t\t\t\t\t{label}\n\t\t\t\t</GameButton>\n\t\t\t)),\n\t\t[\n\t\t\tgenerateNewCollisionCoordinates,\n\t\t\tis3D,\n\t\t\tisSideView,\n\t\t\ttoggleDimension,\n\t\t\ttogglePerspective,\n\t\t]\n\t);\n\n\treturn <div>{buttons}</div>;\n};\n\nexport type { Props as GameSettingsProps };\nexport default memo(GameSettings);\n","import { useEffect, useRef } from 'react';\n\nconst useIsUnmounted = () => {\n\tconst isMounted = useRef(true);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\treturn isMounted;\n};\n\nexport default useIsUnmounted;\n","import './Cube.scss';\nimport styled from 'styled-components';\nimport { TileProps } from '../types';\n\nconst CuboidSide = styled.div``;\n\nconst Cuboid = styled.div<StyledProps<TileProps, 'size'>>`\n\t${({ $size }) => `\n\t\t--tile-size: ${$size};\n\t`}\n\theight: calc(var(--tile-size) * 1px);\n\twidth: calc(var(--tile-size) * 1px);\n\ttransform-style: preserve-3d;\n\tposition: absolute;\n\ttransform-origin: center center;\n\ttransition: 300ms;\n\n\ttransform: scale(1, 1) translateZ(calc(var(--tile-size) / 2 * -1px));\n\n\t& > ${CuboidSide} {\n\t\tborder: 1px solid var(--primary-background);\n\n\t\theight: calc(var(--tile-size) * 1px);\n\t\twidth: calc(var(--tile-size) * 1px);\n\t\t/* transform-origin: 50% 50%; */\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\tposition: absolute;\n\n\t\t/** @see https://codepen.io/jh3y/pen/BaKqQLJ */\n\t\t&:nth-of-type(1) {\n\t\t\ttransform: translate(-50%, -50%) rotateX(-90deg)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(2) {\n\t\t\ttransform: translate(-50%, -50%) rotateX(-90deg) rotateY(180deg)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(3) {\n\t\t\ttransform: translate(-50%, -50%) rotateX(-90deg) rotateY(90deg)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(4) {\n\t\t\ttransform: translate(-50%, -50%) rotateX(-90deg) rotateY(-90deg)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(5) {\n\t\t\tbackground-color: var(--secondary-background);\n\t\t\ttransform: translate(-50%, -50%)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * 1px));\n\t\t}\n\t\t&:nth-of-type(6) {\n\t\t\ttransform: translate(-50%, -50%)\n\t\t\t\ttranslateZ(calc((var(--tile-size) / 2) * -1px)) rotateX(180deg);\n\t\t}\n\t}\n\n\t&.bouncy-block- {\n\t\t&no-animation {\n\t\t\ttransform: translateZ(calc(var(--tile-size) / 2 * 1px));\n\t\t\t& > ${CuboidSide} {\n\t\t\t\tbackground-color: var(--secondary-color);\n\t\t\t}\n\t\t}\n\n\t\t&0 {\n\t\t\ttransform: translateZ(calc(var(--tile-size) / 2 * 1px))\n\t\t\t\trotateX(0deg) rotateY(0deg) rotateZ(0deg);\n\t\t}\n\t}\n`;\n\nconst Cube = ({\n\tsize,\n\ttop,\n\tleft,\n\tanimate = false,\n\tvariant,\n\tcolor: backgroundColor,\n\tcollisionIndex,\n\tstyle,\n\tclassName,\n\t...rest\n}: TileProps) => {\n\tconst _className = `cuboid bouncy-block-${\n\t\t(!animate && 'no-animation') || collisionIndex || 0\n\t} ${variant}${(className && ` ${className}`) || ''}`;\n\n\treturn (\n\t\t<Cuboid\n\t\t\tclassName={_className}\n\t\t\tstyle={{ ...style, top, left, width: size, height: size }}\n\t\t\t$size={size}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{Array(6)\n\t\t\t\t.fill(0)\n\t\t\t\t.map((_, ind) => (\n\t\t\t\t\t<CuboidSide\n\t\t\t\t\t\tkey={ind}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...(backgroundColor && { backgroundColor }),\n\t\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\t\theight: size,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</Cuboid>\n\t);\n};\n\nexport default Cube;\n","import { ExplosionState, Explosive } from 'enums';\nimport useIsUnmounted from 'hooks/useIsUnmounted';\nimport { useEffect, useState } from 'react';\nimport {\n\tBomb as BombType,\n\tBombFn,\n\tBombId,\n\tGameConfigRanges,\n} from 'store/redux/reducers/game/types';\nimport styled, { keyframes } from 'styled-components';\nimport theme from 'theme';\nimport { sleep } from 'utils';\nimport { PlayerId } from '../types';\nimport Cube from './Cube';\n\nconst getTransform = (deg: number, is3D: boolean) => {\n\treturn `${\n\t\tis3D\n\t\t\t? `transform: translateZ(calc(var(--tile-size) / 2 * 2px)) rotateX(${deg}deg) rotateY(${deg}deg)`\n\t\t\t: `transform: rotate(${deg}deg)`\n\t};`;\n};\n\nconst incrementalSpeedRotationKeyframes = (is3D = false) => keyframes`\n\t0% { ${getTransform(0, is3D)} }\n\t\n\t/* 40% -> 100% */\n\t${Array(7)\n\t\t.fill(0)\n\t\t.map(\n\t\t\t(_, ind) =>\n\t\t\t\t/* start at 40% */\n\t\t\t\t`${(ind + 4) * 10}% { ${getTransform(\n\t\t\t\t\t/* gradually increase the rotation degree multiplier */\n\t\t\t\t\t(ind + 1) *\n\t\t\t\t\t\t((is3D && ((ind < 6 && 90) || 100)) ||\n\t\t\t\t\t\t\t(ind < 4 && 90) ||\n\t\t\t\t\t\t\t(ind < 6 && 270) ||\n\t\t\t\t\t\t\t360),\n\t\t\t\t\tis3D\n\t\t\t\t)} }`\n\t\t)\n\t\t.join('\\n')}\n`;\n\nconst FiringBomb = styled.div`\n\tanimation: ${incrementalSpeedRotationKeyframes()} linear forwards;\n`;\n\nconst FiringCubeBomb = styled(Cube)`\n\t/* ${({ size }) => `\n\t\t--tile-size: ${size};\n\t`} */\n\tanimation: ${incrementalSpeedRotationKeyframes(true)} linear forwards;\n`;\ninterface Props extends BombType {\n\t// skin: Skin;\n\tcolor: string;\n\ttileSize: GameConfigRanges.SquareSize;\n\tfiringDuration: number;\n\texplodingDuration: number;\n\ttriggerExplosion: BombFn;\n\tonExplosionComplete: BombFn;\n\tis3D: boolean;\n\t/** needed to not trigger the bomb explosion multiple times */\n\tcurrentOnlinePlayerId?: PlayerId;\n}\n\nconst Bomb = ({\n\tcolor: backgroundColor,\n\tfiringDuration,\n\texplodingDuration,\n\t// explosionSize,\n\tplayerId,\n\tcurrentOnlinePlayerId,\n\ttileSize,\n\tid,\n\ttop,\n\tleft,\n\ttriggerExplosion,\n\tonExplosionComplete,\n\tis3D,\n}: Props) => {\n\tconst [explosionState, setExplosionState] = useState<ExplosionState>(\n\t\tExplosionState.Firing\n\t);\n\n\tconst isMounted = useIsUnmounted();\n\n\t// We only want to bind the event if it's:\n\t// - not online game\n\t// - online game and it's the current player\n\tconst shouldBindEvent =\n\t\t!currentOnlinePlayerId || playerId === currentOnlinePlayerId;\n\n\tuseEffect(() => {\n\t\tconst kaboom = async () => {\n\t\t\tawait sleep(firingDuration * 1000);\n\t\t\tif (!isMounted.current) return;\n\t\t\ttriggerExplosion(id, async (bombIds: Set<BombId>) => {\n\t\t\t\tif (!isMounted.current) return;\n\t\t\t\t// update animation\n\t\t\t\tsetExplosionState(ExplosionState.Exploding);\n\t\t\t\tawait sleep(explodingDuration * 1000);\n\n\t\t\t\tif (!isMounted.current) return;\n\t\t\t\t// complete explosion for this bomb\n\t\t\t\tonExplosionComplete(id);\n\t\t\t\t// then complete the explosion for all the other bombs\n\t\t\t\t// that got caught in the fire complete their explosion\n\t\t\t\t// as the trigger was already handled in the reducer\n\t\t\t\tbombIds.forEach(bId => {\n\t\t\t\t\tonExplosionComplete(bId);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tif (shouldBindEvent) kaboom();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst bombSize = tileSize / 2;\n\tconst bombPadding = bombSize / 2;\n\n\tconst bombStyleProps: React.CSSProperties = {\n\t\tposition: 'absolute',\n\t\tbackgroundColor,\n\t\twidth: bombSize,\n\t\theight: bombSize,\n\t\ttop: top + bombPadding,\n\t\tleft: left + bombPadding,\n\t\tanimationDuration: `${firingDuration}s`,\n\t};\n\n\treturn (\n\t\t(explosionState === ExplosionState.Firing &&\n\t\t\t((!is3D && <FiringBomb style={bombStyleProps} />) || (\n\t\t\t\t<FiringCubeBomb\n\t\t\t\t\tsize={bombSize}\n\t\t\t\t\ttop={Number(bombStyleProps.top)}\n\t\t\t\t\tleft={Number(bombStyleProps.left)}\n\t\t\t\t\tanimate={false}\n\t\t\t\t\tvariant={Explosive.Bomb}\n\t\t\t\t\tcolor={theme.palette.color.error}\n\t\t\t\t\tcollisionIndex={1}\n\t\t\t\t\tstyle={bombStyleProps}\n\t\t\t\t/>\n\t\t\t))) ||\n\t\tnull\n\t);\n};\n\nexport default Bomb;\n","import Cube from 'containers/Game/components/Cube';\nimport { Direction, Player } from 'enums';\nimport { GameProvider } from 'store/redux/hooks/useGameProvider';\nimport { GameConfigRanges } from 'store/redux/reducers/game/types';\nimport theme from 'theme';\nimport { CUBE_BASE_TRANSFORM } from 'utils/game';\nimport { KeyboardConfig, PlayerId, TopLeftCoordinates } from '../types';\n// import CircleCharacter from './CircleCharacter';\nimport SpriteCharacter from './SpriteCharacter';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n\tid: PlayerId;\n\tcurrentOnlinePlayerId?: PlayerId;\n\tname: string;\n\tsize: GameConfigRanges.SquareSize;\n\ttileSize: GameConfigRanges.SquareSize;\n\tcoordinates: TopLeftCoordinates;\n\tkeyboardConfig?: KeyboardConfig;\n\tis3D: boolean;\n\thighlight?: boolean;\n\t// mainly for sprite\n\t// skin: Skin;\n\tonPlayerIsWalking?: GameProvider['updatePlayerIsWalking'];\n\tisWalking?: boolean;\n\tdirection?: Direction;\n\tisNPC?: boolean;\n}\n\nconst Character = ({\n\t/* skin */\n\tid,\n\tcurrentOnlinePlayerId,\n\tname,\n\tsize,\n\ttileSize,\n\tcoordinates: { top, left },\n\tkeyboardConfig,\n\tis3D,\n\thighlight = false,\n\t...rest\n}: Props) => {\n\tconst padding = (tileSize - size) / 2;\n\n\tconst _top = padding + top;\n\tconst _left = padding + left;\n\n\treturn (\n\t\t(is3D && (\n\t\t\t<Cube\n\t\t\t\tid={id}\n\t\t\t\tsize={size}\n\t\t\t\ttop={_top}\n\t\t\t\tleft={_left}\n\t\t\t\tanimate\n\t\t\t\tcolor={theme.palette.color.success}\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: CUBE_BASE_TRANSFORM,\n\t\t\t\t\t// top,\n\t\t\t\t\t// left,\n\t\t\t\t}}\n\t\t\t\tvariant={Player[id]}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t)) || (\n\t\t\t<SpriteCharacter\n\t\t\t\tid={id}\n\t\t\t\tcurrentOnlinePlayerId={currentOnlinePlayerId}\n\t\t\t\t// name={`${name}${id}`}\n\t\t\t\tname={id}\n\t\t\t\tcoordinates={{\n\t\t\t\t\ttop: _top,\n\t\t\t\t\tleft: _left,\n\t\t\t\t}}\n\t\t\t\tkeyboardConfig={keyboardConfig}\n\t\t\t\thighlight={highlight}\n\t\t\t\tsize={size}\n\t\t\t\t{...rest}\n\t\t\t/>\n\t\t)\n\t);\n};\n\nexport type { Props as CharacterProps };\nexport default Character;\n","import theme from 'theme';\nimport { PowerUp } from 'enums';\nimport {\n\tgetPoweredUpValue,\n\tisPlayerDead,\n\tisPlayerSteppingOnFire,\n} from 'utils/game';\nimport useWatchOnlineGame from 'store/firebase/hooks/useWatchOnlineGame';\nimport Bomb from './components/Bomb';\nimport Character from './components/Character';\nimport { GameApi, OnlineGameId, PlayerConfig, PlayerId } from './types';\nimport DeadCharacter from './components/DeadCharacter';\n\ntype PlayerEntry = Array<[PlayerId, PlayerConfig]>;\n\ninterface Props extends GameApi {\n\tgameId?: OnlineGameId;\n}\n\nconst GameContent = ({\n\tstate,\n\tprovider,\n\tplayerId: currentOnlinePlayerId,\n\tgameId,\n}: Props) => {\n\tconst {\n\t\ttriggerExplosion,\n\t\tonExplosionComplete,\n\t\tupdatePlayerIsWalking,\n\t} = provider;\n\tconst { gameMap, players, bombs, is3D, config } = state;\n\n\tconst { onPlayerDeath } = useWatchOnlineGame(gameId || '');\n\n\treturn (\n\t\t<>\n\t\t\t{(Object.entries(players) as PlayerEntry).map(\n\t\t\t\t([playerId, playerConfig]) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcoordinates,\n\t\t\t\t\t\tstate: playerState,\n\t\t\t\t\t\t...rest\n\t\t\t\t\t} = playerConfig;\n\n\t\t\t\t\tconst isAlive = !isPlayerDead(playerState, config.powerUps);\n\t\t\t\t\tconst isSteppingOnFire = isPlayerSteppingOnFire(\n\t\t\t\t\t\tgameMap,\n\t\t\t\t\t\tcoordinates,\n\t\t\t\t\t\tconfig.sizes.movement\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(isAlive && (\n\t\t\t\t\t\t\t<Character\n\t\t\t\t\t\t\t\tcurrentOnlinePlayerId={currentOnlinePlayerId}\n\t\t\t\t\t\t\t\tkey={playerId}\n\t\t\t\t\t\t\t\tname=\"Bomber\"\n\t\t\t\t\t\t\t\tsize={config.sizes.character}\n\t\t\t\t\t\t\t\ttileSize={config.sizes.tile}\n\t\t\t\t\t\t\t\tcoordinates={coordinates!}\n\t\t\t\t\t\t\t\tis3D={is3D}\n\t\t\t\t\t\t\t\thighlight={isSteppingOnFire}\n\t\t\t\t\t\t\t\tonPlayerIsWalking={updatePlayerIsWalking}\n\t\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)) || (\n\t\t\t\t\t\t\t<DeadCharacter\n\t\t\t\t\t\t\t\tid={playerId}\n\t\t\t\t\t\t\t\tname={playerId}\n\t\t\t\t\t\t\t\tkey={playerId}\n\t\t\t\t\t\t\t\tcoordinates={coordinates!}\n\t\t\t\t\t\t\t\tsize={config.sizes.character}\n\t\t\t\t\t\t\t\texplodingDuration={\n\t\t\t\t\t\t\t\t\tconfig.duration.bomb.exploding\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonDeathAnimationComplete={onPlayerDeath}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t)}\n\t\t\t{Object.values(bombs).map(({ id, playerId, ...bombProps }) => {\n\t\t\t\tconst playerState = players[playerId]?.state;\n\t\t\t\tif (!playerState) return null;\n\n\t\t\t\tconst explosionSize = getPoweredUpValue(\n\t\t\t\t\tplayerState,\n\t\t\t\t\tPowerUp.BombSize,\n\t\t\t\t\tconfig.powerUps\n\t\t\t\t);\n\n\t\t\t\treturn (\n\t\t\t\t\t<Bomb\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tid={id}\n\t\t\t\t\t\tplayerId={playerId}\n\t\t\t\t\t\tcurrentOnlinePlayerId={currentOnlinePlayerId}\n\t\t\t\t\t\t{...bombProps}\n\t\t\t\t\t\tcolor={theme.palette.color.error}\n\t\t\t\t\t\ttileSize={config.sizes.tile}\n\t\t\t\t\t\texplosionSize={explosionSize}\n\t\t\t\t\t\tfiringDuration={config.duration.bomb.firing}\n\t\t\t\t\t\texplodingDuration={config.duration.bomb.exploding}\n\t\t\t\t\t\ttriggerExplosion={triggerExplosion}\n\t\t\t\t\t\tonExplosionComplete={onExplosionComplete}\n\t\t\t\t\t\tis3D={is3D}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n};\n\nexport type { Props as GameContentProps };\nexport default GameContent;\n","import { bounceAnimation } from 'animations';\nimport { Explosive } from 'enums';\nimport { memo } from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport theme from 'theme';\nimport { Fire, TileProps } from '../types';\n\ntype WrapperProps = StyledProps<\n\tTileProps,\n\t| 'size'\n\t| 'top'\n\t| 'left'\n\t| 'animate'\n\t| 'color'\n\t| 'collisionIndex'\n\t| 'fireSquare'\n>;\n\nconst fireAnimation = (fireSquare: Fire) => {\n\tlet x = 0;\n\tlet y = 0;\n\tlet rotateFrom = '';\n\tlet rotateTo = '';\n\tlet borderRadiusFrom = '';\n\tlet borderRadiusTo = '';\n\n\tif (fireSquare === Explosive.FireHorizontal) {\n\t\tx = 1;\n\t} else if (fireSquare === Explosive.FireVertical) {\n\t\ty = 1;\n\t} else {\n\t\tx = 0.5;\n\t\ty = 0.5;\n\t\trotateFrom = ' rotate(90deg)';\n\t\trotateTo = ' rotate(360deg)';\n\t\tborderRadiusFrom = 'border-radius: 50%;';\n\t\tborderRadiusTo = 'border-radius: 0%;';\n\t}\n\n\treturn keyframes`\n\t\t// cool effect\n\t\t/* 0% { border: 16px solid ${theme.palette.background.primary}; transform: scale(${x}, ${y})${rotateFrom}; ${borderRadiusFrom} } */\n\t\t0% { background-color: ${theme.palette.background.primary}; transform: scale(${x}, ${y})${rotateFrom}; ${borderRadiusFrom} }\n\t\t20% { background-color: ${theme.palette.color.error}; }\n\t\t40% { background-color: ${theme.palette.color.info}; }\n\t\t50% { ${borderRadiusTo} }\n\t\t60% { background-color: ${theme.palette.color.error}; }\n\t\t80% { background-color: ${theme.palette.color.info}; }\n\t\t100% { background-color: ${theme.palette.color.error}; transform: scale(1)${rotateTo};  }\n\t`;\n};\n\nconst Wrapper = styled.div.attrs<WrapperProps>(\n\t({ $size, $top, $left, $color }) => ({\n\t\tstyle: {\n\t\t\twidth: $size,\n\t\t\theight: $size,\n\t\t\ttop: $top,\n\t\t\tleft: $left,\n\t\t\t...($color && { backgroundColor: $color }),\n\t\t},\n\t})\n)<WrapperProps>`\n\tposition: absolute;\n\t/* background-color: ${theme.palette.background.secondary}; */\n\tborder: 1px solid ${theme.palette.background.primary};\n\t${({ $color, $collisionIndex, $animate, $fireSquare }) => {\n\t\treturn (\n\t\t\t($fireSquare &&\n\t\t\t\tcss`\n\t\t\t\t\tborder: none;\n\t\t\t\t\tanimation: ${fireAnimation($fireSquare)}\n\t\t\t\t\t\tcalc(var(--firing-duration) / 2)\n\t\t\t\t\t\tvar(--ease-in-out-quint) forwards;\n\t\t\t\t`) ||\n\t\t\t($animate &&\n\t\t\t\t$color &&\n\t\t\t\tcss`\n\t\t\t\t\ttransform: scale(0, 0);\n\t\t\t\t\tz-index: 9999;\n\t\t\t\t\tanimation: ${bounceAnimation()}\n\t\t\t\t\t\tvar(--block-animation-duration) ease\n\t\t\t\t\t\tcalc(\n\t\t\t\t\t\t\t${$collisionIndex as number} *\n\t\t\t\t\t\t\t\tvar(--incremental-animation-delay)\n\t\t\t\t\t\t)\n\t\t\t\t\t\tforwards;\n\t\t\t\t`) ||\n\t\t\t''\n\t\t);\n\t}}\n`;\n\nconst Tile = ({\n\tsize,\n\ttop,\n\tleft,\n\tcolor,\n\tcollisionIndex,\n\tanimate = false,\n\tfireSquare,\n}: TileProps) => {\n\treturn (\n\t\t<Wrapper\n\t\t\t$size={size}\n\t\t\t$top={top}\n\t\t\t$left={left}\n\t\t\t$animate={animate}\n\t\t\t$color={color}\n\t\t\t$collisionIndex={collisionIndex}\n\t\t\t$fireSquare={fireSquare}\n\t\t/>\n\t);\n};\n\nexport default memo(Tile);\n","import { PowerUp as PowerUpEnum } from 'enums';\nimport TileIcon from '../TileIcon';\nimport icons from './icons';\n\ninterface Props {\n\tvariant: PowerUpEnum;\n\tsize: number;\n\ttop: number;\n\tleft: number;\n}\n\nconst PowerUp = ({ variant, top, left, size }: Props) => {\n\tconst { icon: Icon, color } = icons[variant];\n\treturn (\n\t\t<TileIcon $top={top} $left={left} $size={size}>\n\t\t\t<Icon color={color} />\n\t\t</TileIcon>\n\t);\n};\n\nexport default PowerUp;\n","import usePrevious from 'hooks/usePrevious';\nimport styled from 'styled-components';\nimport theme from 'theme';\nimport { Explosive, Tile as TileEnum } from 'enums';\nimport { isPowerUp } from 'utils/game';\nimport { useEffect } from 'react';\nimport { GameConfig } from 'store/redux/reducers/game/types';\nimport Cube from './Cube';\nimport Tile from './Tile';\nimport { GameMap, Square, TileProps } from '../types';\nimport PowerUp from './PowerUp';\n\ninterface Props {\n\tsizes: GameConfig['sizes'];\n\tgameMap: GameMap;\n\tis3D: boolean;\n\tisTopView: boolean;\n\tanimationCounter: number;\n}\n\nconst Wrapper = styled.div<\n\tStyledProps<Props, 'is3D' | 'isTopView'> & {\n\t\t$mapSize: GameConfig['sizes']['map'];\n\t\t$tileSize: GameConfig['sizes']['tile'];\n\t}\n>`\n\t${({ $mapSize, $tileSize }) => `\n\t\twidth: calc(${$tileSize}px * ${$mapSize});\n\t\theight: calc(${$tileSize}px * ${$mapSize});\n\t`}\n\tborder-radius: ${theme.shape.borderRadius};\n\tbackground-color: ${theme.palette.background.secondary};\n\tposition: relative;\n\tbox-shadow: 0 10px 20px rgba(0, 0, 0, 0.5), 0 6px 6px rgba(0, 0, 0, 0.6);\n\ttransition: transform var(--block-animation-duration);\n\n\t${({ $is3D, $isTopView }) => {\n\t\tlet style = '';\n\t\tif ($is3D) {\n\t\t\tstyle += 'transform-style: preserve-3d;';\n\t\t\tif (!$isTopView) {\n\t\t\t\tstyle += `\\ntransform: rotateX(-24deg) rotateY(-24deg) rotateX(90deg);`;\n\t\t\t}\n\t\t}\n\t\treturn style;\n\t}}\n`;\n\nconst Map: React.FC<Props> = ({\n\tsizes: { map: mapSize, tile: tileSize },\n\tgameMap,\n\tis3D,\n\tisTopView,\n\tanimationCounter,\n\tchildren,\n}) => {\n\t// we only need to animate when new collision is set using the button\n\t// need to prevent explosion diff from re-animating tiles\n\tconst previousAnimationCounter = usePrevious(animationCounter);\n\tlet shouldAnimate = animationCounter !== previousAnimationCounter;\n\n\tuseEffect(() => {\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\tshouldAnimate = true;\n\t}, []);\n\n\tlet collisionIndex = 1;\n\treturn (\n\t\t<Wrapper\n\t\t\t$mapSize={mapSize}\n\t\t\t$tileSize={tileSize}\n\t\t\t$is3D={is3D}\n\t\t\t$isTopView={isTopView}\n\t\t>\n\t\t\t{Object.keys(gameMap).map((outer, outerInd) => {\n\t\t\t\treturn Object.values(gameMap[outer]).map(\n\t\t\t\t\t(square: Square, innerInd) => {\n\t\t\t\t\t\tconst hasCollision =\n\t\t\t\t\t\t\tsquare === TileEnum.NonBreaking ||\n\t\t\t\t\t\t\tsquare === TileEnum.Breaking;\n\n\t\t\t\t\t\tconst key = `${outerInd}_${innerInd}`;\n\t\t\t\t\t\tconst squareSize = tileSize;\n\t\t\t\t\t\tconst top = outerInd * tileSize;\n\t\t\t\t\t\tconst left = innerInd * tileSize;\n\n\t\t\t\t\t\t// if it's a PowerUp\n\t\t\t\t\t\tif (isPowerUp(square)) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<PowerUp\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tsize={squareSize}\n\t\t\t\t\t\t\t\t\tvariant={square as ValuesOf<typeof PowerUp>}\n\t\t\t\t\t\t\t\t\ttop={top}\n\t\t\t\t\t\t\t\t\tleft={left}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet fireSquare;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsquare === Explosive.FireCore ||\n\t\t\t\t\t\t\tsquare === Explosive.FireHorizontal ||\n\t\t\t\t\t\t\tsquare === Explosive.FireVertical\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tfireSquare = square;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// TODO: Get this key properly\n\t\t\t\t\t\tconst props: TileProps & { key: string } = {\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tsize: squareSize,\n\t\t\t\t\t\t\ttop,\n\t\t\t\t\t\t\tleft,\n\t\t\t\t\t\t\tanimate: shouldAnimate,\n\t\t\t\t\t\t\tvariant: square,\n\t\t\t\t\t\t\tfireSquare,\n\t\t\t\t\t\t\t...(hasCollision && {\n\t\t\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\t\t\ttheme.palette.color[\n\t\t\t\t\t\t\t\t\t\tsquare === TileEnum.NonBreaking\n\t\t\t\t\t\t\t\t\t\t\t? 'secondary'\n\t\t\t\t\t\t\t\t\t\t\t: 'primary'\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tcollisionIndex: collisionIndex++,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t(is3D &&\n\t\t\t\t\t\t\t\t((hasCollision && <Cube {...props} />) || (\n\t\t\t\t\t\t\t\t\t<Tile {...props} />\n\t\t\t\t\t\t\t\t))) || <Tile {...props} />\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t})}\n\t\t\t{children}\n\t\t</Wrapper>\n\t);\n};\n\nexport default Map;\n","import { GameConfig } from 'store/redux/reducers/game/types';\nimport Map from './components/Map';\nimport { PickedGameState } from './types';\n\ninterface Props\n\textends PickedGameState<\n\t\t'gameMap' | 'is3D' | 'isSideView' | 'animationCounter'\n\t> {\n\tsizes: GameConfig['sizes'];\n}\n\nconst GameMap: React.FC<Props> = ({\n\tsizes,\n\tchildren,\n\tgameMap,\n\tis3D,\n\tisSideView,\n\tanimationCounter,\n}) => {\n\treturn (\n\t\t<Map\n\t\t\tsizes={sizes}\n\t\t\tgameMap={gameMap}\n\t\t\tis3D={is3D}\n\t\t\tisTopView={!isSideView}\n\t\t\tanimationCounter={animationCounter}\n\t\t>\n\t\t\t{children}\n\t\t</Map>\n\t);\n};\n\nexport type { Props as GameMapProps };\nexport default GameMap;\n","import usePlayerEvents from 'store/redux/hooks/usePlayerEvents';\nimport GameContainer from './GameContainer';\nimport GameSettings from './GameSettings';\nimport GameContent from './GameContent';\nimport GameMap from './GameMap';\nimport { GameApi } from './types';\n\nconst useGameProps = (props: GameApi) => {\n\tconst {\n\t\tstate: { is3D, gameMap, isSideView, animationCounter, config },\n\t\t// provider,\n\t\tgameId,\n\t\ttype,\n\t} = props;\n\n\tconst gameContainerProps = {\n\t\tis3D,\n\t};\n\n\tconst gameSettingProps = {\n\t\t...props,\n\t\ttype,\n\t};\n\n\tconst gameMapProps = {\n\t\tsizes: config.sizes,\n\t\tgameMap,\n\t\tis3D,\n\t\tisSideView,\n\t\tanimationCounter,\n\t};\n\n\tconst gameContentProps = {\n\t\t...props,\n\t\tgameId,\n\t};\n\n\treturn {\n\t\tgameContainerProps,\n\t\tgameSettingProps,\n\t\tgameMapProps,\n\t\tgameContentProps,\n\t};\n};\n\nconst Game = (props: GameApi) => {\n\tconst playerIntervals = usePlayerEvents(props);\n\tconst {\n\t\tgameContainerProps,\n\t\tgameSettingProps,\n\t\tgameMapProps,\n\t\tgameContentProps,\n\t} = useGameProps(props);\n\n\treturn (\n\t\t<GameContainer {...gameContainerProps}>\n\t\t\t<GameSettings {...gameSettingProps} />\n\t\t\t<GameMap {...gameMapProps}>\n\t\t\t\t<GameContent {...gameContentProps} />\n\t\t\t</GameMap>\n\t\t\t{playerIntervals}\n\t\t</GameContainer>\n\t);\n};\n\nexport default Game;\n"],"sourceRoot":""}